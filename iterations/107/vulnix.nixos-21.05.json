[
  {
    "name": "apprise-0.9.3",
    "pname": "apprise",
    "version": "0.9.3",
    "affected_by": [
      "CVE-2021-39229"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-39229": 7.5
    },
    "maintainers": [
      {
        "github": "marsam",
        "email": "marsam@users.noreply.github.com"
      }
    ],
    "description": {
      "CVE-2021-39229": "Apprise is an open source library which allows you to send a notification to almost all of the most popular notification services available. In affected versions users who use Apprise granting them access to the IFTTT plugin (which just comes out of the box) are subject to a denial of service attack on an inefficient regular expression. The vulnerable regular expression is [here](https://github.com/caronc/apprise/blob/0007eade20934ddef0aba38b8f1aad980cfff253/apprise/plugins/NotifyIFTTT.py#L356-L359). The problem has been patched in release version 0.9.5.1. Users who are unable to upgrade are advised to remove `apprise/plugins/NotifyIFTTT.py` to eliminate the service."
    }
  },
  {
    "name": "bento4-1.6.0-637",
    "pname": "bento4",
    "version": "1.6.0-637",
    "affected_by": [
      "CVE-2021-32265"
    ],
    "whitelisted": [
      "CVE-2020-23912"
    ],
    "cvssv3_basescore": {
      "CVE-2020-23912": 5.5,
      "CVE-2021-32265": 8.8
    },
    "maintainers": [
      {
        "github": "makefu",
        "email": "makefu@syntax-fehler.de"
      }
    ],
    "description": {
      "CVE-2020-23912": "An issue was discovered in Bento4 through v1.6.0-637. A NULL pointer dereference exists in the function AP4_StszAtom::GetSampleSize() located in Ap4StszAtom.cpp. It allows an attacker to cause Denial of Service.",
      "CVE-2021-32265": "An issue was discovered in Bento4 through v1.6.0-637. A global-buffer-overflow exists in the function AP4_MemoryByteStream::WritePartial() located in Ap4ByteStream.cpp. It allows an attacker to cause code execution or information disclosure."
    }
  },
  {
    "name": "code-server-3.8.0",
    "pname": "code-server",
    "version": "3.8.0",
    "affected_by": [
      "CVE-2021-3810"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-3810": 7.5
    },
    "maintainers": [
      {
        "github": "offlinehacker",
        "email": "jaka@x-truder.net"
      }
    ],
    "description": {
      "CVE-2021-3810": "code-server is vulnerable to Inefficient Regular Expression Complexity"
    }
  },
  {
    "name": "containerd-1.5.7",
    "pname": "containerd",
    "version": "1.5.7",
    "affected_by": [
      "CVE-2021-41103"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-41103": 7.8
    },
    "maintainers": [
      {
        "github": "offlinehacker",
        "email": "jaka@x-truder.net"
      },
      {
        "github": "vdemeester",
        "email": "vincent@sbr.pm"
      },
      {
        "github": "kalbasit",
        "email": "wael.nasreddine@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-41103": "containerd is an open source container runtime with an emphasis on simplicity, robustness and portability. A bug was found in containerd where container root directories and some plugins had insufficiently restricted permissions, allowing otherwise unprivileged Linux users to traverse directory contents and execute programs. When containers included executable programs with extended permission bits (such as setuid), unprivileged Linux users could discover and execute those programs. When the UID of an unprivileged Linux user on the host collided with the file owner or group inside a container, the unprivileged Linux user on the host could discover, read, and modify those files. This vulnerability has been fixed in containerd 1.4.11 and containerd 1.5.7. Users should update to these version when they are released and may restart containers or update directory permissions to mitigate the vulnerability. Users unable to update should limit access to the host to trusted users. Update directory permission on container bundles directories."
    }
  },
  {
    "name": "couchdb-3.1.1",
    "pname": "couchdb",
    "version": "3.1.1",
    "affected_by": [
      "CVE-2021-38295"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-38295": 7.3
    },
    "maintainers": [
      {
        "github": "lostnet",
        "email": "lost.networking@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-38295": "In Apache CouchDB, a malicious user with permission to create documents in a database is able to attach a HTML attachment to a document. If a CouchDB admin opens that attachment in a browser, e.g. via the CouchDB admin interface Fauxton, any JavaScript code embedded in that HTML attachment will be executed within the security context of that admin. A similar route is available with the already deprecated _show and _list functionality. This privilege escalation vulnerability allows an attacker to add or remove data in any database or make configuration changes. This issue affected Apache CouchDB prior to 3.1.2"
    }
  },
  {
    "name": "curl-7.76.1",
    "pname": "curl",
    "version": "7.76.1",
    "affected_by": [
      "CVE-2021-22946",
      "CVE-2021-22947"
    ],
    "whitelisted": [
      "CVE-2021-22897",
      "CVE-2021-22898",
      "CVE-2021-22901",
      "CVE-2021-22922",
      "CVE-2021-22923",
      "CVE-2021-22925",
      "CVE-2021-22926"
    ],
    "cvssv3_basescore": {
      "CVE-2021-22897": 5.3,
      "CVE-2021-22898": 3.1,
      "CVE-2021-22901": 8.1,
      "CVE-2021-22922": 6.5,
      "CVE-2021-22923": 5.3,
      "CVE-2021-22925": 5.3,
      "CVE-2021-22926": 7.5,
      "CVE-2021-22946": 7.5,
      "CVE-2021-22947": 5.9
    },
    "maintainers": [
      {
        "github": "lovek323",
        "email": "jason@oconal.id.au"
      },
      {
        "github": "lovek323",
        "email": "jason@oconal.id.au"
      },
      {
        "github": "lovek323",
        "email": "jason@oconal.id.au"
      }
    ],
    "description": {
      "CVE-2021-22897": "curl 7.61.0 through 7.76.1 suffers from exposure of data element to wrong session due to a mistake in the code for CURLOPT_SSL_CIPHER_LIST when libcurl is built to use the Schannel TLS library. The selected cipher set was stored in a single \"static\" variable in the library, which has the surprising side-effect that if an application sets up multiple concurrent transfers, the last one that sets the ciphers will accidentally control the set used by all transfers. In a worst-case scenario, this weakens transport security significantly.",
      "CVE-2021-22898": "curl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol.",
      "CVE-2021-22901": "curl 7.75.0 through 7.76.1 suffers from a use-after-free vulnerability resulting in already freed memory being used when a TLS 1.3 session ticket arrives over a connection. A malicious server can use this in rare unfortunate circumstances to potentially reach remote code execution in the client. When libcurl at run-time sets up support for TLS 1.3 session tickets on a connection using OpenSSL, it stores pointers to the transfer in-memory object for later retrieval when a session ticket arrives. If the connection is used by multiple transfers (like with a reused HTTP/1.1 connection or multiplexed HTTP/2 connection) that first transfer object might be freed before the new session is established on that connection and then the function will access a memory buffer that might be freed. When using that memory, libcurl might even call a function pointer in the object, making it possible for a remote code execution if the server could somehow manage to get crafted memory content into the correct place in memory.",
      "CVE-2021-22922": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
      "CVE-2021-22923": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
      "CVE-2021-22925": "curl supports the `-t` command line option, known as `CURLOPT_TELNETOPTIONS`in libcurl. This rarely used option is used to send variable=content pairs toTELNET servers.Due to flaw in the option parser for sending `NEW_ENV` variables, libcurlcould be made to pass on uninitialized data from a stack based buffer to theserver. Therefore potentially revealing sensitive internal information to theserver using a clear-text network protocol.This could happen because curl did not call and use sscanf() correctly whenparsing the string provided by the application.",
      "CVE-2021-22926": "libcurl-using applications can ask for a specific client certificate to be used in a transfer. This is done with the `CURLOPT_SSLCERT` option (`--cert` with the command line tool).When libcurl is built to use the macOS native TLS library Secure Transport, an application can ask for the client certificate by name or with a file name - using the same option. If the name exists as a file, it will be used instead of by name.If the appliction runs with a current working directory that is writable by other users (like `/tmp`), a malicious user can create a file name with the same name as the app wants to use by name, and thereby trick the application to use the file based cert instead of the one referred to by name making libcurl send the wrong client certificate in the TLS connection handshake.",
      "CVE-2021-22946": "A user can tell curl >= 7.20.0 and <= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network.",
      "CVE-2021-22947": "When curl >= 7.20.0 and <= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker's injected data comes from the TLS-protected server."
    }
  },
  {
    "name": "discourse-2.7.8",
    "pname": "discourse",
    "version": "2.7.8",
    "affected_by": [
      "CVE-2021-41082"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-41082": 7.5
    },
    "maintainers": [
      {
        "github": "talyz",
        "email": "kim.lindberger@gmail.com"
      },
      {
        "github": "talyz",
        "email": "kim.lindberger@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-41082": "Discourse is a platform for community discussion. In affected versions any private message that includes a group had its title and participating user exposed to users that do not have access to the private messages. However, access control for the private messages was not compromised as users were not able to view the posts in the leaked private message despite seeing it in their inbox. The problematic commit was reverted around 32 minutes after it was made. Users are encouraged to upgrade to the latest commit if they are running Discourse against the `tests-passed` branch."
    }
  },
  {
    "name": "electron-10.4.7",
    "pname": "electron",
    "version": "10.4.7",
    "affected_by": [
      "CVE-2021-39184"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-39184": 8.6
    },
    "maintainers": [
      {
        "github": "travisbhartwell",
        "email": "nafai@travishartwell.net"
      },
      {
        "github": "manveru",
        "email": "m.fellinger@gmail.com"
      },
      {
        "github": "prusnak",
        "email": "pavol@rusnak.io"
      }
    ],
    "description": {
      "CVE-2021-39184": "Electron is a framework for writing cross-platform desktop applications using JavaScript, HTML and CSS. A vulnerability in versions prior to 11.5.0, 12.1.0, and 13.3.0 allows a sandboxed renderer to request a \"thumbnail\" image of an arbitrary file on the user's system. The thumbnail can potentially include significant parts of the original file, including textual data in many cases. Versions 15.0.0-alpha.10, 14.0.0, 13.3.0, 12.1.0, and 11.5.0 all contain a fix for the vulnerability. Two workarounds aside from upgrading are available. One may make the vulnerability significantly more difficult for an attacker to exploit by enabling `contextIsolation` in one's app. One may also disable the functionality of the `createThumbnailFromPath` API if one does not need it."
    }
  },
  {
    "name": "envoy-1.16.4",
    "pname": "envoy",
    "version": "1.16.4",
    "affected_by": [
      "CVE-2021-39162",
      "CVE-2021-39204",
      "CVE-2021-39206"
    ],
    "whitelisted": [
      "CVE-2021-32777",
      "CVE-2021-32778",
      "CVE-2021-32779",
      "CVE-2021-32781"
    ],
    "cvssv3_basescore": {
      "CVE-2021-32777": 8.3,
      "CVE-2021-32778": 7.5,
      "CVE-2021-32779": 8.3,
      "CVE-2021-32781": 7.5,
      "CVE-2021-39162": 8.6,
      "CVE-2021-39204": 7.5,
      "CVE-2021-39206": 8.6
    },
    "maintainers": [
      {
        "github": "lukegb",
        "email": "nix@lukegb.com"
      }
    ],
    "description": {
      "CVE-2021-32777": "Envoy is an open source L7 proxy and communication bus designed for large modern service oriented architectures. In affected versions when ext-authz extension is sending request headers to the external authorization service it must merge multiple value headers according to the HTTP spec. However, only the last header value is sent. This may allow specifically crafted requests to bypass authorization. Attackers may be able to escalate privileges when using ext-authz extension or back end service that uses multiple value headers for authorization. A specifically constructed request may be delivered by an untrusted downstream peer in the presence of ext-authz extension. Envoy versions 1.19.1, 1.18.4, 1.17.4, 1.16.5 contain fixes to the ext-authz extension to correctly merge multiple request header values, when sending request for authorization.",
      "CVE-2021-32778": "Envoy is an open source L7 proxy and communication bus designed for large modern service oriented architectures. In affected versions envoy’s procedure for resetting a HTTP/2 stream has O(N^2) complexity, leading to high CPU utilization when a large number of streams are reset. Deployments are susceptible to Denial of Service when Envoy is configured with high limit on H/2 concurrent streams. An attacker wishing to exploit this vulnerability would require a client opening and closing a large number of H/2 streams. Envoy versions 1.19.1, 1.18.4, 1.17.4, 1.16.5 contain fixes to reduce time complexity of resetting HTTP/2 streams. As a workaround users may limit the number of simultaneous HTTP/2 dreams for upstream and downstream peers to a low number, i.e. 100.",
      "CVE-2021-32779": "Envoy is an open source L7 proxy and communication bus designed for large modern service oriented architectures. In affected versions envoy incorrectly handled a URI '#fragment' element as part of the path element. Envoy is configured with an RBAC filter for authorization or similar mechanism with an explicit case of a final \"/admin\" path element, or is using a negative assertion with final path element of \"/admin\". The client sends request to \"/app1/admin#foo\". In Envoy prior to 1.18.0, or 1.18.0+ configured with path_normalization=false. Envoy treats fragment as a suffix of the query string when present, or as a suffix of the path when query string is absent, so it evaluates the final path element as \"/admin#foo\" and mismatches with the configured \"/admin\" path element. In Envoy 1.18.0+ configured with path_normalization=true. Envoy transforms this to /app1/admin%23foo and mismatches with the configured /admin prefix. The resulting URI is sent to the next server-agent with the offending \"#foo\" fragment which violates RFC3986 or with the nonsensical \"%23foo\" text appended. A specifically constructed request with URI containing '#fragment' element delivered by an untrusted client in the presence of path based request authorization resulting in escalation of Privileges when path based request authorization extensions. Envoy versions 1.19.1, 1.18.4, 1.17.4, 1.16.5 contain fixes that removes fragment from URI path in incoming requests.",
      "CVE-2021-32781": "Envoy is an open source L7 proxy and communication bus designed for large modern service oriented architectures. In affected versions after Envoy sends a locally generated response it must stop further processing of request or response data. However when local response is generated due the internal buffer overflow while request or response is processed by the filter chain the operation may not be stopped completely and result in accessing a freed memory block. A specifically constructed request delivered by an untrusted downstream or upstream peer in the presence of extensions that modify and increase the size of request or response bodies resulting in a Denial of Service when using extensions that modify and increase the size of request or response bodies, such as decompressor filter. Envoy versions 1.19.1, 1.18.4, 1.17.4, 1.16.5 contain fixes to address incomplete termination of request processing after locally generated response. As a workaround disable Envoy's decompressor, json-transcoder or grpc-web extensions or proprietary extensions that modify and increase the size of request or response bodies, if feasible.",
      "CVE-2021-39162": "Pomerium is an open source identity-aware access proxy. Envoy, which Pomerium is based on, can abnormally terminate if an H/2 GOAWAY and SETTINGS frame are received in the same IO event. This can lead to a DoS in the presence of untrusted *upstream* servers. 0.15.1 contains an upgraded envoy binary with this vulnerability patched. If only trusted upstreams are configured, there is not substantial risk of this condition being triggered.",
      "CVE-2021-39204": "Pomerium is an open source identity-aware access proxy. Envoy, which Pomerium is based on, incorrectly handles resetting of HTTP/2 streams with excessive complexity. This can lead to high CPU utilization when a large number of streams are reset. This can result in a DoS condition. Pomerium versions 0.14.8 and 0.15.1 contain an upgraded envoy binary with this vulnerability patched.",
      "CVE-2021-39206": "Pomerium is an open source identity-aware access proxy. Envoy, which Pomerium is based on, contains two authorization related vulnerabilities CVE-2021-32777 and CVE-2021-32779. This may lead to incorrect routing or authorization policy decisions. With specially crafted requests, incorrect authorization or routing decisions may be made by Pomerium. Pomerium v0.14.8 and v0.15.1 contain an upgraded envoy binary with these vulnerabilities patched. This issue can only be triggered when using path prefix based policy. Removing any such policies should provide mitigation."
    }
  },
  {
    "name": "faad2-2.10.0",
    "pname": "faad2",
    "version": "2.10.0",
    "affected_by": [
      "CVE-2021-32273",
      "CVE-2021-32274",
      "CVE-2021-32276",
      "CVE-2021-32277",
      "CVE-2021-32278"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-32273": 7.8,
      "CVE-2021-32274": 7.8,
      "CVE-2021-32276": 5.5,
      "CVE-2021-32277": 7.8,
      "CVE-2021-32278": 7.8
    },
    "maintainers": [
      {
        "github": "codyopel",
        "email": "codyopel@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-32273": "An issue was discovered in faad2 through 2.10.0. A stack-buffer-overflow exists in the function ftypin located in mp4read.c. It allows an attacker to cause Code Execution.",
      "CVE-2021-32274": "An issue was discovered in faad2 through 2.10.0. A heap-buffer-overflow exists in the function sbr_qmf_synthesis_64 located in sbr_qmf.c. It allows an attacker to cause code Execution.",
      "CVE-2021-32276": "An issue was discovered in faad2 through 2.10.0. A NULL pointer dereference exists in the function get_sample() located in output.c. It allows an attacker to cause Denial of Service.",
      "CVE-2021-32277": "An issue was discovered in faad2 through 2.10.0. A heap-buffer-overflow exists in the function sbr_qmf_analysis_32 located in sbr_qmf.c. It allows an attacker to cause code Execution.",
      "CVE-2021-32278": "An issue was discovered in faad2 through 2.10.0. A heap-buffer-overflow exists in the function lt_prediction located in lt_predict.c. It allows an attacker to cause code Execution."
    }
  },
  {
    "name": "faust-0.9.90",
    "pname": "faust",
    "version": "0.9.90",
    "affected_by": [
      "CVE-2021-32275"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-32275": 5.5
    },
    "maintainers": [
      {
        "github": "magnetophon",
        "email": "bart@magnetophon.nl"
      },
      {
        "github": "pmahoney",
        "email": "pat@polycrystal.org"
      }
    ],
    "description": {
      "CVE-2021-32275": "An issue was discovered in faust through v2.30.5. A NULL pointer dereference exists in the function CosPrim::computeSigOutput() located in cosprim.hh. It allows an attacker to cause Denial of Service."
    }
  },
  {
    "name": "flatpak-1.10.2",
    "pname": "flatpak",
    "version": "1.10.2",
    "affected_by": [
      "CVE-2021-41133"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-41133": 7.8
    },
    "maintainers": [
      {
        "github": "jtojnar",
        "email": "jtojnar@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-41133": "Flatpak is a system for building, distributing, and running sandboxed desktop applications on Linux. In versions prior to 1.10.4 and 1.12.0, Flatpak apps with direct access to AF_UNIX sockets such as those used by Wayland, Pipewire or pipewire-pulse can trick portals and other host-OS services into treating the Flatpak app as though it was an ordinary, non-sandboxed host-OS process. They can do this by manipulating the VFS using recent mount-related syscalls that are not blocked by Flatpak's denylist seccomp filter, in order to substitute a crafted `/.flatpak-info` or make that file disappear entirely. Flatpak apps that act as clients for AF_UNIX sockets such as those used by Wayland, Pipewire or pipewire-pulse can escalate the privileges that the corresponding services will believe the Flatpak app has. Note that protocols that operate entirely over the D-Bus session bus (user bus), system bus or accessibility bus are not affected by this. This is due to the use of a proxy process `xdg-dbus-proxy`, whose VFS cannot be manipulated by the Flatpak app, when interacting with these buses. Patches exist for versions 1.10.4 and 1.12.0, and as of time of publication, a patch for version 1.8.2 is being planned. There are no workarounds aside from upgrading to a patched version."
    }
  },
  {
    "name": "freeswitch-1.10.5",
    "pname": "freeswitch",
    "version": "1.10.5",
    "affected_by": [
      "CVE-2021-36513"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-36513": 7.5
    },
    "maintainers": [
      {
        "github": "misuzu",
        "email": "bakalolka@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-36513": "An issue was discovered in function sofia_handle_sip_i_notify in sofia.c in SignalWire freeswitch before 1.10.6, may allow attackers to view sensitive information due to an uninitialized value."
    }
  },
  {
    "name": "gajim-1.3.2",
    "pname": "gajim",
    "version": "1.3.2",
    "affected_by": [
      "CVE-2021-41055"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-41055": 7.5
    },
    "maintainers": [
      {
        "github": "7c6f434c",
        "email": "7c6f434c@mail.ru"
      },
      {
        "github": "abbradar",
        "email": "ab@fmap.me"
      }
    ],
    "description": {
      "CVE-2021-41055": "Gajim 1.2.x and 1.3.x before 1.3.3 allows remote attackers to cause a denial of service (crash) via a crafted XMPP Last Message Correction (XEP-0308) message in multi-user chat, where the message ID equals the correction ID."
    }
  },
  {
    "name": "gitlab-14.3.3",
    "pname": "gitlab",
    "version": "14.3.3",
    "affected_by": [
      "CVE-2021-22196",
      "CVE-2021-22197",
      "CVE-2021-22198",
      "CVE-2021-22200",
      "CVE-2021-22201",
      "CVE-2021-32823"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-22196": 5.4,
      "CVE-2021-22197": 4.3,
      "CVE-2021-22198": 4.3,
      "CVE-2021-22200": 7.5,
      "CVE-2021-22201": 6.5,
      "CVE-2021-32823": 3.7
    },
    "maintainers": [
      {
        "github": "fpletz",
        "email": "fpletz@fnordicwalking.de"
      },
      {
        "github": "globin",
        "email": "mail@glob.in"
      },
      {
        "github": "krav",
        "email": "kristoffer@microdisko.no"
      },
      {
        "github": "talyz",
        "email": "kim.lindberger@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-22196": "An issue has been discovered in GitLab CE/EE affecting all versions starting from 13.4. It was possible to exploit a stored cross-site-scripting in merge request via a specifically crafted branch name.",
      "CVE-2021-22197": "An issue has been discovered in GitLab CE/EE affecting all versions starting from 10.6 where an infinite loop exist when an authenticated user with specific rights access a MR having source and target branch pointing to each other",
      "CVE-2021-22198": "An issue has been discovered in GitLab CE/EE affecting all versions from 13.8 and above allowing an authenticated user to delete incident metric images of public projects.",
      "CVE-2021-22200": "An issue has been discovered in GitLab CE/EE affecting all versions starting with 12.6. Under a special condition it was possible to access data of an internal repository through a public project fork as an anonymous user.",
      "CVE-2021-22201": "An issue has been discovered in GitLab CE/EE affecting all versions starting from 13.9. A specially crafted import file could read files on the server.",
      "CVE-2021-32823": "In the bindata RubyGem before version 2.4.10 there is a potential denial-of-service vulnerability. In affected versions it is very slow for certain classes in BinData to be created. For example BinData::Bit100000, BinData::Bit100001, BinData::Bit100002, BinData::Bit<N>. In combination with <user_input>.constantize there is a potential for a CPU-based DoS. In version 2.4.10 bindata improved the creation time of Bits and Integers."
    }
  },
  {
    "name": "go-1.15.15",
    "pname": "go",
    "version": "1.15.15",
    "affected_by": [
      "CVE-2021-38297"
    ],
    "whitelisted": [
      "CVE-2021-29923",
      "CVE-2021-34558"
    ],
    "cvssv3_basescore": {
      "CVE-2021-29923": 7.5,
      "CVE-2021-34558": 6.5,
      "CVE-2021-38297": 9.8
    },
    "maintainers": [
      {
        "github": "c00w",
        "email": "nix@daedrum.net"
      },
      {
        "github": "cstrahan",
        "email": "charles@cstrahan.com"
      },
      {
        "github": "Frostman",
        "email": "me@slukjanov.name"
      },
      {
        "github": "kalbasit",
        "email": "wael.nasreddine@gmail.com"
      },
      {
        "github": "mdlayher",
        "email": "mdlayher@gmail.com"
      },
      {
        "github": "mic92",
        "email": "joerg@thalheim.io"
      },
      {
        "github": "orivej",
        "email": "orivej@gmx.fr"
      },
      {
        "github": "rvolosatovs",
        "email": "rvolosatovs@riseup.net"
      },
      {
        "github": "zowoq",
        "email": "59103226+zowoq@users.noreply.github.com"
      }
    ],
    "description": {
      "CVE-2021-29923": "Go before 1.17 does not properly consider extraneous zero characters at the beginning of an IP address octet, which (in some situations) allows attackers to bypass access control that is based on IP addresses, because of unexpected octal interpretation. This affects net.ParseIP and net.ParseCIDR.",
      "CVE-2021-34558": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
      "CVE-2021-38297": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used."
    }
  },
  {
    "name": "go-1.16.8",
    "pname": "go",
    "version": "1.16.8",
    "affected_by": [
      "CVE-2021-38297"
    ],
    "whitelisted": [
      "CVE-2021-29923"
    ],
    "cvssv3_basescore": {
      "CVE-2021-29923": 7.5,
      "CVE-2021-38297": 9.8
    },
    "maintainers": [
      {
        "github": "c00w",
        "email": "nix@daedrum.net"
      },
      {
        "github": "cstrahan",
        "email": "charles@cstrahan.com"
      },
      {
        "github": "Frostman",
        "email": "me@slukjanov.name"
      },
      {
        "github": "kalbasit",
        "email": "wael.nasreddine@gmail.com"
      },
      {
        "github": "mdlayher",
        "email": "mdlayher@gmail.com"
      },
      {
        "github": "mic92",
        "email": "joerg@thalheim.io"
      },
      {
        "github": "orivej",
        "email": "orivej@gmx.fr"
      },
      {
        "github": "rvolosatovs",
        "email": "rvolosatovs@riseup.net"
      },
      {
        "github": "zowoq",
        "email": "59103226+zowoq@users.noreply.github.com"
      }
    ],
    "description": {
      "CVE-2021-29923": "Go before 1.17 does not properly consider extraneous zero characters at the beginning of an IP address octet, which (in some situations) allows attackers to bypass access control that is based on IP addresses, because of unexpected octal interpretation. This affects net.ParseIP and net.ParseCIDR.",
      "CVE-2021-38297": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used."
    }
  },
  {
    "name": "gpac-1.0.1",
    "pname": "gpac",
    "version": "1.0.1",
    "affected_by": [
      "CVE-2021-32132",
      "CVE-2021-32134",
      "CVE-2021-32135",
      "CVE-2021-32136",
      "CVE-2021-32137",
      "CVE-2021-32138",
      "CVE-2021-32139",
      "CVE-2021-32269",
      "CVE-2021-32270",
      "CVE-2021-32271",
      "CVE-2021-33361",
      "CVE-2021-33362",
      "CVE-2021-33363",
      "CVE-2021-33364",
      "CVE-2021-33365",
      "CVE-2021-33366"
    ],
    "whitelisted": [
      "CVE-2020-23930",
      "CVE-2020-35979",
      "CVE-2020-35980",
      "CVE-2020-35981",
      "CVE-2020-35982",
      "CVE-2021-21834",
      "CVE-2021-21835",
      "CVE-2021-21836",
      "CVE-2021-21837",
      "CVE-2021-21838",
      "CVE-2021-21839",
      "CVE-2021-21840",
      "CVE-2021-21841",
      "CVE-2021-21842",
      "CVE-2021-21843",
      "CVE-2021-21844",
      "CVE-2021-21845",
      "CVE-2021-21846",
      "CVE-2021-21847",
      "CVE-2021-21848",
      "CVE-2021-21849",
      "CVE-2021-21850",
      "CVE-2021-21851",
      "CVE-2021-21852",
      "CVE-2021-21853",
      "CVE-2021-21854",
      "CVE-2021-21855",
      "CVE-2021-21856",
      "CVE-2021-21857",
      "CVE-2021-21858",
      "CVE-2021-21859",
      "CVE-2021-21860",
      "CVE-2021-21861",
      "CVE-2021-21862",
      "CVE-2021-29279",
      "CVE-2021-30014",
      "CVE-2021-30015",
      "CVE-2021-30019",
      "CVE-2021-30020",
      "CVE-2021-30022",
      "CVE-2021-30199",
      "CVE-2021-31254",
      "CVE-2021-31255",
      "CVE-2021-31256",
      "CVE-2021-31257",
      "CVE-2021-31258",
      "CVE-2021-31259",
      "CVE-2021-31260",
      "CVE-2021-31261",
      "CVE-2021-31262",
      "CVE-2021-32437",
      "CVE-2021-32438",
      "CVE-2021-32439",
      "CVE-2021-32440",
      "CVE-2021-36584"
    ],
    "cvssv3_basescore": {
      "CVE-2020-23930": 5.5,
      "CVE-2020-35979": 7.8,
      "CVE-2020-35980": 7.8,
      "CVE-2020-35981": 7.8,
      "CVE-2020-35982": 7.8,
      "CVE-2021-21834": 8.8,
      "CVE-2021-21835": 8.8,
      "CVE-2021-21836": 8.8,
      "CVE-2021-21837": 8.8,
      "CVE-2021-21838": 8.8,
      "CVE-2021-21839": 8.8,
      "CVE-2021-21840": 8.8,
      "CVE-2021-21841": 8.8,
      "CVE-2021-21842": 8.8,
      "CVE-2021-21843": 8.8,
      "CVE-2021-21844": 8.8,
      "CVE-2021-21845": 8.8,
      "CVE-2021-21846": 8.8,
      "CVE-2021-21847": 8.8,
      "CVE-2021-21848": 8.8,
      "CVE-2021-21849": 8.8,
      "CVE-2021-21850": 8.8,
      "CVE-2021-21851": 8.8,
      "CVE-2021-21852": 8.8,
      "CVE-2021-21853": 8.8,
      "CVE-2021-21854": 8.8,
      "CVE-2021-21855": 8.8,
      "CVE-2021-21856": 8.8,
      "CVE-2021-21857": 8.8,
      "CVE-2021-21858": 8.8,
      "CVE-2021-21859": 8.8,
      "CVE-2021-21860": 8.8,
      "CVE-2021-21861": 8.8,
      "CVE-2021-21862": 7.8,
      "CVE-2021-29279": 7.8,
      "CVE-2021-30014": 5.5,
      "CVE-2021-30015": 5.5,
      "CVE-2021-30019": 5.5,
      "CVE-2021-30020": 5.5,
      "CVE-2021-30022": 5.5,
      "CVE-2021-30199": 5.5,
      "CVE-2021-31254": 7.8,
      "CVE-2021-31255": 7.8,
      "CVE-2021-31256": 5.5,
      "CVE-2021-31257": 5.5,
      "CVE-2021-31258": 5.5,
      "CVE-2021-31259": 5.5,
      "CVE-2021-31260": 5.5,
      "CVE-2021-31261": 5.5,
      "CVE-2021-31262": 5.5,
      "CVE-2021-32132": 5.5,
      "CVE-2021-32134": 5.5,
      "CVE-2021-32135": 5.5,
      "CVE-2021-32136": 7.8,
      "CVE-2021-32137": 5.5,
      "CVE-2021-32138": 5.5,
      "CVE-2021-32139": 5.5,
      "CVE-2021-32269": 5.5,
      "CVE-2021-32270": 5.5,
      "CVE-2021-32271": 7.8,
      "CVE-2021-32437": 5.5,
      "CVE-2021-32438": 5.5,
      "CVE-2021-32439": 7.8,
      "CVE-2021-32440": 5.5,
      "CVE-2021-33361": 5.5,
      "CVE-2021-33362": 7.8,
      "CVE-2021-33363": 5.5,
      "CVE-2021-33364": 5.5,
      "CVE-2021-33365": 5.5,
      "CVE-2021-33366": 5.5,
      "CVE-2021-36584": 5.5
    },
    "maintainers": [
      {
        "github": "bluescreen303",
        "email": "mathijs@bluescreen303.nl"
      },
      {
        "github": "mgdelacroix",
        "email": "mgdelacroix@gmail.com"
      }
    ],
    "description": {
      "CVE-2020-23930": "An issue was discovered in gpac through 20200801. A NULL pointer dereference exists in the function nhmldump_send_header located in write_nhml.c. It allows an attacker to cause Denial of Service.",
      "CVE-2020-35979": "An issue was discovered in GPAC version 0.8.0 and 1.0.1. There is heap-based buffer overflow in the function gp_rtp_builder_do_avc() in ietf/rtp_pck_mpeg4.c.",
      "CVE-2020-35980": "An issue was discovered in GPAC version 0.8.0 and 1.0.1. There is a use-after-free in the function gf_isom_box_del() in isomedia/box_funcs.c.",
      "CVE-2020-35981": "An issue was discovered in GPAC version 0.8.0 and 1.0.1. There is an invalid pointer dereference in the function SetupWriters() in isomedia/isom_store.c.",
      "CVE-2020-35982": "An issue was discovered in GPAC version 0.8.0 and 1.0.1. There is an invalid pointer dereference in the function gf_hinter_track_finalize() in media_tools/isom_hinter.c.",
      "CVE-2021-21834": "An exploitable integer overflow vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input when decoding the atom for the “co64” FOURCC can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21835": "An exploitable integer overflow vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input when decoding the atom associated with the “csgp” FOURCC can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21836": "An exploitable integer overflow vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input using the “ctts” FOURCC code can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21837": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21838": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21839": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21840": "An exploitable integer overflow vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input used to process an atom using the “saio” FOURCC code cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21841": "An exploitable integer overflow vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input when reading an atom using the 'sbgp' FOURCC code can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21842": "An exploitable integer overflow vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow when processing an atom using the 'ssix' FOURCC code, due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21843": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. After validating the number of ranges, at [41] the library will multiply the count by the size of the GF_SubsegmentRangeInfo structure. On a 32-bit platform, this multiplication can result in an integer overflow causing the space of the array being allocated to be less than expected. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21844": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input when encountering an atom using the “stco” FOURCC code, can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21845": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input in “stsc” decoder can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21846": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input in “stsz” decoder can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21847": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input in “stts” decoder can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21848": "An exploitable integer overflow vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. The library will actually reuse the parser for atoms with the “stsz” FOURCC code when parsing atoms that use the “stz2” FOURCC code and can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21849": "An exploitable integer overflow vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow when the library encounters an atom using the “tfra” FOURCC code due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21850": "An exploitable integer overflow vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow when the library encounters an atom using the “trun” FOURCC code due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21851": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input at “csgp” decoder sample group description indices can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21852": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input at “stss” decoder can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21853": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked addition arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21854": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked addition arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21855": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked addition arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21856": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked addition arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21857": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked addition arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21858": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked addition arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21859": "An exploitable integer truncation vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. The stri_box_read function is used when processing atoms using the 'stri' FOURCC code. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21860": "An exploitable integer truncation vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an improper memory allocation resulting in a heap-based buffer overflow that causes memory corruption. The FOURCC code, 'trik', is parsed by the function within the library. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21861": "An exploitable integer truncation vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. When processing the 'hdlr' FOURCC code, a specially crafted MPEG-4 input can cause an improper memory allocation resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21862": "Multiple exploitable integer truncation vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an improper memory allocation resulting in a heap-based buffer overflow that causes memory corruption The implementation of the parser used for the “Xtra” FOURCC code is handled. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-29279": "There is a integer overflow in function filter_core/filter_props.c:gf_props_assign_value in GPAC 1.0.1. In which, the arg const GF_PropertyValue *value,maybe value->value.data.size is a negative number. In result, memcpy in gf_props_assign_value failed.",
      "CVE-2021-30014": "There is a integer overflow in media_tools/av_parsers.c in the hevc_parse_slice_segment function in GPAC 1.0.1 which results in a crash.",
      "CVE-2021-30015": "There is a Null Pointer Dereference in function filter_core/filter_pck.c:gf_filter_pck_new_alloc_internal in GPAC 1.0.1. The pid comes from function av1dmx_parse_flush_sample, the ctx.opid maybe NULL. The result is a crash in gf_filter_pck_new_alloc_internal.",
      "CVE-2021-30019": "In the adts_dmx_process function in filters/reframe_adts.c in GPAC 1.0.1, a crafted file may cause ctx->hdr.frame_size to be smaller than ctx->hdr.hdr_size, resulting in size to be a negative number and a heap overflow in the memcpy.",
      "CVE-2021-30020": "In the function gf_hevc_read_pps_bs_internal function in media_tools/av_parsers.c in GPAC 1.0.1 there is a loop, which with crafted file, pps->num_tile_columns may be larger than sizeof(pps->column_width), which results in a heap overflow in the loop.",
      "CVE-2021-30022": "There is a integer overflow in media_tools/av_parsers.c in the gf_avc_read_pps_bs_internal in GPAC 1.0.1. pps_id may be a negative number, so it will not return. However, avc->pps only has 255 unit, so there is an overflow, which results a crash.",
      "CVE-2021-30199": "In filters/reframe_latm.c in GPAC 1.0.1 there is a Null Pointer Dereference, when gf_filter_pck_get_data is called. The first arg pck may be null with a crafted mp4 file,which results in a crash.",
      "CVE-2021-31254": "Buffer overflow in the tenc_box_read function in MP4Box in GPAC 1.0.1 allows attackers to cause a denial of service or execute arbitrary code via a crafted file, related invalid IV sizes.",
      "CVE-2021-31255": "Buffer overflow in the abst_box_read function in MP4Box in GPAC 1.0.1 allows attackers to cause a denial of service or execute arbitrary code via a crafted file.",
      "CVE-2021-31256": "Memory leak in the stbl_GetSampleInfos function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.",
      "CVE-2021-31257": "The HintFile function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-31258": "The gf_isom_set_extraction_slc function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-31259": "The gf_isom_cenc_get_default_info_internal function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-31260": "The MergeTrack function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-31261": "The gf_hinter_track_new function in GPAC 1.0.1 allows attackers to read memory via a crafted file in the MP4Box command.",
      "CVE-2021-31262": "The AV1_DuplicateConfig function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-32132": "The abst_box_size function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-32134": "The gf_odf_desc_copy function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-32135": "The trak_box_size function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-32136": "Heap buffer overflow in the print_udta function in MP4Box in GPAC 1.0.1 allows attackers to cause a denial of service or execute arbitrary code via a crafted file.",
      "CVE-2021-32137": "Heap buffer overflow in the URL_GetProtocolType function in MP4Box in GPAC 1.0.1 allows attackers to cause a denial of service or execute arbitrary code via a crafted file.",
      "CVE-2021-32138": "The DumpTrackInfo function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-32139": "The gf_isom_vp_config_get function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-32269": "An issue was discovered in gpac through 20200801. A NULL pointer dereference exists in the function ilst_item_box_dump located in box_dump.c. It allows an attacker to cause Denial of Service.",
      "CVE-2021-32270": "An issue was discovered in gpac through 20200801. A NULL pointer dereference exists in the function vwid_box_del located in box_code_base.c. It allows an attacker to cause Denial of Service.",
      "CVE-2021-32271": "An issue was discovered in gpac through 20200801. A stack-buffer-overflow exists in the function DumpRawUIConfig located in odf_dump.c. It allows an attacker to cause code Execution.",
      "CVE-2021-32437": "The gf_hinter_finalize function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-32438": "The gf_media_export_filters function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-32439": "Buffer overflow in the stbl_AppendSize function in MP4Box in GPAC 1.0.1 allows attackers to cause a denial of service or execute arbitrary code via a crafted file.",
      "CVE-2021-32440": "The Media_RewriteODFrame function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-33361": "Memory leak in the afra_box_read function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.",
      "CVE-2021-33362": "Stack buffer overflow in the hevc_parse_vps_extension function in MP4Box in GPAC 1.0.1 allows attackers to cause a denial of service or execute arbitrary code via a crafted file.",
      "CVE-2021-33363": "Memory leak in the infe_box_read function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.",
      "CVE-2021-33364": "Memory leak in the def_parent_box_new function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.",
      "CVE-2021-33365": "Memory leak in the gf_isom_get_root_od function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.",
      "CVE-2021-33366": "Memory leak in the gf_isom_oinf_read_entry function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.",
      "CVE-2021-36584": "An issue was discovered in GPAC 1.0.1. There is a heap-based buffer overflow in the function gp_rtp_builder_do_tx3g function in ietf/rtp_pck_3gpp.c, as demonstrated by MP4Box. This can cause a denial of service (DOS)."
    }
  },
  {
    "name": "hiredis-1.0.0",
    "pname": "hiredis",
    "version": "1.0.0",
    "affected_by": [
      "CVE-2021-32765"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-32765": 8.8
    },
    "maintainers": [],
    "description": {
      "CVE-2021-32765": "Hiredis is a minimalistic C client library for the Redis database. In affected versions Hiredis is vulnurable to integer overflow if provided maliciously crafted or corrupted `RESP` `mult-bulk` protocol data. When parsing `multi-bulk` (array-like) replies, hiredis fails to check if `count * sizeof(redisReply*)` can be represented in `SIZE_MAX`. If it can not, and the `calloc()` call doesn't itself make this check, it would result in a short allocation and subsequent buffer overflow. Users of hiredis who are unable to update may set the [maxelements](https://github.com/redis/hiredis#reader-max-array-elements) context option to a value small enough that no overflow is possible."
    }
  },
  {
    "name": "imagemagick-6.9.12-19",
    "pname": "imagemagick",
    "version": "6.9.12-19",
    "affected_by": [
      "CVE-2021-39212"
    ],
    "whitelisted": [
      "CVE-2016-5841",
      "CVE-2017-11447",
      "CVE-2018-16328",
      "CVE-2018-16329",
      "CVE-2019-13136",
      "CVE-2019-17547",
      "CVE-2020-25663",
      "CVE-2020-27768",
      "CVE-2020-27769",
      "CVE-2020-27829",
      "CVE-2021-20243",
      "CVE-2021-20244",
      "CVE-2021-20310",
      "CVE-2021-20311",
      "CVE-2021-20312",
      "CVE-2021-20313"
    ],
    "cvssv3_basescore": {
      "CVE-2016-5841": 9.8,
      "CVE-2017-11447": 6.5,
      "CVE-2018-16328": 9.8,
      "CVE-2018-16329": 9.8,
      "CVE-2019-13136": 7.8,
      "CVE-2019-17547": 8.8,
      "CVE-2020-25663": 5.5,
      "CVE-2020-27768": 3.3,
      "CVE-2020-27769": 3.3,
      "CVE-2020-27829": 5.5,
      "CVE-2021-20243": 5.5,
      "CVE-2021-20244": 5.5,
      "CVE-2021-20310": 7.5,
      "CVE-2021-20311": 7.5,
      "CVE-2021-20312": 7.5,
      "CVE-2021-20313": 7.5,
      "CVE-2021-39212": 4.4
    },
    "maintainers": [
      {
        "github": "erictapen",
        "email": "kerstin@erictapen.name"
      },
      {
        "github": "erictapen",
        "email": "kerstin@erictapen.name"
      },
      {
        "github": "erictapen",
        "email": "kerstin@erictapen.name"
      }
    ],
    "description": {
      "CVE-2016-5841": "Integer overflow in MagickCore/profile.c in ImageMagick before 7.0.2-1 allows remote attackers to cause a denial of service (segmentation fault) or possibly execute arbitrary code via vectors involving the offset variable.",
      "CVE-2017-11447": "The ReadSCREENSHOTImage function in coders/screenshot.c in ImageMagick before 7.0.6-1 has memory leaks, causing denial of service.",
      "CVE-2018-16328": "In ImageMagick before 7.0.8-8, a NULL pointer dereference exists in the CheckEventLogging function in MagickCore/log.c.",
      "CVE-2018-16329": "In ImageMagick before 7.0.8-8, a NULL pointer dereference exists in the GetMagickProperty function in MagickCore/property.c.",
      "CVE-2019-13136": "ImageMagick before 7.0.8-50 has an integer overflow vulnerability in the function TIFFSeekCustomStream in coders/tiff.c.",
      "CVE-2019-17547": "In ImageMagick before 7.0.8-62, TraceBezier in MagickCore/draw.c has a use-after-free.",
      "CVE-2020-25663": "A call to ConformPixelInfo() in the SetImageAlphaChannel() routine of /MagickCore/channel.c caused a subsequent heap-use-after-free or heap-buffer-overflow READ when GetPixelRed() or GetPixelBlue() was called. This could occur if an attacker is able to submit a malicious image file to be processed by ImageMagick and could lead to denial of service. It likely would not lead to anything further because the memory is used as pixel data and not e.g. a function pointer. This flaw affects ImageMagick versions prior to 7.0.9-0.",
      "CVE-2020-27768": "In ImageMagick, there is an outside the range of representable values of type 'unsigned int' at MagickCore/quantum-private.h. This flaw affects ImageMagick versions prior to 7.0.9-0.",
      "CVE-2020-27769": "In ImageMagick versions before 7.0.9-0, there are outside the range of representable values of type 'float' at MagickCore/quantize.c.",
      "CVE-2020-27829": "A heap based buffer overflow in coders/tiff.c may result in program crash and denial of service in ImageMagick before 7.0.10-45.",
      "CVE-2021-20243": "A flaw was found in ImageMagick in MagickCore/resize.c. An attacker who submits a crafted file that is processed by ImageMagick could trigger undefined behavior in the form of math division by zero. The highest threat from this vulnerability is to system availability.",
      "CVE-2021-20244": "A flaw was found in ImageMagick in MagickCore/visual-effects.c. An attacker who submits a crafted file that is processed by ImageMagick could trigger undefined behavior in the form of math division by zero. The highest threat from this vulnerability is to system availability.",
      "CVE-2021-20310": "A flaw was found in ImageMagick in versions before 7.0.11, where a division by zero ConvertXYZToJzazbz() of MagickCore/colorspace.c may trigger undefined behavior via a crafted image file that is submitted by an attacker and processed by an application using ImageMagick. The highest threat from this vulnerability is to system availability.",
      "CVE-2021-20311": "A flaw was found in ImageMagick in versions before 7.0.11, where a division by zero in sRGBTransformImage() in the MagickCore/colorspace.c may trigger undefined behavior via a crafted image file that is submitted by an attacker processed by an application using ImageMagick. The highest threat from this vulnerability is to system availability.",
      "CVE-2021-20312": "A flaw was found in ImageMagick in versions 7.0.11, where an integer overflow in WriteTHUMBNAILImage of coders/thumbnail.c may trigger undefined behavior via a crafted image file that is submitted by an attacker and processed by an application using ImageMagick. The highest threat from this vulnerability is to system availability.",
      "CVE-2021-20313": "A flaw was found in ImageMagick in versions before 7.0.11. A potential cipher leak when the calculate signatures in TransformSignature is possible. The highest threat from this vulnerability is to data confidentiality.",
      "CVE-2021-39212": "ImageMagick is free software delivered as a ready-to-run binary distribution or as source code that you may use, copy, modify, and distribute in both open and proprietary applications. In affected versions and in certain cases, Postscript files could be read and written when specifically excluded by a `module` policy in `policy.xml`. ex. <policy domain=\"module\" rights=\"none\" pattern=\"PS\" />. The issue has been resolved in ImageMagick 7.1.0-7 and in 6.9.12-22. Fortunately, in the wild, few users utilize the `module` policy and instead use the `coder` policy that is also our workaround recommendation: <policy domain=\"coder\" rights=\"none\" pattern=\"{PS,EPI,EPS,EPSF,EPSI}\" />."
    }
  },
  {
    "name": "jenkins-2.303.1",
    "pname": "jenkins",
    "version": "2.303.1",
    "affected_by": [
      "CVE-2021-21682",
      "CVE-2021-21683"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-21682": 4.3,
      "CVE-2021-21683": 6.5
    },
    "maintainers": [
      {
        "github": "coreyoconnor",
        "email": "coreyoconnor@gmail.com"
      },
      {
        "github": "fpletz",
        "email": "fpletz@fnordicwalking.de"
      },
      {
        "github": "earldouglas",
        "email": "james@earldouglas.com"
      },
      {
        "github": "nequissimus",
        "email": "tim@nequissimus.com"
      }
    ],
    "description": {
      "CVE-2021-21682": "Jenkins 2.314 and earlier, LTS 2.303.1 and earlier accepts names of jobs and other entities with a trailing dot character, potentially replacing the configuration and data of other entities on Windows.",
      "CVE-2021-21683": "The file browser in Jenkins 2.314 and earlier, LTS 2.303.1 and earlier may interpret some paths to files as absolute on Windows, resulting in a path traversal vulnerability allowing attackers with Overall/Read permission (Windows controller) or Job/Workspace permission (Windows agents) to obtain the contents of arbitrary files."
    }
  },
  {
    "name": "jitsi-meet-1.0.5307",
    "pname": "jitsi-meet",
    "version": "1.0.5307",
    "affected_by": [
      "CVE-2021-39205"
    ],
    "whitelisted": [
      "CVE-2021-33506"
    ],
    "cvssv3_basescore": {
      "CVE-2021-33506": 7.5,
      "CVE-2021-39205": 6.1
    },
    "maintainers": [
      {
        "github": "mmilata",
        "email": "martin@martinmilata.cz"
      },
      {
        "github": "petabyteboy",
        "email": "milan@petabyte.dev"
      },
      {
        "github": "ryantm",
        "email": "ryan@ryantm.com"
      }
    ],
    "description": {
      "CVE-2021-33506": "jitsi-meet-prosody in Jitsi Meet before 2.0.5963-1 does not ensure that restrict_room_creation is set by default. This can allow an attacker to circumvent conference moderation.",
      "CVE-2021-39205": "Jitsi Meet is an open source video conferencing application. Versions prior to 2.0.6173 are vulnerable to client-side cross-site scripting via injecting properties into JSON objects that were not properly escaped. There are no known incidents related to this vulnerability being exploited in the wild. This issue is fixed in Jitsi Meet version 2.0.6173. There are no known workarounds aside from upgrading."
    }
  },
  {
    "name": "kubernetes-1.21.1",
    "pname": "kubernetes",
    "version": "1.21.1",
    "affected_by": [
      "CVE-2021-25741"
    ],
    "whitelisted": [
      "CVE-2020-2307",
      "CVE-2020-2308",
      "CVE-2020-2309"
    ],
    "cvssv3_basescore": {
      "CVE-2020-2307": 4.3,
      "CVE-2020-2308": 4.3,
      "CVE-2020-2309": 4.3,
      "CVE-2021-25741": 8.1
    },
    "maintainers": [
      {
        "github": "johanot",
        "email": "write@ownrisk.dk"
      },
      {
        "github": "offlinehacker",
        "email": "jaka@x-truder.net"
      },
      {
        "github": "saschagrunert",
        "email": "mail@saschagrunert.de"
      }
    ],
    "description": {
      "CVE-2020-2307": "Jenkins Kubernetes Plugin 1.27.3 and earlier allows low-privilege users to access possibly sensitive Jenkins controller environment variables.",
      "CVE-2020-2308": "A missing permission check in Jenkins Kubernetes Plugin 1.27.3 and earlier allows attackers with Overall/Read permission to list global pod template names.",
      "CVE-2020-2309": "A missing/An incorrect permission check in Jenkins Kubernetes Plugin 1.27.3 and earlier allows attackers with Overall/Read permission to enumerate credentials IDs of credentials stored in Jenkins.",
      "CVE-2021-25741": "A security issue was discovered in Kubernetes where a user may be able to create a container with subpath volume mounts to access files & directories outside of the volume, including on the host filesystem."
    }
  },
  {
    "name": "libressl-3.1.5",
    "pname": "libressl",
    "version": "3.1.5",
    "affected_by": [
      "CVE-2021-41581"
    ],
    "whitelisted": [
      "CVE-2019-25048",
      "CVE-2019-25049"
    ],
    "cvssv3_basescore": {
      "CVE-2019-25048": 7.1,
      "CVE-2019-25049": 7.1,
      "CVE-2021-41581": 5.5
    },
    "maintainers": [
      {
        "github": "thoughtpolice",
        "email": "aseipp@pobox.com"
      },
      {
        "github": "fpletz",
        "email": "fpletz@fnordicwalking.de"
      }
    ],
    "description": {
      "CVE-2019-25048": "LibreSSL 2.9.1 through 3.2.1 has a heap-based buffer over-read in do_print_ex (called from asn1_item_print_ctx and ASN1_item_print).",
      "CVE-2019-25049": "LibreSSL 2.9.1 through 3.2.1 has an out-of-bounds read in asn1_item_print_ctx (called from asn1_template_print_ctx).",
      "CVE-2021-41581": "x509_constraints_parse_mailbox in lib/libcrypto/x509/x509_constraints.c in LibreSSL through 3.4.0 has a stack-based buffer over-read. When the input exceeds DOMAIN_PART_MAX_LEN, the buffer lacks '\\0' termination."
    }
  },
  {
    "name": "libressl-3.2.5",
    "pname": "libressl",
    "version": "3.2.5",
    "affected_by": [
      "CVE-2021-41581"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-41581": 5.5
    },
    "maintainers": [
      {
        "github": "thoughtpolice",
        "email": "aseipp@pobox.com"
      },
      {
        "github": "fpletz",
        "email": "fpletz@fnordicwalking.de"
      },
      {
        "github": "thoughtpolice",
        "email": "aseipp@pobox.com"
      },
      {
        "github": "fpletz",
        "email": "fpletz@fnordicwalking.de"
      }
    ],
    "description": {
      "CVE-2021-41581": "x509_constraints_parse_mailbox in lib/libcrypto/x509/x509_constraints.c in LibreSSL through 3.4.0 has a stack-based buffer over-read. When the input exceeds DOMAIN_PART_MAX_LEN, the buffer lacks '\\0' termination."
    }
  },
  {
    "name": "libtpms-0.8.2",
    "pname": "libtpms",
    "version": "0.8.2",
    "affected_by": [
      "CVE-2021-3746"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-3746": 6.5
    },
    "maintainers": [
      {
        "github": "baloo",
        "email": "nixpkgs@superbaloo.net"
      }
    ],
    "description": {
      "CVE-2021-3746": "A flaw was found in the libtpms code that may cause access beyond the boundary of internal buffers. The vulnerability is triggered by specially-crafted TPM2 command packets that then trigger the issue when the state of the TPM2's volatile state is written. The highest threat from this vulnerability is to system availability. This issue affects libtpms versions before 0.8.5, before 0.7.9 and before 0.6.6."
    }
  },
  {
    "name": "libxsmm-1.16.1",
    "pname": "libxsmm",
    "version": "1.16.1",
    "affected_by": [
      "CVE-2021-39535",
      "CVE-2021-39536"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-39535": 6.5,
      "CVE-2021-39536": 8.8
    },
    "maintainers": [
      {
        "github": "chessai",
        "email": "chessai1996@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-39535": "An issue was discovered in libxsmm through v1.16.1-93. A NULL pointer dereference exists in JIT code. It allows an attacker to cause Denial of Service.",
      "CVE-2021-39536": "An issue was discovered in libxsmm through v1.16.1-93. The JIT code has a heap-based buffer overflow."
    }
  },
  {
    "name": "mattermost-5.32.1",
    "pname": "mattermost",
    "version": "5.32.1",
    "affected_by": [
      "CVE-2021-37860"
    ],
    "whitelisted": [
      "CVE-2021-37859"
    ],
    "cvssv3_basescore": {
      "CVE-2021-37859": 6.1,
      "CVE-2021-37860": 6.1
    },
    "maintainers": [
      {
        "github": "fpletz",
        "email": "fpletz@fnordicwalking.de"
      },
      {
        "github": "ryantm",
        "email": "ryan@ryantm.com"
      }
    ],
    "description": {
      "CVE-2021-37859": "Fixed a bypass for a reflected cross-site scripting vulnerability affecting OAuth-enabled instances of Mattermost.",
      "CVE-2021-37860": "Mattermost 5.38 and earlier fails to sufficiently sanitize clipboard contents, which allows a user-assisted attacker to inject arbitrary web script in product deployments that explicitly disable the default CSP."
    }
  },
  {
    "name": "mediawiki-1.35.2",
    "pname": "mediawiki",
    "version": "1.35.2",
    "affected_by": [
      "CVE-2021-41798",
      "CVE-2021-41799",
      "CVE-2021-41800",
      "CVE-2021-41801",
      "CVE-2021-42040",
      "CVE-2021-42041",
      "CVE-2021-42042",
      "CVE-2021-42043",
      "CVE-2021-42044"
    ],
    "whitelisted": [
      "CVE-2021-31545",
      "CVE-2021-31546",
      "CVE-2021-31547",
      "CVE-2021-31548",
      "CVE-2021-31549",
      "CVE-2021-31550",
      "CVE-2021-31551",
      "CVE-2021-31552",
      "CVE-2021-31553",
      "CVE-2021-31554",
      "CVE-2021-31555",
      "CVE-2021-31556",
      "CVE-2021-35197",
      "CVE-2021-36125",
      "CVE-2021-36126",
      "CVE-2021-36127",
      "CVE-2021-36128",
      "CVE-2021-36129",
      "CVE-2021-36130",
      "CVE-2021-36131",
      "CVE-2021-36132"
    ],
    "cvssv3_basescore": {
      "CVE-2021-31545": 5.3,
      "CVE-2021-31546": 4.3,
      "CVE-2021-31547": 4.3,
      "CVE-2021-31548": 6.5,
      "CVE-2021-31549": 4.3,
      "CVE-2021-31550": 5.4,
      "CVE-2021-31551": 6.1,
      "CVE-2021-31552": 5.4,
      "CVE-2021-31553": 6.5,
      "CVE-2021-31554": 5.4,
      "CVE-2021-31555": 7.5,
      "CVE-2021-31556": 9.8,
      "CVE-2021-35197": 7.5,
      "CVE-2021-36125": 7.5,
      "CVE-2021-36126": 9.8,
      "CVE-2021-36127": 4.3,
      "CVE-2021-36128": 9.8,
      "CVE-2021-36129": 4.3,
      "CVE-2021-36130": 4.8,
      "CVE-2021-36131": 4.8,
      "CVE-2021-36132": 8.8,
      "CVE-2021-41798": 6.1,
      "CVE-2021-41799": 7.5,
      "CVE-2021-41800": 5.3,
      "CVE-2021-41801": 8.8,
      "CVE-2021-42040": 7.5,
      "CVE-2021-42041": 6.1,
      "CVE-2021-42042": 4.8,
      "CVE-2021-42043": 6.1,
      "CVE-2021-42044": 4.8
    },
    "maintainers": [
      {
        "github": "redvers",
        "email": "red@infect.me"
      }
    ],
    "description": {
      "CVE-2021-31545": "An issue was discovered in the AbuseFilter extension for MediaWiki through 1.35.2. The page_recent_contributors leaked the existence of certain deleted MediaWiki usernames, related to rev_deleted.",
      "CVE-2021-31546": "An issue was discovered in the AbuseFilter extension for MediaWiki through 1.35.2. It incorrectly logged sensitive suppression deletions, which should not have been visible to users with access to view AbuseFilter log data.",
      "CVE-2021-31547": "An issue was discovered in the AbuseFilter extension for MediaWiki through 1.35.2. Its AbuseFilterCheckMatch API reveals suppressed edits and usernames to unprivileged users through the iteration of crafted AbuseFilter rules.",
      "CVE-2021-31548": "An issue was discovered in the AbuseFilter extension for MediaWiki through 1.35.2. A MediaWiki user who is partially blocked or was unsuccessfully blocked could bypass AbuseFilter and have their edits completed.",
      "CVE-2021-31549": "An issue was discovered in the AbuseFilter extension for MediaWiki through 1.35.2. The Special:AbuseFilter/examine form allowed for the disclosure of suppressed MediaWiki usernames to unprivileged users.",
      "CVE-2021-31550": "An issue was discovered in the CommentBox extension for MediaWiki through 1.35.2. Via crafted configuration variables, a malicious actor could introduce XSS payloads into various layers.",
      "CVE-2021-31551": "An issue was discovered in the PageForms extension for MediaWiki through 1.35.2. Crafted payloads for Token-related query parameters allowed for XSS on certain PageForms-managed MediaWiki pages.",
      "CVE-2021-31552": "An issue was discovered in the AbuseFilter extension for MediaWiki through 1.35.2. It incorrectly executed certain rules related to blocking accounts after account creation. Such rules would allow for user accounts to be created while blocking only the IP address used to create an account (and not the user account itself). Such rules could also be used by a nefarious, unprivileged user to catalog and enumerate any number of IP addresses related to these account creations.",
      "CVE-2021-31553": "An issue was discovered in the CheckUser extension for MediaWiki through 1.35.2. MediaWiki usernames with trailing whitespace could be stored in the cu_log database table such that denial of service occurred for certain CheckUser extension pages and functionality. For example, the attacker could turn off Special:CheckUserLog and thus interfere with usage tracking.",
      "CVE-2021-31554": "An issue was discovered in the AbuseFilter extension for MediaWiki through 1.35.2. It improperly handled account blocks for certain automatically created MediaWiki user accounts, thus allowing nefarious users to remain unblocked.",
      "CVE-2021-31555": "An issue was discovered in the Oauth extension for MediaWiki through 1.35.2. It did not validate the oarc_version (aka oauth_registered_consumer.oarc_version) parameter's length.",
      "CVE-2021-31556": "An issue was discovered in the Oauth extension for MediaWiki through 1.35.2. MWOAuthConsumerSubmitControl.php does not ensure that the length of an RSA key will fit in a MySQL blob.",
      "CVE-2021-35197": "In MediaWiki before 1.31.15, 1.32.x through 1.35.x before 1.35.3, and 1.36.x before 1.36.1, bots have certain unintended API access. When a bot account has a \"sitewide block\" applied, it is able to still \"purge\" pages through the MediaWiki Action API (which a \"sitewide block\" should have prevented).",
      "CVE-2021-36125": "An issue was discovered in the CentralAuth extension in MediaWiki through 1.36. The Special:GlobalRenameRequest page is vulnerable to infinite loops and denial of service attacks when a user's current username is beyond an arbitrary maximum configuration value (MaxNameChars).",
      "CVE-2021-36126": "An issue was discovered in the AbuseFilter extension in MediaWiki through 1.36. If the MediaWiki:Abusefilter-blocker message is invalid within the content language, the filter user falls back to the English version, but that English version could also be invalid on a wiki. This would result in a fatal error, and potentially fail to block or restrict a potentially nefarious user.",
      "CVE-2021-36127": "An issue was discovered in the CentralAuth extension in MediaWiki through 1.36. The Special:GlobalUserRights page provided search results which, for a suppressed MediaWiki user, were different than for any other user, thus easily disclosing suppressed accounts (which are supposed to be completely hidden).",
      "CVE-2021-36128": "An issue was discovered in the CentralAuth extension in MediaWiki through 1.36. Autoblocks for CentralAuth-issued suppression blocks are not properly implemented.",
      "CVE-2021-36129": "An issue was discovered in the Translate extension in MediaWiki through 1.36. The Aggregategroups Action API module does not validate the parameter for aggregategroup when action=remove is set, thus allowing users with the translate-manage right to silently delete various groups' metadata.",
      "CVE-2021-36130": "An XSS issue was discovered in the SocialProfile extension in MediaWiki through 1.36. Within several gift-related special pages, a privileged user with the awardmanage right could inject arbitrary HTML and JavaScript within various gift-related data fields. The attack could easily propagate across many pages for many users.",
      "CVE-2021-36131": "An XSS issue was discovered in the SportsTeams extension in MediaWiki through 1.36. Within several special pages, a privileged user could inject arbitrary HTML and JavaScript within various data fields. The attack could easily propagate across many pages for many users.",
      "CVE-2021-36132": "An issue was discovered in the FileImporter extension in MediaWiki through 1.36. For certain relaxed configurations of the $wgFileImporterRequiredRight variable, it might not validate all appropriate user rights, thus allowing a user with insufficient rights to perform operations (specifically file uploads) that they should not be allowed to perform.",
      "CVE-2021-41798": "MediaWiki before 1.36.2 allows XSS. Month related MediaWiki messages are not escaped before being used on the Special:Search results page.",
      "CVE-2021-41799": "MediaWiki before 1.36.2 allows a denial of service (resource consumption because of lengthy query processing time). ApiQueryBacklinks (action=query&list=backlinks) can cause a full table scan.",
      "CVE-2021-41800": "MediaWiki before 1.36.2 allows a denial of service (resource consumption because of lengthy query processing time). Visiting Special:Contributions can sometimes result in a long running SQL query because PoolCounter protection is mishandled.",
      "CVE-2021-41801": "The ReplaceText extension through 1.41 for MediaWiki has Incorrect Access Control. When a user is blocked after submitting a replace job, the job is still run, even if it may be run at a later time (due to the job queue backlog)",
      "CVE-2021-42040": "An issue was discovered in MediaWiki through 1.36.2. A parser function related to loop control allowed for an infinite loop (and php-fpm hang) within the Loops extension because egLoopsCountLimit is mishandled. This could lead to memory exhaustion.",
      "CVE-2021-42041": "An issue was discovered in CentralAuth in MediaWiki through 1.36.2. The rightsnone MediaWiki message was not being properly sanitized and allowed for the injection and execution of HTML and JavaScript via the setchange log.",
      "CVE-2021-42042": "An issue was discovered in SpecialEditGrowthConfig in the GrowthExperiments extension in MediaWiki through 1.36.2. The growthexperiments-edit-config-error-invalid-title MediaWiki message was not being properly sanitized and allowed for the injection and execution of HTML and JavaScript.",
      "CVE-2021-42043": "An issue was discovered in Special:MediaSearch in the MediaSearch extension in MediaWiki through 1.36.2. The suggestion text (a parameter to mediasearch-did-you-mean) was not being properly sanitized and allowed for the injection and execution of HTML and JavaScript via the intitle: search operator within the query.",
      "CVE-2021-42044": "An issue was discovered in the Mentor dashboard in the GrowthExperiments extension in MediaWiki through 1.36.2. The Growthexperiments-mentor-dashboard-mentee-overview-add-filter-total-edits-headline, growthexperiments-mentor-dashboard-mentee-overview-add-filter-starred-headline, growthexperiments-mentor-dashboard-mentee-overview-info-text, growthexperiments-mentor-dashboard-mentee-overview-info-legend-headline, and growthexperiments-mentor-dashboard-mentee-overview-active-ago MediaWiki messages were not being properly sanitized and allowed for the injection and execution of HTML and JavaScript."
    }
  },
  {
    "name": "mitmproxy-6.0.2",
    "pname": "mitmproxy",
    "version": "6.0.2",
    "affected_by": [
      "CVE-2021-39214"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-39214": 9.8
    },
    "maintainers": [
      {
        "github": "fpletz",
        "email": "fpletz@fnordicwalking.de"
      },
      {
        "github": "kamilchm",
        "email": "kamil.chm@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-39214": "mitmproxy is an interactive, SSL/TLS-capable intercepting proxy. In mitmproxy 7.0.2 and below, a malicious client or server is able to perform HTTP request smuggling attacks through mitmproxy. This means that a malicious client/server could smuggle a request/response through mitmproxy as part of another request/response's HTTP message body. While a smuggled request is still captured as part of another request's body, it does not appear in the request list and does not go through the usual mitmproxy event hooks, where users may have implemented custom access control checks or input sanitization. Unless one uses mitmproxy to protect an HTTP/1 service, no action is required. The vulnerability has been fixed in mitmproxy 7.0.3 and above."
    }
  },
  {
    "name": "ncurses-6.2",
    "pname": "ncurses",
    "version": "6.2",
    "affected_by": [
      "CVE-2021-39537"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-39537": 8.8
    },
    "maintainers": [],
    "description": {
      "CVE-2021-39537": "An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow."
    }
  },
  {
    "name": "openssh-8.6p1",
    "pname": "openssh",
    "version": "8.6p1",
    "affected_by": [
      "CVE-2016-20012",
      "CVE-2021-41617"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2016-20012": 5.3,
      "CVE-2021-41617": 7.0
    },
    "maintainers": [
      {
        "github": "edolstra",
        "email": "edolstra+nixpkgs@gmail.com"
      },
      {
        "github": "aneeshusa",
        "email": "aneeshusa@gmail.com"
      }
    ],
    "description": {
      "CVE-2016-20012": "OpenSSH through 8.7 allows remote attackers, who have a suspicion that a certain combination of username and public key is known to an SSH server, to test whether this suspicion is correct. This occurs because a challenge is sent only when that combination could be valid for a login session.",
      "CVE-2021-41617": "sshd in OpenSSH 6.2 through 8.x before 8.8, when certain non-default configurations are used, allows privilege escalation because supplemental groups are not initialized as expected. Helper programs for AuthorizedKeysCommand and AuthorizedPrincipalsCommand may run with privileges associated with group memberships of the sshd process, if the configuration specifies running the command as a different user."
    }
  },
  {
    "name": "pomerium-0.13.6",
    "pname": "pomerium",
    "version": "0.13.6",
    "affected_by": [
      "CVE-2021-39204",
      "CVE-2021-39206"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-39204": 7.5,
      "CVE-2021-39206": 8.6
    },
    "maintainers": [
      {
        "github": "lukegb",
        "email": "nix@lukegb.com"
      },
      {
        "github": "kalbasit",
        "email": "wael.nasreddine@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-39204": "Pomerium is an open source identity-aware access proxy. Envoy, which Pomerium is based on, incorrectly handles resetting of HTTP/2 streams with excessive complexity. This can lead to high CPU utilization when a large number of streams are reset. This can result in a DoS condition. Pomerium versions 0.14.8 and 0.15.1 contain an upgraded envoy binary with this vulnerability patched.",
      "CVE-2021-39206": "Pomerium is an open source identity-aware access proxy. Envoy, which Pomerium is based on, contains two authorization related vulnerabilities CVE-2021-32777 and CVE-2021-32779. This may lead to incorrect routing or authorization policy decisions. With specially crafted requests, incorrect authorization or routing decisions may be made by Pomerium. Pomerium v0.14.8 and v0.15.1 contain an upgraded envoy binary with these vulnerabilities patched. This issue can only be triggered when using path prefix based policy. Removing any such policies should provide mitigation."
    }
  },
  {
    "name": "strongswan-5.8.1",
    "pname": "strongswan",
    "version": "5.8.1",
    "affected_by": [
      "CVE-2021-41990",
      "CVE-2021-41991"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-41990": 7.5,
      "CVE-2021-41991": 7.5
    },
    "maintainers": [],
    "description": {
      "CVE-2021-41990": "The gmp plugin in strongSwan before 5.9.4 has a remote integer overflow via a crafted certificate with an RSASSA-PSS signature. For example, this can be triggered by an unrelated self-signed CA certificate sent by an initiator. Remote code execution cannot occur.",
      "CVE-2021-41991": "The in-memory certificate cache in strongSwan before 5.9.4 has a remote integer overflow upon receiving many requests with different certificates to fill the cache and later trigger the replacement of cache entries. The code attempts to select a less-often-used cache entry by means of a random number generator, but this is not done correctly. Remote code execution might be a slight possibility."
    }
  },
  {
    "name": "teleport-6.1.3",
    "pname": "teleport",
    "version": "6.1.3",
    "affected_by": [
      "CVE-2021-41393",
      "CVE-2021-41394",
      "CVE-2021-41395"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-41393": 9.8,
      "CVE-2021-41394": 5.3,
      "CVE-2021-41395": 6.5
    },
    "maintainers": [
      {
        "github": "sigma",
        "email": "yann.hodique@gmail.com"
      },
      {
        "github": "tomberek",
        "email": "tomberek@gmail.com"
      },
      {
        "github": "freezeboy",
        "email": "freezeboy@users.noreply.github.com"
      },
      {
        "github": "kalbasit",
        "email": "wael.nasreddine@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-41393": "Teleport before 4.4.11, 5.x before 5.2.4, 6.x before 6.2.12, and 7.x before 7.1.1 allows forgery of SSH host certificates in some situations.",
      "CVE-2021-41394": "Teleport before 4.4.11, 5.x before 5.2.4, 6.x before 6.2.12, and 7.x before 7.1.1 allows alteration of build artifacts in some situations.",
      "CVE-2021-41395": "Teleport before 6.2.12 and 7.x before 7.1.1 allows attackers to control a database connection string, in some situations, via a crafted database name or username."
    }
  },
  {
    "name": "tinyxml-2-6.0.0",
    "pname": "tinyxml",
    "version": "2-6.0.0",
    "affected_by": [
      "CVE-2021-42260"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-42260": 7.5
    },
    "maintainers": [],
    "description": {
      "CVE-2021-42260": "TinyXML through 2.6.2 has an infinite loop in TiXmlParsingData::Stamp in tinyxmlparser.cpp via the TIXML_UTF_LEAD_0 case. It can be triggered by a crafted XML message and leads to a denial of service."
    }
  },
  {
    "name": "vault-1.7.4",
    "pname": "vault",
    "version": "1.7.4",
    "affected_by": [
      "CVE-2021-41802"
    ],
    "whitelisted": [
      "CVE-2021-38553",
      "CVE-2021-38554"
    ],
    "cvssv3_basescore": {
      "CVE-2021-38553": 4.4,
      "CVE-2021-38554": 5.3,
      "CVE-2021-41802": 5.4
    },
    "maintainers": [
      {
        "github": "rushmorem",
        "email": "rushmore@webenchanter.com"
      },
      {
        "github": "lnl7",
        "email": "daiderd@gmail.com"
      },
      {
        "github": "offlinehacker",
        "email": "jaka@x-truder.net"
      },
      {
        "github": "pradeepchhetri",
        "email": "pradeep.chhetri89@gmail.com"
      },
      {
        "github": "Chili-Man",
        "email": "dr.elhombrechile@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-38553": "HashiCorp Vault and Vault Enterprise 1.4.0 through 1.7.3 initialized an underlying database file associated with the Integrated Storage feature with excessively broad filesystem permissions. Fixed in Vault and Vault Enterprise 1.8.0.",
      "CVE-2021-38554": "HashiCorp Vault and Vault Enterprise’s UI erroneously cached and exposed user-viewed secrets between sessions in a single shared browser. Fixed in 1.8.0 and pending 1.7.4 / 1.6.6 releases.",
      "CVE-2021-41802": "HashiCorp Vault and Vault Enterprise through 1.7.4 and 1.8.3 allowed a user with write permission to an entity alias ID sharing a mount accessor with another user to acquire this other user’s policies by merging their identities. Fixed in Vault and Vault Enterprise 1.7.5 and 1.8.4."
    }
  },
  {
    "name": "vim-8.2.2567",
    "pname": "vim",
    "version": "8.2.2567",
    "affected_by": [
      "CVE-2021-3778",
      "CVE-2021-3796",
      "CVE-2021-3872",
      "CVE-2021-3875"
    ],
    "whitelisted": [
      "CVE-2021-3770"
    ],
    "cvssv3_basescore": {
      "CVE-2021-3770": 7.8,
      "CVE-2021-3778": 7.8,
      "CVE-2021-3796": 7.3,
      "CVE-2021-3872": 7.8,
      "CVE-2021-3875": 5.5
    },
    "maintainers": [
      {
        "github": "lovek323",
        "email": "jason@oconal.id.au"
      },
      {
        "github": "equirosa",
        "email": "eduardo@eduardoquiros.com"
      }
    ],
    "description": {
      "CVE-2021-3770": "vim is vulnerable to Heap-based Buffer Overflow",
      "CVE-2021-3778": "vim is vulnerable to Heap-based Buffer Overflow",
      "CVE-2021-3796": "vim is vulnerable to Use After Free",
      "CVE-2021-3872": "vim is vulnerable to Heap-based Buffer Overflow",
      "CVE-2021-3875": "vim is vulnerable to Heap-based Buffer Overflow"
    }
  },
  {
    "name": "vyper-0.2.11",
    "pname": "vyper",
    "version": "0.2.11",
    "affected_by": [
      "CVE-2021-41121",
      "CVE-2021-41122"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-41121": 8.8,
      "CVE-2021-41122": 4.3
    },
    "maintainers": [
      {
        "github": "siraben",
        "email": "bensiraphob@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-41121": "Vyper is a Pythonic Smart Contract Language for the EVM. In affected versions when performing a function call inside a literal struct, there is a memory corruption issue that occurs because of an incorrect pointer to the the top of the stack. This issue has been resolved in version 0.3.0.",
      "CVE-2021-41122": "Vyper is a Pythonic Smart Contract Language for the EVM. In affected versions external functions did not properly validate the bounds of decimal arguments. The can lead to logic errors. This issue has been resolved in version 0.3.0."
    }
  },
  {
    "name": "wasmtime-0.21.0",
    "pname": "wasmtime",
    "version": "0.21.0",
    "affected_by": [
      "CVE-2021-39216",
      "CVE-2021-39219"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-39216": 6.3,
      "CVE-2021-39219": 6.3
    },
    "maintainers": [
      {
        "github": "matthewbauer",
        "email": "mjbauer95@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-39216": "Wasmtime is an open source runtime for WebAssembly & WASI. In Wasmtime from version 0.19.0 and before version 0.30.0 there was a use-after-free bug when passing `externref`s from the host to guest Wasm content. To trigger the bug, you have to explicitly pass multiple `externref`s from the host to a Wasm instance at the same time, either by passing multiple `externref`s as arguments from host code to a Wasm function, or returning multiple `externref`s to Wasm from a multi-value return function defined in the host. If you do not have host code that matches one of these shapes, then you are not impacted. If Wasmtime's `VMExternRefActivationsTable` became filled to capacity after passing the first `externref` in, then passing in the second `externref` could trigger a garbage collection. However the first `externref` is not rooted until we pass control to Wasm, and therefore could be reclaimed by the collector if nothing else was holding a reference to it or otherwise keeping it alive. Then, when control was passed to Wasm after the garbage collection, Wasm could use the first `externref`, which at this point has already been freed. We have reason to believe that the effective impact of this bug is relatively small because usage of `externref` is currently quite rare. The bug has been fixed, and users should upgrade to Wasmtime 0.30.0. If you cannot upgrade Wasmtime yet, you can avoid the bug by disabling reference types support in Wasmtime by passing `false` to `wasmtime::Config::wasm_reference_types`.",
      "CVE-2021-39219": "Wasmtime is an open source runtime for WebAssembly & WASI. Wasmtime before version 0.30.0 is affected by a type confusion vulnerability. As a Rust library the `wasmtime` crate clearly marks which functions are safe and which are `unsafe`, guaranteeing that if consumers never use `unsafe` then it should not be possible to have memory unsafety issues in their embeddings of Wasmtime. An issue was discovered in the safe API of `Linker::func_*` APIs. These APIs were previously not sound when one `Engine` was used to create the `Linker` and then a different `Engine` was used to create a `Store` and then the `Linker` was used to instantiate a module into that `Store`. Cross-`Engine` usage of functions is not supported in Wasmtime and this can result in type confusion of function pointers, resulting in being able to safely call a function with the wrong type. Triggering this bug requires using at least two `Engine` values in an embedding and then additionally using two different values with a `Linker` (one at the creation time of the `Linker` and another when instantiating a module with the `Linker`). It's expected that usage of more-than-one `Engine` in an embedding is relatively rare since an `Engine` is intended to be a globally shared resource, so the expectation is that the impact of this issue is relatively small. The fix implemented is to change this behavior to `panic!()` in Rust instead of silently allowing it. Using different `Engine` instances with a `Linker` is a programmer bug that `wasmtime` catches at runtime. This bug has been patched and users should upgrade to Wasmtime version 0.30.0. If you cannot upgrade Wasmtime and are using more than one `Engine` in your embedding it's recommended to instead use only one `Engine` for the entire program if possible. An `Engine` is designed to be a globally shared resource that is suitable to have only one for the lifetime of an entire process. If using multiple `Engine`s is required then code should be audited to ensure that `Linker` is only used with one `Engine`."
    }
  },
  {
    "name": "wordpress-5.7.3",
    "pname": "wordpress",
    "version": "5.7.3",
    "affected_by": [
      "CVE-2021-39200",
      "CVE-2021-39201"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-39200": 5.3,
      "CVE-2021-39201": 5.4
    },
    "maintainers": [
      {
        "github": "basvandijk",
        "email": "v.dijk.bas@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-39200": "WordPress is a free and open-source content management system written in PHP and paired with a MySQL or MariaDB database. In affected versions output data of the function wp_die() can be leaked under certain conditions, which can include data like nonces. It can then be used to perform actions on your behalf. This has been patched in WordPress 5.8.1, along with any older affected versions via minor releases. It's strongly recommended that you keep auto-updates enabled to receive the fix.",
      "CVE-2021-39201": "WordPress is a free and open-source content management system written in PHP and paired with a MySQL or MariaDB database. ### Impact The issue allows an authenticated but low-privileged user (like contributor/author) to execute XSS in the editor. This bypasses the restrictions imposed on users who do not have the permission to post `unfiltered_html`. ### Patches This has been patched in WordPress 5.8, and will be pushed to older versions via minor releases (automatic updates). It's strongly recommended that you keep auto-updates enabled to receive the fix. ### References https://wordpress.org/news/category/releases/ https://hackerone.com/reports/1142140 ### For more information If you have any questions or comments about this advisory: * Open an issue in [HackerOne](https://hackerone.com/wordpress)"
    }
  }
]
