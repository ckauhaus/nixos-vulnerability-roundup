[
  {
    "name": "bundler-2.2.24",
    "pname": "bundler",
    "version": "2.2.24",
    "affected_by": [
      "CVE-2021-43809"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-43809": 7.3
    },
    "maintainers": [],
    "description": {
      "CVE-2021-43809": "`Bundler` is a package for managing application dependencies in Ruby. In `bundler` versions before 2.2.33, when working with untrusted and apparently harmless `Gemfile`'s, it is not expected that they lead to execution of external code, unless that's explicit in the ruby code inside the `Gemfile` itself. However, if the `Gemfile` includes `gem` entries that use the `git` option with invalid, but seemingly harmless, values with a leading dash, this can be false. To handle dependencies that come from a Git repository instead of a registry, Bundler uses various commands, such as `git clone`. These commands are being constructed using user input (e.g. the repository URL). When building the commands, Bundler versions before 2.2.33 correctly avoid Command Injection vulnerabilities by passing an array of arguments instead of a command string. However, there is the possibility that a user input starts with a dash (`-`) and is therefore treated as an optional argument instead of a positional one. This can lead to Code Execution because some of the commands have options that can be leveraged to run arbitrary executables. Since this value comes from the `Gemfile` file, it can contain any character, including a leading dash. To exploit this vulnerability, an attacker has to craft a directory containing a `Gemfile` file that declares a dependency that is located in a Git repository. This dependency has to have a Git URL in the form of `-u./payload`. This URL will be used to construct a Git clone command but will be interpreted as the upload-pack argument. Then this directory needs to be shared with the victim, who then needs to run a command that evaluates the Gemfile, such as `bundle lock`, inside. This vulnerability can lead to Arbitrary Code Execution, which could potentially lead to the takeover of the system. However, the exploitability is very low, because it requires a lot of user interaction. Bundler 2.2.33 has patched this problem by inserting `--` as an argument before any positional arguments to those Git commands that were affected by this issue. Regardless of whether users can upgrade or not, they should review any untrustred `Gemfile`'s before running any `bundler` commands that may read them, since they can contain arbitrary ruby code."
    }
  },
  {
    "name": "keepalived-2.2.4",
    "pname": "keepalived",
    "version": "2.2.4",
    "affected_by": [
      "CVE-2021-44225"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-44225": 5.4
    },
    "maintainers": [],
    "description": {
      "CVE-2021-44225": "In Keepalived through 2.2.4, the D-Bus policy does not sufficiently restrict the message destination, allowing any user to inspect and manipulate any property. This leads to access-control bypass in some situations in which an unrelated D-Bus system service has a settable (writable) property"
    }
  },
  {
    "name": "lapack-3",
    "pname": "lapack",
    "version": "3",
    "affected_by": [
      "CVE-2021-4048"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-4048": 9.1
    },
    "maintainers": [
      {
        "github": "ttuegel",
        "email": "ttuegel@mailbox.org"
      }
    ],
    "description": {
      "CVE-2021-4048": "An out-of-bounds read flaw was found in the CLARRV, DLARRV, SLARRV, and ZLARRV functions in lapack through version 3.10.0, as also used in OpenBLAS before version 0.3.18. Specially crafted inputs passed to these functions could cause an application using lapack to crash or possibly disclose portions of its memory."
    }
  },
  {
    "name": "mattermost-5.37.2",
    "pname": "mattermost",
    "version": "5.37.2",
    "affected_by": [
      "CVE-2021-37861"
    ],
    "whitelisted": [
      "CVE-2021-37860"
    ],
    "cvssv3_basescore": {
      "CVE-2021-37860": 6.1,
      "CVE-2021-37861": 7.5
    },
    "maintainers": [
      {
        "github": "fpletz",
        "email": "fpletz@fnordicwalking.de"
      },
      {
        "github": "ryantm",
        "email": "ryan@ryantm.com"
      }
    ],
    "description": {
      "CVE-2021-37860": "Mattermost 5.38 and earlier fails to sufficiently sanitize clipboard contents, which allows a user-assisted attacker to inject arbitrary web script in product deployments that explicitly disable the default CSP.",
      "CVE-2021-37861": "Mattermost 6.0.2 and earlier fails to sufficiently sanitize user's password in audit logs when user creation fails."
    }
  },
  {
    "name": "nomad-1.0.12",
    "pname": "nomad",
    "version": "1.0.12",
    "affected_by": [
      "CVE-2021-43415"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-43415": 8.8
    },
    "maintainers": [
      {
        "github": "rushmorem",
        "email": "rushmore@webenchanter.com"
      },
      {
        "github": "pradeepchhetri",
        "email": "pradeep.chhetri89@gmail.com"
      },
      {
        "github": "endocrimes",
        "email": "dani@builds.terrible.systems"
      },
      {
        "github": "maxeaubrey",
        "email": "maxeaubrey@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-43415": "HashiCorp Nomad and Nomad Enterprise up to 1.0.13, 1.1.7, and 1.2.0, with the QEMU task driver enabled, allowed authenticated users with job submission capabilities to bypass the configured allowed image paths. Fixed in 1.0.14, 1.1.8, and 1.2.1."
    }
  },
  {
    "name": "nomad-1.1.6",
    "pname": "nomad",
    "version": "1.1.6",
    "affected_by": [
      "CVE-2021-43415"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-43415": 8.8
    },
    "maintainers": [
      {
        "github": "rushmorem",
        "email": "rushmore@webenchanter.com"
      },
      {
        "github": "pradeepchhetri",
        "email": "pradeep.chhetri89@gmail.com"
      },
      {
        "github": "endocrimes",
        "email": "dani@builds.terrible.systems"
      },
      {
        "github": "maxeaubrey",
        "email": "maxeaubrey@gmail.com"
      },
      {
        "github": "kalbasit",
        "email": "wael.nasreddine@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-43415": "HashiCorp Nomad and Nomad Enterprise up to 1.0.13, 1.1.7, and 1.2.0, with the QEMU task driver enabled, allowed authenticated users with job submission capabilities to bypass the configured allowed image paths. Fixed in 1.0.14, 1.1.8, and 1.2.1."
    }
  },
  {
    "name": "oh-my-zsh-2021-12-07",
    "pname": "oh-my-zsh",
    "version": "2021-12-07",
    "affected_by": [
      "CVE-2021-3727"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-3727": 9.8
    },
    "maintainers": [
      {
        "github": "nequissimus",
        "email": "tim@nequissimus.com"
      }
    ],
    "description": {
      "CVE-2021-3727": "# Vulnerability in `rand-quote` and `hitokoto` plugins **Description**: the `rand-quote` and `hitokoto` fetch quotes from quotationspage.com and hitokoto.cn respectively, do some process on them and then use `print -P` to print them. If these quotes contained the proper symbols, they could trigger command injection. Given that they're an external API, it's not possible to know if the quotes are safe to use. **Fixed in**: [72928432](https://github.com/ohmyzsh/ohmyzsh/commit/72928432). **Impacted areas**: - `rand-quote` plugin (`quote` function). - `hitokoto` plugin (`hitokoto` function)."
    }
  },
  {
    "name": "openblas-0.3.17",
    "pname": "openblas",
    "version": "0.3.17",
    "affected_by": [
      "CVE-2021-4048"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-4048": 9.1
    },
    "maintainers": [
      {
        "github": "ttuegel",
        "email": "ttuegel@mailbox.org"
      },
      {
        "github": "ttuegel",
        "email": "ttuegel@mailbox.org"
      }
    ],
    "description": {
      "CVE-2021-4048": "An out-of-bounds read flaw was found in the CLARRV, DLARRV, SLARRV, and ZLARRV functions in lapack through version 3.10.0, as also used in OpenBLAS before version 0.3.18. Specially crafted inputs passed to these functions could cause an application using lapack to crash or possibly disclose portions of its memory."
    }
  },
  {
    "name": "tightvnc-1.3.10",
    "pname": "tightvnc",
    "version": "1.3.10",
    "affected_by": [
      "CVE-2021-42785"
    ],
    "whitelisted": [
      "CVE-2019-15678",
      "CVE-2019-15679",
      "CVE-2019-15680",
      "CVE-2019-8287"
    ],
    "cvssv3_basescore": {
      "CVE-2019-8287": 9.8,
      "CVE-2019-15678": 9.8,
      "CVE-2019-15679": 9.8,
      "CVE-2019-15680": 7.5,
      "CVE-2021-42785": 9.8
    },
    "maintainers": [],
    "description": {
      "CVE-2019-8287": "TightVNC code version 1.3.10 contains global buffer overflow in HandleCoRREBBP macro function, which can potentially result code execution. This attack appear to be exploitable via network connectivity.",
      "CVE-2019-15678": "TightVNC code version 1.3.10 contains heap buffer overflow in rfbServerCutText handler, which can potentially result code execution.. This attack appear to be exploitable via network connectivity.",
      "CVE-2019-15679": "TightVNC code version 1.3.10 contains heap buffer overflow in InitialiseRFBConnection function, which can potentially result code execution. This attack appear to be exploitable via network connectivity.",
      "CVE-2019-15680": "TightVNC code version 1.3.10 contains null pointer dereference in HandleZlibBPP function, which results Denial of System (DoS). This attack appear to be exploitable via network connectivity.",
      "CVE-2021-42785": "Buffer Overflow vulnerability in tvnviewer.exe of TightVNC Viewer allows a remote attacker to execute arbitrary instructions via a crafted FramebufferUpdate packet from a VNC server."
    }
  },
  {
    "name": "vim-8.2.3451",
    "pname": "vim",
    "version": "8.2.3451",
    "affected_by": [
      "CVE-2021-3984",
      "CVE-2021-4019",
      "CVE-2021-4069"
    ],
    "whitelisted": [
      "CVE-2021-3872",
      "CVE-2021-3875",
      "CVE-2021-3903",
      "CVE-2021-3927",
      "CVE-2021-3928",
      "CVE-2021-3968",
      "CVE-2021-3973",
      "CVE-2021-3974"
    ],
    "cvssv3_basescore": {
      "CVE-2021-3872": 7.8,
      "CVE-2021-3875": 5.5,
      "CVE-2021-3903": 7.8,
      "CVE-2021-3927": 7.8,
      "CVE-2021-3928": 7.8,
      "CVE-2021-3968": 8.0,
      "CVE-2021-3973": 7.8,
      "CVE-2021-3974": 7.8,
      "CVE-2021-3984": 7.8,
      "CVE-2021-4019": 7.8,
      "CVE-2021-4069": 7.8
    },
    "maintainers": [
      {
        "github": "lovek323",
        "email": "jason@oconal.id.au"
      },
      {
        "github": "equirosa",
        "email": "eduardo@eduardoquiros.com"
      }
    ],
    "description": {
      "CVE-2021-3872": "vim is vulnerable to Heap-based Buffer Overflow",
      "CVE-2021-3875": "vim is vulnerable to Heap-based Buffer Overflow",
      "CVE-2021-3903": "vim is vulnerable to Heap-based Buffer Overflow",
      "CVE-2021-3927": "vim is vulnerable to Heap-based Buffer Overflow",
      "CVE-2021-3928": "vim is vulnerable to Stack-based Buffer Overflow",
      "CVE-2021-3968": "vim is vulnerable to Heap-based Buffer Overflow",
      "CVE-2021-3973": "vim is vulnerable to Heap-based Buffer Overflow",
      "CVE-2021-3974": "vim is vulnerable to Use After Free",
      "CVE-2021-3984": "vim is vulnerable to Heap-based Buffer Overflow",
      "CVE-2021-4019": "vim is vulnerable to Heap-based Buffer Overflow",
      "CVE-2021-4069": "vim is vulnerable to Use After Free"
    }
  }
]
