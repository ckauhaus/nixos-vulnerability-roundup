[{"name":"archivy-1.4.0","pname":"archivy","version":"1.4.0","affected_by":["CVE-2022-0697"],"whitelisted":["CVE-2021-4162"],"cvssv3_basescore":{"CVE-2021-4162":4.3,"CVE-2022-0697":6.1},"maintainers":[{"github":"siraben","email":"bensiraphob@gmail.com"}],"description":{"CVE-2021-4162":"archivy is vulnerable to Cross-Site Request Forgery (CSRF)","CVE-2022-0697":"Open Redirect in GitHub repository archivy/archivy prior to 1.7.0."}},{"name":"bento4-1.6.0-639","pname":"bento4","version":"1.6.0-639","affected_by":["CVE-2022-27607"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-27607":8.1},"maintainers":[{"github":"makefu","email":"makefu@syntax-fehler.de"}],"description":{"CVE-2022-27607":"Bento4 1.6.0-639 has a heap-based buffer over-read in the AP4_HvccAtom class, a different issue than CVE-2018-14531."}},{"name":"blender-2.93.5","pname":"blender","version":"2.93.5","affected_by":["CVE-2022-0544","CVE-2022-0545"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-0544":5.5,"CVE-2022-0545":7.8},"maintainers":[{"github":"cillianderoiste","email":"cillian.deroiste@gmail.com"},{"github":"veprbl","email":"veprbl@gmail.com"}],"description":{"CVE-2022-0544":"An integer underflow in the DDS loader of Blender leads to an out-of-bounds read, possibly allowing an attacker to read sensitive data using a crafted DDS image file. This flaw affects Blender versions prior to 2.83.19, 2.93.8 and 3.1.","CVE-2022-0545":"An integer overflow in the processing of loaded 2D images leads to a write-what-where vulnerability and an out-of-bounds read vulnerability, allowing an attacker to leak sensitive information or achieve code execution in the context of the Blender process when a specially crafted image file is loaded. This flaw affects Blender versions prior to 2.83.19, 2.93.8 and 3.1."}},{"name":"bluez-5.62","pname":"bluez","version":"5.62","affected_by":["CVE-2022-0204"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-0204":8.8},"maintainers":[],"description":{"CVE-2022-0204":"A heap overflow vulnerability was found in bluez in versions prior to 5.63. An attacker with local network access could pass specially crafted files causing an application to halt or crash, leading to a denial of service."}},{"name":"calibre-web-0.6.13","pname":"calibre-web","version":"0.6.13","affected_by":["CVE-2022-0766","CVE-2022-0767"],"whitelisted":["CVE-2021-25965","CVE-2021-4164","CVE-2021-4170","CVE-2021-4171","CVE-2022-0273","CVE-2022-0339","CVE-2022-0352"],"cvssv3_basescore":{"CVE-2021-4164":8.8,"CVE-2021-4170":5.4,"CVE-2021-4171":9.8,"CVE-2021-25965":8.8,"CVE-2022-0273":6.5,"CVE-2022-0339":9.8,"CVE-2022-0352":6.1,"CVE-2022-0766":9.8,"CVE-2022-0767":9.9},"maintainers":[{"github":"pborzenkov","email":"pavel@borzenkov.net"}],"description":{"CVE-2021-4164":"calibre-web is vulnerable to Cross-Site Request Forgery (CSRF)","CVE-2021-4170":"calibre-web is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","CVE-2021-4171":"calibre-web is vulnerable to Business Logic Errors","CVE-2021-25965":"In Calibre-web, versions 0.6.0 to 0.6.13 are vulnerable to Cross-Site Request Forgery (CSRF). By luring an authenticated user to click on a link, an attacker can create a new user role with admin privileges and attacker-controlled credentials, allowing them to take over the application.","CVE-2022-0273":"Improper Access Control in Pypi calibreweb prior to 0.6.16.","CVE-2022-0339":"Server-Side Request Forgery (SSRF) in Pypi calibreweb prior to 0.6.16.","CVE-2022-0352":"Cross-site Scripting (XSS) - Reflected in Pypi calibreweb prior to 0.6.16.","CVE-2022-0766":"Server-Side Request Forgery (SSRF) in GitHub repository janeczku/calibre-web prior to 0.6.17.","CVE-2022-0767":"Server-Side Request Forgery (SSRF) in GitHub repository janeczku/calibre-web prior to 0.6.17."}},{"name":"clickhouse-21.8.8.29","pname":"clickhouse","version":"21.8.8.29","affected_by":["CVE-2021-42387","CVE-2021-42388","CVE-2021-42389","CVE-2021-42390","CVE-2021-42391","CVE-2021-43304","CVE-2021-43305"],"whitelisted":[],"cvssv3_basescore":{"CVE-2021-42387":8.1,"CVE-2021-42388":8.1,"CVE-2021-42389":6.5,"CVE-2021-42390":6.5,"CVE-2021-42391":6.5,"CVE-2021-43304":8.8,"CVE-2021-43305":8.8},"maintainers":[{"github":"orivej","email":"orivej@gmx.fr"}],"description":{"CVE-2021-42387":"Heap out-of-bounds read in Clickhouse's LZ4 compression codec when parsing a malicious query. As part of the LZ4::decompressImpl() loop, a 16-bit unsigned user-supplied value ('offset') is read from the compressed data. The offset is later used in the length of a copy operation, without checking the upper bounds of the source of the copy operation.","CVE-2021-42388":"Heap out-of-bounds read in Clickhouse's LZ4 compression codec when parsing a malicious query. As part of the LZ4::decompressImpl() loop, a 16-bit unsigned user-supplied value ('offset') is read from the compressed data. The offset is later used in the length of a copy operation, without checking the lower bounds of the source of the copy operation.","CVE-2021-42389":"Divide-by-zero in Clickhouse's Delta compression codec when parsing a malicious query. The first byte of the compressed buffer is used in a modulo operation without being checked for 0.","CVE-2021-42390":"Divide-by-zero in Clickhouse's DeltaDouble compression codec when parsing a malicious query. The first byte of the compressed buffer is used in a modulo operation without being checked for 0.","CVE-2021-42391":"Divide-by-zero in Clickhouse's Gorilla compression codec when parsing a malicious query. The first byte of the compressed buffer is used in a modulo operation without being checked for 0.","CVE-2021-43304":"Heap buffer overflow in Clickhouse's LZ4 compression codec when parsing a malicious query. There is no verification that the copy operations in the LZ4::decompressImpl loop and especially the arbitrary copy operation wildCopy<copy_amount>(op, ip, copy_end), don’t exceed the destination buffer’s limits.","CVE-2021-43305":"Heap buffer overflow in Clickhouse's LZ4 compression codec when parsing a malicious query. There is no verification that the copy operations in the LZ4::decompressImpl loop and especially the arbitrary copy operation wildCopy<copy_amount>(op, ip, copy_end), don’t exceed the destination buffer’s limits. This issue is very similar to CVE-2021-43304, but the vulnerable copy operation is in a different wildCopy call."}},{"name":"consul-1.10.3","pname":"consul","version":"1.10.3","affected_by":["CVE-2022-24687"],"whitelisted":["CVE-2021-41805"],"cvssv3_basescore":{"CVE-2021-41805":8.8,"CVE-2022-24687":6.5},"maintainers":[{"github":"pradeepchhetri","email":"pradeep.chhetri89@gmail.com"},{"github":"vdemeester","email":"vincent@sbr.pm"},{"github":"nh2","email":"mail@nh2.me"},{"github":"kalbasit","email":"wael.nasreddine@gmail.com"}],"description":{"CVE-2021-41805":"HashiCorp Consul Enterprise before 1.8.17, 1.9.x before 1.9.11, and 1.10.x before 1.10.4 has Incorrect Access Control. An ACL token (with the default operator:write permissions) in one namespace can be used for unintended privilege escalation in a different namespace.","CVE-2022-24687":"HashiCorp Consul and Consul Enterprise 1.8.0 through 1.9.14, 1.10.7, and 1.11.2 has Uncontrolled Resource Consumption."}},{"name":"containerd-1.4.11","pname":"containerd","version":"1.4.11","affected_by":["CVE-2022-23648"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-23648":7.5},"maintainers":[],"description":{"CVE-2022-23648":"containerd is a container runtime available as a daemon for Linux and Windows. A bug was found in containerd prior to versions 1.6.1, 1.5.10, and 1.14.12 where containers launched through containerd’s CRI implementation on Linux with a specially-crafted image configuration could gain access to read-only copies of arbitrary files and directories on the host. This may bypass any policy-based enforcement on container setup (including a Kubernetes Pod Security Policy) and expose potentially sensitive information. Kubernetes and crictl can both be configured to use containerd’s CRI implementation. This bug has been fixed in containerd 1.6.1, 1.5.10, and 1.4.12. Users should update to these versions to resolve the issue."}},{"name":"containerd-1.5.9","pname":"containerd","version":"1.5.9","affected_by":["CVE-2022-23648"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-23648":7.5},"maintainers":[{"github":"offlinehacker","email":"jaka@x-truder.net"},{"github":"vdemeester","email":"vincent@sbr.pm"},{"github":"endocrimes","email":"dani@builds.terrible.systems"},{"github":"kalbasit","email":"wael.nasreddine@gmail.com"}],"description":{"CVE-2022-23648":"containerd is a container runtime available as a daemon for Linux and Windows. A bug was found in containerd prior to versions 1.6.1, 1.5.10, and 1.14.12 where containers launched through containerd’s CRI implementation on Linux with a specially-crafted image configuration could gain access to read-only copies of arbitrary files and directories on the host. This may bypass any policy-based enforcement on container setup (including a Kubernetes Pod Security Policy) and expose potentially sensitive information. Kubernetes and crictl can both be configured to use containerd’s CRI implementation. This bug has been fixed in containerd 1.6.1, 1.5.10, and 1.4.12. Users should update to these versions to resolve the issue."}},{"name":"cosign-1.3.0","pname":"cosign","version":"1.3.0","affected_by":["CVE-2022-23649"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-23649":3.3},"maintainers":[{"github":"LeSuisse","email":"thomas@gerbet.me"},{"github":"06kellyjac","email":"hello+nixpkgs@j-k.io"},{"github":"kalbasit","email":"wael.nasreddine@gmail.com"}],"description":{"CVE-2022-23649":"Cosign provides container signing, verification, and storage in an OCI registry for the sigstore project. Prior to version 1.5.2, Cosign can be manipulated to claim that an entry for a signature exists in the Rekor transparency log even if it doesn't. This requires the attacker to have pull and push permissions for the signature in OCI. This can happen with both standard signing with a keypair and \"keyless signing\" with Fulcio. If an attacker has access to the signature in OCI, they can manipulate cosign into believing the entry was stored in Rekor even though it wasn't. The vulnerability has been patched in v1.5.2 of Cosign. The `signature` in the `signedEntryTimestamp` provided by Rekor is now compared to the `signature` that is being verified. If these don't match, then an error is returned. If a valid bundle is copied to a different signature, verification should fail. Cosign output now only informs the user that certificates were verified if a certificate was in fact verified. There is currently no known workaround."}},{"name":"cri-o-1.22.1","pname":"cri-o","version":"1.22.1","affected_by":["CVE-2022-0811"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-0811":8.8},"maintainers":[{"github":"adisbladis","email":"adisbladis@gmail.com"},{"github":"saschagrunert","email":"mail@saschagrunert.de"},{"github":"vdemeester","email":"vincent@sbr.pm"},{"github":"zowoq","email":"59103226+zowoq@users.noreply.github.com"},{"github":"kalbasit","email":"wael.nasreddine@gmail.com"}],"description":{"CVE-2022-0811":"A flaw was found in CRI-O in the way it set kernel options for a pod. This issue allows anyone with rights to deploy a pod on a Kubernetes cluster that uses the CRI-O runtime to achieve a container escape and arbitrary code execution as root on the cluster node, where the malicious pod was deployed."}},{"name":"drogon-1.7.4","pname":"drogon","version":"1.7.4","affected_by":["CVE-2022-25297"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-25297":8.8},"maintainers":[{"github":"urlordjames","email":"urlordjames@gmail.com"}],"description":{"CVE-2022-25297":"This affects the package drogonframework/drogon before 1.7.5. The unsafe handling of file names during upload using HttpFile::save() method may enable attackers to write files to arbitrary locations outside the designated target folder."}},{"name":"edk2-202108","pname":"edk2","version":"202108","affected_by":["CVE-2021-38578"],"whitelisted":[],"cvssv3_basescore":{"CVE-2021-38578":9.8},"maintainers":[],"description":{"CVE-2021-38578":"Existing CommBuffer checks in SmmEntryPoint will not catch underflow when computing BufferSize."}},{"name":"envoy-1.17.3","pname":"envoy","version":"1.17.3","affected_by":["CVE-2021-43824","CVE-2021-43825","CVE-2021-43826","CVE-2022-21654","CVE-2022-21655","CVE-2022-21656","CVE-2022-21657"],"whitelisted":["CVE-2021-32777","CVE-2021-32778","CVE-2021-32779","CVE-2021-32781","CVE-2021-39162","CVE-2021-39204","CVE-2021-39206"],"cvssv3_basescore":{"CVE-2021-32777":8.3,"CVE-2021-32778":7.5,"CVE-2021-32779":8.3,"CVE-2021-32781":7.5,"CVE-2021-39162":8.6,"CVE-2021-39204":7.5,"CVE-2021-39206":8.6,"CVE-2021-43824":7.5,"CVE-2021-43825":7.5,"CVE-2021-43826":7.5,"CVE-2022-21654":9.8,"CVE-2022-21655":7.5,"CVE-2022-21656":5.9,"CVE-2022-21657":6.5},"maintainers":[{"github":"lukegb","email":"nix@lukegb.com"}],"description":{"CVE-2021-32777":"Envoy is an open source L7 proxy and communication bus designed for large modern service oriented architectures. In affected versions when ext-authz extension is sending request headers to the external authorization service it must merge multiple value headers according to the HTTP spec. However, only the last header value is sent. This may allow specifically crafted requests to bypass authorization. Attackers may be able to escalate privileges when using ext-authz extension or back end service that uses multiple value headers for authorization. A specifically constructed request may be delivered by an untrusted downstream peer in the presence of ext-authz extension. Envoy versions 1.19.1, 1.18.4, 1.17.4, 1.16.5 contain fixes to the ext-authz extension to correctly merge multiple request header values, when sending request for authorization.","CVE-2021-32778":"Envoy is an open source L7 proxy and communication bus designed for large modern service oriented architectures. In affected versions envoy’s procedure for resetting a HTTP/2 stream has O(N^2) complexity, leading to high CPU utilization when a large number of streams are reset. Deployments are susceptible to Denial of Service when Envoy is configured with high limit on H/2 concurrent streams. An attacker wishing to exploit this vulnerability would require a client opening and closing a large number of H/2 streams. Envoy versions 1.19.1, 1.18.4, 1.17.4, 1.16.5 contain fixes to reduce time complexity of resetting HTTP/2 streams. As a workaround users may limit the number of simultaneous HTTP/2 dreams for upstream and downstream peers to a low number, i.e. 100.","CVE-2021-32779":"Envoy is an open source L7 proxy and communication bus designed for large modern service oriented architectures. In affected versions envoy incorrectly handled a URI '#fragment' element as part of the path element. Envoy is configured with an RBAC filter for authorization or similar mechanism with an explicit case of a final \"/admin\" path element, or is using a negative assertion with final path element of \"/admin\". The client sends request to \"/app1/admin#foo\". In Envoy prior to 1.18.0, or 1.18.0+ configured with path_normalization=false. Envoy treats fragment as a suffix of the query string when present, or as a suffix of the path when query string is absent, so it evaluates the final path element as \"/admin#foo\" and mismatches with the configured \"/admin\" path element. In Envoy 1.18.0+ configured with path_normalization=true. Envoy transforms this to /app1/admin%23foo and mismatches with the configured /admin prefix. The resulting URI is sent to the next server-agent with the offending \"#foo\" fragment which violates RFC3986 or with the nonsensical \"%23foo\" text appended. A specifically constructed request with URI containing '#fragment' element delivered by an untrusted client in the presence of path based request authorization resulting in escalation of Privileges when path based request authorization extensions. Envoy versions 1.19.1, 1.18.4, 1.17.4, 1.16.5 contain fixes that removes fragment from URI path in incoming requests.","CVE-2021-32781":"Envoy is an open source L7 proxy and communication bus designed for large modern service oriented architectures. In affected versions after Envoy sends a locally generated response it must stop further processing of request or response data. However when local response is generated due the internal buffer overflow while request or response is processed by the filter chain the operation may not be stopped completely and result in accessing a freed memory block. A specifically constructed request delivered by an untrusted downstream or upstream peer in the presence of extensions that modify and increase the size of request or response bodies resulting in a Denial of Service when using extensions that modify and increase the size of request or response bodies, such as decompressor filter. Envoy versions 1.19.1, 1.18.4, 1.17.4, 1.16.5 contain fixes to address incomplete termination of request processing after locally generated response. As a workaround disable Envoy's decompressor, json-transcoder or grpc-web extensions or proprietary extensions that modify and increase the size of request or response bodies, if feasible.","CVE-2021-39162":"Pomerium is an open source identity-aware access proxy. Envoy, which Pomerium is based on, can abnormally terminate if an H/2 GOAWAY and SETTINGS frame are received in the same IO event. This can lead to a DoS in the presence of untrusted *upstream* servers. 0.15.1 contains an upgraded envoy binary with this vulnerability patched. If only trusted upstreams are configured, there is not substantial risk of this condition being triggered.","CVE-2021-39204":"Pomerium is an open source identity-aware access proxy. Envoy, which Pomerium is based on, incorrectly handles resetting of HTTP/2 streams with excessive complexity. This can lead to high CPU utilization when a large number of streams are reset. This can result in a DoS condition. Pomerium versions 0.14.8 and 0.15.1 contain an upgraded envoy binary with this vulnerability patched.","CVE-2021-39206":"Pomerium is an open source identity-aware access proxy. Envoy, which Pomerium is based on, contains two authorization related vulnerabilities CVE-2021-32777 and CVE-2021-32779. This may lead to incorrect routing or authorization policy decisions. With specially crafted requests, incorrect authorization or routing decisions may be made by Pomerium. Pomerium v0.14.8 and v0.15.1 contain an upgraded envoy binary with these vulnerabilities patched. This issue can only be triggered when using path prefix based policy. Removing any such policies should provide mitigation.","CVE-2021-43824":"Envoy is an open source edge and service proxy, designed for cloud-native applications. In affected versions a crafted request crashes Envoy when a CONNECT request is sent to JWT filter configured with regex match. This provides a denial of service attack vector. The only workaround is to not use regex in the JWT filter. Users are advised to upgrade.","CVE-2021-43825":"Envoy is an open source edge and service proxy, designed for cloud-native applications. Sending a locally generated response must stop further processing of request or response data. Envoy tracks the amount of buffered request and response data and aborts the request if the amount of buffered data is over the limit by sending 413 or 500 responses. However when the buffer overflows while response is processed by the filter chain the operation may not be aborted correctly and result in accessing a freed memory block. If this happens Envoy will crash resulting in a denial of service.","CVE-2021-43826":"Envoy is an open source edge and service proxy, designed for cloud-native applications. In affected versions of Envoy a crash occurs when configured for :ref:`upstream tunneling <envoy_v3_api_field_extensions.filters.network.tcp_proxy.v3.TcpProxy.tunneling_config>` and the downstream connection disconnects while the the upstream connection or http/2 stream is still being established. There are no workarounds for this issue. Users are advised to upgrade.","CVE-2022-21654":"Envoy is an open source edge and service proxy, designed for cloud-native applications. Envoy's tls allows re-use when some cert validation settings have changed from their default configuration. The only workaround for this issue is to ensure that default tls settings are used. Users are advised to upgrade.","CVE-2022-21655":"Envoy is an open source edge and service proxy, designed for cloud-native applications. The envoy common router will segfault if an internal redirect selects a route configured with direct response or redirect actions. This will result in a denial of service. As a workaround turn off internal redirects if direct response entries are configured on the same listener.","CVE-2022-21656":"Envoy is an open source edge and service proxy, designed for cloud-native applications. The default_validator.cc implementation used to implement the default certificate validation routines has a \"type confusion\" bug when processing subjectAltNames. This processing allows, for example, an rfc822Name or uniformResourceIndicator to be authenticated as a domain name. This confusion allows for the bypassing of nameConstraints, as processed by the underlying OpenSSL/BoringSSL implementation, exposing the possibility of impersonation of arbitrary servers. As a result Envoy will trust upstream certificates that should not be trusted.","CVE-2022-21657":"Envoy is an open source edge and service proxy, designed for cloud-native applications. In affected versions Envoy does not restrict the set of certificates it accepts from the peer, either as a TLS client or a TLS server, to only those certificates that contain the necessary extendedKeyUsage (id-kp-serverAuth and id-kp-clientAuth, respectively). This means that a peer may present an e-mail certificate (e.g. id-kp-emailProtection), either as a leaf certificate or as a CA in the chain, and it will be accepted for TLS. This is particularly bad when combined with the issue described in pull request #630, in that it allows a Web PKI CA that is intended only for use with S/MIME, and thus exempted from audit or supervision, to issue TLS certificates that will be accepted by Envoy. As a result Envoy will trust upstream certificates that should not be trusted. There are no known workarounds to this issue. Users are advised to upgrade."}},{"name":"fish-3.3.1","pname":"fish","version":"3.3.1","affected_by":["CVE-2022-20001"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-20001":7.8},"maintainers":[{"github":"cole-h","email":"cole.e.helbling@outlook.com"}],"description":{"CVE-2022-20001":"fish is a command line shell. fish version 3.1.0 through version 3.3.1 is vulnerable to arbitrary code execution. git repositories can contain per-repository configuration that change the behavior of git, including running arbitrary commands. When using the default configuration of fish, changing to a directory automatically runs `git` commands in order to display information about the current repository in the prompt. If an attacker can convince a user to change their current directory into one controlled by the attacker, such as on a shared file system or extracted archive, fish will run arbitrary commands under the attacker's control. This problem has been fixed in fish 3.4.0. Note that running git in these directories, including using the git tab completion, remains a potential trigger for this issue. As a workaround, remove the `fish_git_prompt` function from the prompt."}},{"name":"ghostscript-9.53.3","pname":"ghostscript","version":"9.53.3","affected_by":["CVE-2021-3781"],"whitelisted":["CVE-2021-45944","CVE-2021-45949"],"cvssv3_basescore":{"CVE-2021-3781":9.9,"CVE-2021-45944":5.5,"CVE-2021-45949":5.5},"maintainers":[{"github":"viric","email":"viric@viric.name"}],"description":{"CVE-2021-3781":"A trivial sandbox (enabled with the `-dSAFER` option) escape flaw was found in the ghostscript interpreter by injecting a specially crafted pipe command. This flaw allows a specially crafted document to execute arbitrary commands on the system in the context of the ghostscript interpreter. The highest threat from this vulnerability is to confidentiality, integrity, as well as system availability.","CVE-2021-45944":"Ghostscript GhostPDL 9.50 through 9.53.3 has a use-after-free in sampled_data_sample (called from sampled_data_continue and interp).","CVE-2021-45949":"Ghostscript GhostPDL 9.50 through 9.54.0 has a heap-based buffer overflow in sampled_data_finish (called from sampled_data_continue and interp)."}},{"name":"git-2.33.1","pname":"git","version":"2.33.1","affected_by":["CVE-2022-24975"],"whitelisted":["CVE-2018-1000110","CVE-2018-1000182","CVE-2019-1003010","CVE-2020-2136","CVE-2021-21684","CVE-2021-46101"],"cvssv3_basescore":{"CVE-2018-1000110":5.3,"CVE-2018-1000182":6.4,"CVE-2019-1003010":4.3,"CVE-2020-2136":5.4,"CVE-2021-21684":6.1,"CVE-2021-46101":7.5,"CVE-2022-24975":7.5},"maintainers":[{"github":"primeos","email":"dev.primeos@gmail.com"},{"github":"wmertens","email":"Wout.Mertens@gmail.com"},{"github":"globin","email":"mail@glob.in"},{"github":"primeos","email":"dev.primeos@gmail.com"},{"github":"wmertens","email":"Wout.Mertens@gmail.com"},{"github":"globin","email":"mail@glob.in"},{"github":"primeos","email":"dev.primeos@gmail.com"},{"github":"wmertens","email":"Wout.Mertens@gmail.com"},{"github":"globin","email":"mail@glob.in"}],"description":{"CVE-2018-1000110":"An improper authorization vulnerability exists in Jenkins Git Plugin version 3.7.0 and earlier in GitStatus.java that allows an attacker with network access to obtain a list of nodes and users.","CVE-2018-1000182":"A server-side request forgery vulnerability exists in Jenkins Git Plugin 3.9.0 and older in AssemblaWeb.java, GitBlitRepositoryBrowser.java, Gitiles.java, TFS2013GitRepositoryBrowser.java, ViewGitWeb.java that allows attackers with Overall/Read access to cause Jenkins to send a GET request to a specified URL.","CVE-2019-1003010":"A cross-site request forgery vulnerability exists in Jenkins Git Plugin 3.9.1 and earlier in src/main/java/hudson/plugins/git/GitTagAction.java that allows attackers to create a Git tag in a workspace and attach corresponding metadata to a build record.","CVE-2020-2136":"Jenkins Git Plugin 4.2.0 and earlier does not escape the error message for the repository URL for Microsoft TFS field form validation, resulting in a stored cross-site scripting vulnerability.","CVE-2021-21684":"Jenkins Git Plugin 4.8.2 and earlier does not escape the Git SHA-1 checksum parameters provided to commit notifications when displaying them in a build cause, resulting in a stored cross-site scripting (XSS) vulnerability.","CVE-2021-46101":"In Git for windows through 2.34.1 when using git pull to update the local warehouse, git.cmd can be run directly.","CVE-2022-24975":"The --mirror documentation for Git through 2.35.1 does not mention the availability of deleted content, aka the \"GitBleed\" issue. This could present a security risk if information-disclosure auditing processes rely on a clone operation without the --mirror option."}},{"name":"gitea-1.15.11","pname":"gitea","version":"1.15.11","affected_by":["CVE-2022-0905","CVE-2022-1058"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-0905":7.1,"CVE-2022-1058":6.1},"maintainers":[{"github":"disassembler","email":"disasm@gmail.com"},{"github":"kolaente","email":"k@knt.li"},{"github":"ma27","email":"maximilian@mbosch.me"},{"github":"techknowlogick","email":"techknowlogick@gitea.io"}],"description":{"CVE-2022-0905":"Improper Authorization in GitHub repository go-gitea/gitea prior to 1.16.4.","CVE-2022-1058":"Open Redirect on login in GitHub repository go-gitea/gitea prior to 1.16.5."}},{"name":"glibc-2.33-123","pname":"glibc","version":"2.33-123","affected_by":["CVE-2021-38604","CVE-2022-23218","CVE-2022-23219"],"whitelisted":[],"cvssv3_basescore":{"CVE-2021-38604":7.5,"CVE-2022-23218":9.8,"CVE-2022-23219":9.8},"maintainers":[{"github":"edolstra","email":"edolstra+nixpkgs@gmail.com"},{"github":"ma27","email":"maximilian@mbosch.me"},{"github":"edolstra","email":"edolstra+nixpkgs@gmail.com"},{"github":"ma27","email":"maximilian@mbosch.me"}],"description":{"CVE-2021-38604":"In librt in the GNU C Library (aka glibc) through 2.34, sysdeps/unix/sysv/linux/mq_notify.c mishandles certain NOTIFY_REMOVED data, leading to a NULL pointer dereference. NOTE: this vulnerability was introduced as a side effect of the CVE-2021-33574 fix.","CVE-2022-23218":"The deprecated compatibility function svcunix_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its path argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution.","CVE-2022-23219":"The deprecated compatibility function clnt_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its hostname argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution."}},{"name":"go-1.16.13","pname":"go","version":"1.16.13","affected_by":["CVE-2022-24921","CVE-2022-27191"],"whitelisted":["CVE-2021-29923","CVE-2022-23772","CVE-2022-23773","CVE-2022-23806"],"cvssv3_basescore":{"CVE-2021-29923":7.5,"CVE-2022-23772":7.5,"CVE-2022-23773":7.5,"CVE-2022-23806":9.1,"CVE-2022-24921":7.5,"CVE-2022-27191":7.5},"maintainers":[{"github":"c00w","email":"nix@daedrum.net"},{"github":"cstrahan","email":"charles@cstrahan.com"},{"github":"Frostman","email":"me@slukjanov.name"},{"github":"kalbasit","email":"wael.nasreddine@gmail.com"},{"github":"mdlayher","email":"mdlayher@gmail.com"},{"github":"mic92","email":"joerg@thalheim.io"},{"github":"orivej","email":"orivej@gmx.fr"},{"github":"rvolosatovs","email":"rvolosatovs@riseup.net"},{"github":"zowoq","email":"59103226+zowoq@users.noreply.github.com"}],"description":{"CVE-2021-29923":"Go before 1.17 does not properly consider extraneous zero characters at the beginning of an IP address octet, which (in some situations) allows attackers to bypass access control that is based on IP addresses, because of unexpected octal interpretation. This affects net.ParseIP and net.ParseCIDR.","CVE-2022-23772":"Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.","CVE-2022-23773":"cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.","CVE-2022-23806":"Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.","CVE-2022-24921":"regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.","CVE-2022-27191":"golang.org/x/crypto/ssh before 0.0.0-20220314234659-1baeb1ce4c0b in Go through 1.16.15 and 1.17.x through 1.17.8 allows an attacker to crash a server in certain circumstances involving AddHostKey."}},{"name":"go-1.17.5","pname":"go","version":"1.17.5","affected_by":["CVE-2022-24921","CVE-2022-27191"],"whitelisted":["CVE-2022-23772","CVE-2022-23773","CVE-2022-23806"],"cvssv3_basescore":{"CVE-2022-23772":7.5,"CVE-2022-23773":7.5,"CVE-2022-23806":9.1,"CVE-2022-24921":7.5,"CVE-2022-27191":7.5},"maintainers":[{"github":"c00w","email":"nix@daedrum.net"},{"github":"cstrahan","email":"charles@cstrahan.com"},{"github":"Frostman","email":"me@slukjanov.name"},{"github":"kalbasit","email":"wael.nasreddine@gmail.com"},{"github":"mdlayher","email":"mdlayher@gmail.com"},{"github":"mic92","email":"joerg@thalheim.io"},{"github":"orivej","email":"orivej@gmx.fr"},{"github":"rvolosatovs","email":"rvolosatovs@riseup.net"},{"github":"zowoq","email":"59103226+zowoq@users.noreply.github.com"}],"description":{"CVE-2022-23772":"Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.","CVE-2022-23773":"cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.","CVE-2022-23806":"Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.","CVE-2022-24921":"regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.","CVE-2022-27191":"golang.org/x/crypto/ssh before 0.0.0-20220314234659-1baeb1ce4c0b in Go through 1.16.15 and 1.17.x through 1.17.8 allows an attacker to crash a server in certain circumstances involving AddHostKey."}},{"name":"go-ethereum-1.10.8","pname":"go-ethereum","version":"1.10.8","affected_by":["CVE-2022-23327"],"whitelisted":["CVE-2021-41173"],"cvssv3_basescore":{"CVE-2021-41173":5.7,"CVE-2022-23327":7.5},"maintainers":[{"github":"adisbladis","email":"adisbladis@gmail.com"},{"github":"lionello","email":"lio@lunesu.com"},{"github":"RaghavSood","email":"r@raghavsood.com"},{"github":"kalbasit","email":"wael.nasreddine@gmail.com"}],"description":{"CVE-2021-41173":"Go Ethereum is the official Golang implementation of the Ethereum protocol. Prior to version 1.10.9, a vulnerable node is susceptible to crash when processing a maliciously crafted message from a peer. Version v1.10.9 contains patches to the vulnerability. There are no known workarounds aside from upgrading.","CVE-2022-23327":"A design flaw in Go-Ethereum 1.10.12 and older versions allows an attacker node to send 5120 future transactions with a high gas price in one message, which can purge all of pending transactions in a victim node's memory pool, causing a denial of service (DoS)."}},{"name":"gogs-0.12.3","pname":"gogs","version":"0.12.3","affected_by":["CVE-2022-0415","CVE-2022-0870","CVE-2022-0871"],"whitelisted":["CVE-2019-10348"],"cvssv3_basescore":{"CVE-2019-10348":8.8,"CVE-2022-0415":8.8,"CVE-2022-0870":5.3,"CVE-2022-0871":9.1},"maintainers":[{"github":"schneefux","email":"schneefux+nixos_pkg@schneefux.xyz"},{"github":"kalbasit","email":"wael.nasreddine@gmail.com"}],"description":{"CVE-2019-10348":"Jenkins Gogs Plugin stored credentials unencrypted in job config.xml files on the Jenkins master where they can be viewed by users with Extended Read permission, or access to the master file system.","CVE-2022-0415":"Remote Command Execution in uploading repository file in GitHub repository gogs/gogs prior to 0.12.6.","CVE-2022-0870":"Server-Side Request Forgery (SSRF) in GitHub repository gogs/gogs prior to 0.12.5.","CVE-2022-0871":"Improper Authorization in GitHub repository gogs/gogs prior to 0.12.5."}},{"name":"guake-3.6.3","pname":"guake","version":"3.6.3","affected_by":["CVE-2021-23556"],"whitelisted":[],"cvssv3_basescore":{"CVE-2021-23556":8},"maintainers":[{"github":"msteen","email":"emailmatthijs@gmail.com"}],"description":{"CVE-2021-23556":"The package guake before 3.8.5 are vulnerable to Exposed Dangerous Method or Function due to the exposure of execute_command and execute_command_by_uuid methods via the d-bus interface, which makes it possible for a malicious user to run an arbitrary command via the d-bus method. **Note:** Exploitation requires the user to have installed another malicious program that will be able to send dbus signals or run terminal commands."}},{"name":"haproxy-2.3.14","pname":"haproxy","version":"2.3.14","affected_by":["CVE-2022-0711"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-0711":7.5},"maintainers":[{"github":null,"email":"hacking+nixos@babibo.de"}],"description":{"CVE-2022-0711":"A flaw was found in the way HAProxy processed HTTP responses containing the \"Set-Cookie2\" header. This flaw could allow an attacker to send crafted HTTP response packets which lead to an infinite loop, eventually resulting in a denial of service condition. The highest threat from this vulnerability is availability."}},{"name":"httpie-2.6.0","pname":"httpie","version":"2.6.0","affected_by":["CVE-2022-0430","CVE-2022-24737"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-0430":5.3,"CVE-2022-24737":6.5},"maintainers":[{"github":"antono","email":"self@antono.info"},{"github":"relrod","email":"ricky@elrod.me"},{"github":"schneefux","email":"schneefux+nixos_pkg@schneefux.xyz"},{"github":"SuperSandro2000","email":"sandro.jaeckel@gmail.com"}],"description":{"CVE-2022-0430":"Exposure of Sensitive Information to an Unauthorized Actor in GitHub repository httpie/httpie prior to 3.1.0.","CVE-2022-24737":"HTTPie is a command-line HTTP client. HTTPie has the practical concept of sessions, which help users to persistently store some of the state that belongs to the outgoing requests and incoming responses on the disk for further usage. Before 3.1.0, HTTPie didn‘t distinguish between cookies and hosts they belonged. This behavior resulted in the exposure of some cookies when there are redirects originating from the actual host to a third party website. Users are advised to upgrade. There are no known workarounds."}},{"name":"imagemagick-6.9.12-26","pname":"imagemagick","version":"6.9.12-26","affected_by":["CVE-2021-3596","CVE-2021-3610"],"whitelisted":["CVE-2016-5841","CVE-2017-11447","CVE-2018-16328","CVE-2018-16329","CVE-2019-13136","CVE-2019-17547","CVE-2020-25663","CVE-2020-27768","CVE-2020-27769","CVE-2020-27829","CVE-2021-20243","CVE-2021-20244","CVE-2021-20310","CVE-2021-20311","CVE-2021-20312","CVE-2021-20313"],"cvssv3_basescore":{"CVE-2016-5841":9.8,"CVE-2017-11447":6.5,"CVE-2018-16328":9.8,"CVE-2018-16329":9.8,"CVE-2019-13136":7.8,"CVE-2019-17547":8.8,"CVE-2020-25663":5.5,"CVE-2020-27768":3.3,"CVE-2020-27769":3.3,"CVE-2020-27829":5.5,"CVE-2021-3596":6.5,"CVE-2021-3610":7.5,"CVE-2021-20243":5.5,"CVE-2021-20244":5.5,"CVE-2021-20310":7.5,"CVE-2021-20311":7.5,"CVE-2021-20312":7.5,"CVE-2021-20313":7.5},"maintainers":[{"github":"erictapen","email":"kerstin@erictapen.name"},{"github":"erictapen","email":"kerstin@erictapen.name"},{"github":"erictapen","email":"kerstin@erictapen.name"}],"description":{"CVE-2016-5841":"Integer overflow in MagickCore/profile.c in ImageMagick before 7.0.2-1 allows remote attackers to cause a denial of service (segmentation fault) or possibly execute arbitrary code via vectors involving the offset variable.","CVE-2017-11447":"The ReadSCREENSHOTImage function in coders/screenshot.c in ImageMagick before 7.0.6-1 has memory leaks, causing denial of service.","CVE-2018-16328":"In ImageMagick before 7.0.8-8, a NULL pointer dereference exists in the CheckEventLogging function in MagickCore/log.c.","CVE-2018-16329":"In ImageMagick before 7.0.8-8, a NULL pointer dereference exists in the GetMagickProperty function in MagickCore/property.c.","CVE-2019-13136":"ImageMagick before 7.0.8-50 has an integer overflow vulnerability in the function TIFFSeekCustomStream in coders/tiff.c.","CVE-2019-17547":"In ImageMagick before 7.0.8-62, TraceBezier in MagickCore/draw.c has a use-after-free.","CVE-2020-25663":"A call to ConformPixelInfo() in the SetImageAlphaChannel() routine of /MagickCore/channel.c caused a subsequent heap-use-after-free or heap-buffer-overflow READ when GetPixelRed() or GetPixelBlue() was called. This could occur if an attacker is able to submit a malicious image file to be processed by ImageMagick and could lead to denial of service. It likely would not lead to anything further because the memory is used as pixel data and not e.g. a function pointer. This flaw affects ImageMagick versions prior to 7.0.9-0.","CVE-2020-27768":"In ImageMagick, there is an outside the range of representable values of type 'unsigned int' at MagickCore/quantum-private.h. This flaw affects ImageMagick versions prior to 7.0.9-0.","CVE-2020-27769":"In ImageMagick versions before 7.0.9-0, there are outside the range of representable values of type 'float' at MagickCore/quantize.c.","CVE-2020-27829":"A heap based buffer overflow in coders/tiff.c may result in program crash and denial of service in ImageMagick before 7.0.10-45.","CVE-2021-3596":"A NULL pointer dereference flaw was found in ImageMagick in versions prior to 7.0.10-31 in ReadSVGImage() in coders/svg.c. This issue is due to not checking the return value from libxml2's xmlCreatePushParserCtxt() and uses the value directly, which leads to a crash and segmentation fault.","CVE-2021-3610":"A heap-based buffer overflow vulnerability was found in ImageMagick in versions prior to 7.0.11-14 in ReadTIFFImage() in coders/tiff.c. This issue is due to an incorrect setting of the pixel array size, which can lead to a crash and segmentation fault.","CVE-2021-20243":"A flaw was found in ImageMagick in MagickCore/resize.c. An attacker who submits a crafted file that is processed by ImageMagick could trigger undefined behavior in the form of math division by zero. The highest threat from this vulnerability is to system availability.","CVE-2021-20244":"A flaw was found in ImageMagick in MagickCore/visual-effects.c. An attacker who submits a crafted file that is processed by ImageMagick could trigger undefined behavior in the form of math division by zero. The highest threat from this vulnerability is to system availability.","CVE-2021-20310":"A flaw was found in ImageMagick in versions before 7.0.11, where a division by zero ConvertXYZToJzazbz() of MagickCore/colorspace.c may trigger undefined behavior via a crafted image file that is submitted by an attacker and processed by an application using ImageMagick. The highest threat from this vulnerability is to system availability.","CVE-2021-20311":"A flaw was found in ImageMagick in versions before 7.0.11, where a division by zero in sRGBTransformImage() in the MagickCore/colorspace.c may trigger undefined behavior via a crafted image file that is submitted by an attacker processed by an application using ImageMagick. The highest threat from this vulnerability is to system availability.","CVE-2021-20312":"A flaw was found in ImageMagick in versions 7.0.11, where an integer overflow in WriteTHUMBNAILImage of coders/thumbnail.c may trigger undefined behavior via a crafted image file that is submitted by an attacker and processed by an application using ImageMagick. The highest threat from this vulnerability is to system availability.","CVE-2021-20313":"A flaw was found in ImageMagick in versions before 7.0.11. A potential cipher leak when the calculate signatures in TransformSignature is possible. The highest threat from this vulnerability is to data confidentiality."}},{"name":"kate-21.08.3","pname":"kate","version":"21.08.3","affected_by":["CVE-2022-23853"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-23853":7.8},"maintainers":[{"github":"ttuegel","email":"ttuegel@mailbox.org"}],"description":{"CVE-2022-23853":"The LSP (Language Server Protocol) plugin in KDE Kate before 21.12.2 and KTextEditor before 5.91.0 tries to execute the associated LSP server binary when opening a file of a given type. If this binary is absent from the PATH, it will try running the LSP server binary in the directory of the file that was just opened (due to a misunderstanding of the QProcess API, that was never intended). This can be an untrusted directory."}},{"name":"keycloak-16.1.0","pname":"keycloak","version":"16.1.0","affected_by":["CVE-2021-20323"],"whitelisted":[],"cvssv3_basescore":{"CVE-2021-20323":6.1},"maintainers":[{"github":"ngerstle","email":"ngerstle@gmail.com"},{"github":"talyz","email":"kim.lindberger@gmail.com"}],"description":{"CVE-2021-20323":"A POST based reflected Cross Site Scripting vulnerability on has been identified in Keycloak."}},{"name":"ktexteditor-5.87.0","pname":"ktexteditor","version":"5.87.0","affected_by":["CVE-2022-23853"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-23853":7.8},"maintainers":[{"github":"ttuegel","email":"ttuegel@mailbox.org"},{"github":"nyanloutre","email":"paul@nyanlout.re"}],"description":{"CVE-2022-23853":"The LSP (Language Server Protocol) plugin in KDE Kate before 21.12.2 and KTextEditor before 5.91.0 tries to execute the associated LSP server binary when opening a file of a given type. If this binary is absent from the PATH, it will try running the LSP server binary in the directory of the file that was just opened (due to a misunderstanding of the QProcess API, that was never intended). This can be an untrusted directory."}},{"name":"liblouis-3.19.0","pname":"liblouis","version":"3.19.0","affected_by":["CVE-2022-26981"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-26981":7.8},"maintainers":[],"description":{"CVE-2022-26981":"Liblouis through 3.21.0 has a buffer overflow in compilePassOpcode in compileTranslationTable.c (called, indirectly, by tools/lou_checktable.c)."}},{"name":"libpano13-2.9.20","pname":"libpano13","version":"2.9.20","affected_by":["CVE-2021-33293"],"whitelisted":[],"cvssv3_basescore":{"CVE-2021-33293":9.1},"maintainers":[],"description":{"CVE-2021-33293":"Panorama Tools libpano13 v2.9.20 was discovered to contain an out-of-bounds read in the function panoParserFindOLine() in parser.c."}},{"name":"libtiff-4.3.0","pname":"libtiff","version":"4.3.0","affected_by":["CVE-2022-0865","CVE-2022-0891","CVE-2022-0907","CVE-2022-0908","CVE-2022-0909","CVE-2022-0924"],"whitelisted":["CVE-2022-0561","CVE-2022-0562","CVE-2022-22844"],"cvssv3_basescore":{"CVE-2022-0561":5.5,"CVE-2022-0562":5.5,"CVE-2022-0865":6.5,"CVE-2022-0891":7.1,"CVE-2022-0907":5.5,"CVE-2022-0908":5.5,"CVE-2022-0909":5.5,"CVE-2022-0924":5.5,"CVE-2022-22844":5.5},"maintainers":[{"github":"alyssais","email":"hi@alyssa.is"}],"description":{"CVE-2022-0561":"Null source pointer passed as an argument to memcpy() function within TIFFFetchStripThing() in tif_dirread.c in libtiff versions from 3.9.0 to 4.3.0 could lead to Denial of Service via crafted TIFF file. For users that compile libtiff from sources, the fix is available with commit eecb0712.","CVE-2022-0562":"Null source pointer passed as an argument to memcpy() function within TIFFReadDirectory() in tif_dirread.c in libtiff versions from 4.0 to 4.3.0 could lead to Denial of Service via crafted TIFF file. For users that compile libtiff from sources, a fix is available with commit 561599c.","CVE-2022-0865":"Reachable Assertion in tiffcp in libtiff 4.3.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit 5e180045.","CVE-2022-0891":"A heap buffer overflow in ExtractImageSection function in tiffcrop.c in libtiff library Version 4.3.0 allows attacker to trigger unsafe or out of bounds memory access via crafted TIFF image file which could result into application crash, potential information disclosure or any other context-dependent impact","CVE-2022-0907":"Unchecked Return Value to NULL Pointer Dereference in tiffcrop in libtiff 4.3.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit f2b656e2.","CVE-2022-0908":"Null source pointer passed as an argument to memcpy() function within TIFFFetchNormalTag () in tif_dirread.c in libtiff versions up to 4.3.0 could lead to Denial of Service via crafted TIFF file.","CVE-2022-0909":"Divide By Zero error in tiffcrop in libtiff 4.3.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit f8d0f9aa.","CVE-2022-0924":"Out-of-bounds Read error in tiffcp in libtiff 4.3.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit 408976c4.","CVE-2022-22844":"LibTIFF 4.3.0 has an out-of-bounds read in _TIFFmemcpy in tif_unix.c in certain situations involving a custom tag and 0x0200 as the second word of the DE field."}},{"name":"libxml2-2.9.12","pname":"libxml2","version":"2.9.12","affected_by":["CVE-2022-23308"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-23308":7.5},"maintainers":[{"github":"edolstra","email":"edolstra+nixpkgs@gmail.com"},{"github":"edolstra","email":"edolstra+nixpkgs@gmail.com"},{"github":"edolstra","email":"edolstra+nixpkgs@gmail.com"}],"description":{"CVE-2022-23308":"valid.c in libxml2 before 2.9.13 has a use-after-free of ID and IDREF attributes."}},{"name":"liquibase-4.4.3","pname":"liquibase","version":"4.4.3","affected_by":["CVE-2022-0839"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-0839":9.8},"maintainers":[],"description":{"CVE-2022-0839":"Improper Restriction of XML External Entity Reference in GitHub repository liquibase/liquibase prior to 4.8.0."}},{"name":"lua-5.4.3","pname":"lua","version":"5.4.3","affected_by":["CVE-2021-44964"],"whitelisted":["CVE-2021-43519"],"cvssv3_basescore":{"CVE-2021-43519":5.5,"CVE-2021-44964":6.3},"maintainers":[],"description":{"CVE-2021-43519":"Stack overflow in lua_resume of ldo.c in Lua Interpreter 5.1.0~5.4.4 allows attackers to perform a Denial of Service via a crafted script file.","CVE-2021-44964":"Use after free in garbage collector and finalizer of lgc.c in Lua interpreter 5.4.0~5.4.3 allows attackers to perform Sandbox Escape via a crafted script file."}},{"name":"maddy-0.5.2","pname":"maddy","version":"0.5.2","affected_by":["CVE-2022-24732"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-24732":8.8},"maintainers":[{"github":"NickCao","email":"nickcao@nichi.co"},{"github":"kalbasit","email":"wael.nasreddine@gmail.com"}],"description":{"CVE-2022-24732":"Maddy Mail Server is an open source SMTP compatible email server. Versions of maddy prior to 0.5.4 do not implement password expiry or account expiry checking when authenticating using PAM. Users are advised to upgrade. Users unable to upgrade should manually remove expired accounts via existing filtering mechanisms."}},{"name":"mattermost-5.37.5","pname":"mattermost","version":"5.37.5","affected_by":["CVE-2022-0708","CVE-2022-1002","CVE-2022-1003"],"whitelisted":["CVE-2021-37860","CVE-2021-37861","CVE-2021-37864","CVE-2021-37865"],"cvssv3_basescore":{"CVE-2021-37860":6.1,"CVE-2021-37861":7.5,"CVE-2021-37864":6.5,"CVE-2021-37865":5.7,"CVE-2022-0708":6.5,"CVE-2022-1002":5.4,"CVE-2022-1003":4.9},"maintainers":[{"github":"fpletz","email":"fpletz@fnordicwalking.de"},{"github":"ryantm","email":"ryan@ryantm.com"}],"description":{"CVE-2021-37860":"Mattermost 5.38 and earlier fails to sufficiently sanitize clipboard contents, which allows a user-assisted attacker to inject arbitrary web script in product deployments that explicitly disable the default CSP.","CVE-2021-37861":"Mattermost 6.0.2 and earlier fails to sufficiently sanitize user's password in audit logs when user creation fails.","CVE-2021-37864":"Mattermost 6.1 and earlier fails to sufficiently validate permissions while viewing archived channels, which allows authenticated users to view contents of archived channels even when this is denied by system administrators by directly accessing the APIs.","CVE-2021-37865":"Mattermost 6.2 and earlier fails to sufficiently process a specifically crafted GIF file when it is uploaded while drafting a post, which allows authenticated users to cause resource exhaustion while processing the file, resulting in server-side Denial of Service.","CVE-2022-0708":"Mattermost 6.3.0 and earlier fails to protect email addresses of the creator of the team via one of the APIs, which allows authenticated team members to access this information resulting in sensitive & private information disclosure.","CVE-2022-1002":"Mattermost 6.3.0 and earlier fails to properly sanitize the HTML content in the email invitation sent to guest users, which allows registered users with special permissions to invite guest users to inject unescaped HTML content in the email invitations.","CVE-2022-1003":"One of the API in Mattermost version 6.3.0 and earlier fails to properly protect the permissions, which allows the system administrators to combine the two distinct privileges/capabilities in a way that allows them to override certain restricted configurations like EnableUploads."}},{"name":"mitmproxy-7.0.4","pname":"mitmproxy","version":"7.0.4","affected_by":["CVE-2022-24766"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-24766":9.8},"maintainers":[{"github":"fpletz","email":"fpletz@fnordicwalking.de"},{"github":"kamilchm","email":"kamil.chm@gmail.com"}],"description":{"CVE-2022-24766":"mitmproxy is an interactive, SSL/TLS-capable intercepting proxy. In mitmproxy 7.0.4 and below, a malicious client or server is able to perform HTTP request smuggling attacks through mitmproxy. This means that a malicious client/server could smuggle a request/response through mitmproxy as part of another request/response's HTTP message body. While mitmproxy would only see one request, the target server would see multiple requests. A smuggled request is still captured as part of another request's body, but it does not appear in the request list and does not go through the usual mitmproxy event hooks, where users may have implemented custom access control checks or input sanitization. Unless mitmproxy is used to protect an HTTP/1 service, no action is required. The vulnerability has been fixed in mitmproxy 8.0.0 and above. There are currently no known workarounds."}},{"name":"moodle-3.11.4","pname":"moodle","version":"3.11.4","affected_by":["CVE-2022-0983"],"whitelisted":["CVE-2022-0332","CVE-2022-0333","CVE-2022-0334","CVE-2022-0335"],"cvssv3_basescore":{"CVE-2022-0332":9.8,"CVE-2022-0333":3.8,"CVE-2022-0334":4.3,"CVE-2022-0335":8.8,"CVE-2022-0983":8.8},"maintainers":[{"github":"freezeboy","email":"freezeboy@users.noreply.github.com"}],"description":{"CVE-2022-0332":"A flaw was found in Moodle in versions 3.11 to 3.11.4. An SQL injection risk was identified in the h5p activity web service responsible for fetching user attempt data.","CVE-2022-0333":"A flaw was found in Moodle in versions 3.11 to 3.11.4, 3.10 to 3.10.8, 3.9 to 3.9.11 and earlier unsupported versions. The calendar:manageentries capability allowed managers to access or modify any calendar event, but should have been restricted from accessing user level events.","CVE-2022-0334":"A flaw was found in Moodle in versions 3.11 to 3.11.4, 3.10 to 3.10.8, 3.9 to 3.9.11 and earlier unsupported versions. Insufficient capability checks could lead to users accessing their grade report for courses where they did not have the required gradereport/user:view capability.","CVE-2022-0335":"A flaw was found in Moodle in versions 3.11 to 3.11.4, 3.10 to 3.10.8, 3.9 to 3.9.11 and earlier unsupported versions. The \"delete badge alignment\" functionality did not include the necessary token check to prevent a CSRF risk.","CVE-2022-0983":"An SQL injection risk was identified in Badges code relating to configuring criteria. Access to the relevant capability was limited to teachers and managers by default."}},{"name":"mruby-3.0.0","pname":"mruby","version":"3.0.0","affected_by":["CVE-2022-0570","CVE-2022-0614","CVE-2022-0623","CVE-2022-0630","CVE-2022-0631","CVE-2022-0632","CVE-2022-0717","CVE-2022-0890","CVE-2022-1071"],"whitelisted":["CVE-2021-4110","CVE-2021-4188","CVE-2021-46020","CVE-2022-0080","CVE-2022-0240","CVE-2022-0326","CVE-2022-0481","CVE-2022-0525"],"cvssv3_basescore":{"CVE-2021-4110":7.5,"CVE-2021-4188":7.5,"CVE-2021-46020":7.5,"CVE-2022-0080":9.8,"CVE-2022-0240":7.5,"CVE-2022-0326":5.5,"CVE-2022-0481":7.5,"CVE-2022-0525":9.1,"CVE-2022-0570":9.8,"CVE-2022-0614":5.5,"CVE-2022-0623":9.1,"CVE-2022-0630":7.1,"CVE-2022-0631":9.8,"CVE-2022-0632":5.5,"CVE-2022-0717":9.1,"CVE-2022-0890":5.5,"CVE-2022-1071":8.2},"maintainers":[{"github":"nicknovitski","email":"nixpkgs@nicknovitski.com"}],"description":{"CVE-2021-4110":"mruby is vulnerable to NULL Pointer Dereference","CVE-2021-4188":"mruby is vulnerable to NULL Pointer Dereference","CVE-2021-46020":"An untrusted pointer dereference in mrb_vm_exec() of mruby v3.0.0 can lead to a segmentation fault or application crash.","CVE-2022-0080":"mruby is vulnerable to Heap-based Buffer Overflow","CVE-2022-0240":"mruby is vulnerable to NULL Pointer Dereference","CVE-2022-0326":"NULL Pointer Dereference in Homebrew mruby prior to 3.2.","CVE-2022-0481":"NULL Pointer Dereference in Homebrew mruby prior to 3.2.","CVE-2022-0525":"Out-of-bounds Read in Homebrew mruby prior to 3.2.","CVE-2022-0570":"Heap-based Buffer Overflow in Homebrew mruby prior to 3.2.","CVE-2022-0614":"Use of Out-of-range Pointer Offset in Homebrew mruby prior to 3.2.","CVE-2022-0623":"Out-of-bounds Read in Homebrew mruby prior to 3.2.","CVE-2022-0630":"Out-of-bounds Read in Homebrew mruby prior to 3.2.","CVE-2022-0631":"Heap-based Buffer Overflow in Homebrew mruby prior to 3.2.","CVE-2022-0632":"NULL Pointer Dereference in Homebrew mruby prior to 3.2.","CVE-2022-0717":"Out-of-bounds Read in GitHub repository mruby/mruby prior to 3.2.","CVE-2022-0890":"NULL Pointer Dereference in GitHub repository mruby/mruby prior to 3.2.","CVE-2022-1071":"User after free in mrb_vm_exec in GitHub repository mruby/mruby prior to 3.2."}},{"name":"nats-server-2.6.0","pname":"nats-server","version":"2.6.0","affected_by":["CVE-2022-26652"],"whitelisted":["CVE-2022-24450"],"cvssv3_basescore":{"CVE-2022-24450":8.8,"CVE-2022-26652":6.5},"maintainers":[{"github":"swdunlop","email":"swdunlop@gmail.com"}],"description":{"CVE-2022-24450":"NATS nats-server before 2.7.2 has Incorrect Access Control. Any authenticated user can obtain the privileges of the System account by misusing the \"dynamically provisioned sandbox accounts\" feature.","CVE-2022-26652":"NATS nats-server before 2.7.4 allows Directory Traversal (with write access) via an element in a ZIP archive for JetStream streams. nats-streaming-server before 0.24.3 is also affected."}},{"name":"nats-streaming-server-0.22.1","pname":"nats-streaming-server","version":"0.22.1","affected_by":["CVE-2022-26652"],"whitelisted":["CVE-2022-24450"],"cvssv3_basescore":{"CVE-2022-24450":8.8,"CVE-2022-26652":6.5},"maintainers":[{"github":"swdunlop","email":"swdunlop@gmail.com"}],"description":{"CVE-2022-24450":"NATS nats-server before 2.7.2 has Incorrect Access Control. Any authenticated user can obtain the privileges of the System account by misusing the \"dynamically provisioned sandbox accounts\" feature.","CVE-2022-26652":"NATS nats-server before 2.7.4 allows Directory Traversal (with write access) via an element in a ZIP archive for JetStream streams. nats-streaming-server before 0.24.3 is also affected."}},{"name":"nomad-1.0.13","pname":"nomad","version":"1.0.13","affected_by":["CVE-2022-24683","CVE-2022-24684","CVE-2022-24685","CVE-2022-24686"],"whitelisted":["CVE-2021-43415"],"cvssv3_basescore":{"CVE-2021-43415":8.8,"CVE-2022-24683":7.5,"CVE-2022-24684":6.5,"CVE-2022-24685":7.5,"CVE-2022-24686":5.9},"maintainers":[{"github":"rushmorem","email":"rushmore@webenchanter.com"},{"github":"pradeepchhetri","email":"pradeep.chhetri89@gmail.com"},{"github":"endocrimes","email":"dani@builds.terrible.systems"},{"github":"maxeaubrey","email":"maxeaubrey@gmail.com"}],"description":{"CVE-2021-43415":"HashiCorp Nomad and Nomad Enterprise up to 1.0.13, 1.1.7, and 1.2.0, with the QEMU task driver enabled, allowed authenticated users with job submission capabilities to bypass the configured allowed image paths. Fixed in 1.0.14, 1.1.8, and 1.2.1.","CVE-2022-24683":"HashiCorp Nomad and Nomad Enterprise 0.9.2 through 1.0.17, 1.1.11, and 1.2.5 allow operators with read-fs and alloc-exec (or job-submit) capabilities to read arbitrary files on the host filesystem as root.","CVE-2022-24684":"HashiCorp Nomad and Nomad Enterprise before 1.0.17, 1.1.x before 1.1.12, and 1.2.x before 1.2.6 has Uncontrolled Resource Consumption.","CVE-2022-24685":"HashiCorp Nomad and Nomad Enterprise 1.x before 1.0.17, 1.1.x before 1.1.12, and 1.2.x before 1.2.6 has Uncontrolled Resource Consumption.","CVE-2022-24686":"HashiCorp Nomad and Nomad Enterprise 0.3.0 through 1.0.17, 1.1.11, and 1.2.5 artifact download functionality has a race condition such that the Nomad client agent could download the wrong artifact into the wrong destination. Fixed in 1.0.18, 1.1.12, and 1.2.6"}},{"name":"nomad-1.1.8","pname":"nomad","version":"1.1.8","affected_by":["CVE-2022-24683","CVE-2022-24684","CVE-2022-24685","CVE-2022-24686"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-24683":7.5,"CVE-2022-24684":6.5,"CVE-2022-24685":7.5,"CVE-2022-24686":5.9},"maintainers":[{"github":"rushmorem","email":"rushmore@webenchanter.com"},{"github":"pradeepchhetri","email":"pradeep.chhetri89@gmail.com"},{"github":"endocrimes","email":"dani@builds.terrible.systems"},{"github":"maxeaubrey","email":"maxeaubrey@gmail.com"},{"github":"kalbasit","email":"wael.nasreddine@gmail.com"}],"description":{"CVE-2022-24683":"HashiCorp Nomad and Nomad Enterprise 0.9.2 through 1.0.17, 1.1.11, and 1.2.5 allow operators with read-fs and alloc-exec (or job-submit) capabilities to read arbitrary files on the host filesystem as root.","CVE-2022-24684":"HashiCorp Nomad and Nomad Enterprise before 1.0.17, 1.1.x before 1.1.12, and 1.2.x before 1.2.6 has Uncontrolled Resource Consumption.","CVE-2022-24685":"HashiCorp Nomad and Nomad Enterprise 1.x before 1.0.17, 1.1.x before 1.1.12, and 1.2.x before 1.2.6 has Uncontrolled Resource Consumption.","CVE-2022-24686":"HashiCorp Nomad and Nomad Enterprise 0.3.0 through 1.0.17, 1.1.11, and 1.2.5 artifact download functionality has a race condition such that the Nomad client agent could download the wrong artifact into the wrong destination. Fixed in 1.0.18, 1.1.12, and 1.2.6"}},{"name":"ocrfeeder-0.8.3","pname":"ocrfeeder","version":"0.8.3","affected_by":["CVE-2022-27811"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-27811":9.8},"maintainers":[{"github":"doronbehar","email":"me@doronbehar.com"}],"description":{"CVE-2022-27811":"GNOME OCRFeeder before 0.8.4 allows OS command injection via shell metacharacters in a PDF or image filename."}},{"name":"openjpeg-2.4.0","pname":"openjpeg","version":"2.4.0","affected_by":["CVE-2021-3575"],"whitelisted":["CVE-2021-29338"],"cvssv3_basescore":{"CVE-2021-3575":7.8,"CVE-2021-29338":5.5},"maintainers":[{"github":"codyopel","email":"codyopel@gmail.com"}],"description":{"CVE-2021-3575":"A heap-based buffer overflow was found in openjpeg in color.c:379:42 in sycc420_to_rgb when decompressing a crafted .j2k file. An attacker could use this to execute arbitrary code with the permissions of the application compiled against openjpeg.","CVE-2021-29338":"Integer Overflow in OpenJPEG v2.4.0 allows remote attackers to crash the application, causing a Denial of Service (DoS). This occurs when the attacker uses the command line option \"-ImgDir\" on a directory that contains 1048576 files."}},{"name":"openssh-8.8p1","pname":"openssh","version":"8.8p1","affected_by":["CVE-2021-36368"],"whitelisted":[],"cvssv3_basescore":{"CVE-2021-36368":3.7},"maintainers":[{"github":"dasJ","email":"janne@hess.ooo"}],"description":{"CVE-2021-36368":"** DISPUTED ** An issue was discovered in OpenSSH before 8.9. If a client is using public-key authentication with agent forwarding but without -oLogLevel=verbose, and an attacker has silently modified the server to support the None authentication option, then the user cannot determine whether FIDO authentication is going to confirm that the user wishes to connect to that server, or that the user wishes to allow that server to connect to a different server on the user's behalf. NOTE: the vendor's position is \"this is not an authentication bypass, since nothing is being bypassed.\""}},{"name":"peertube-4.1.1","pname":"peertube","version":"4.1.1","affected_by":["CVE-2022-0133","CVE-2022-0508"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-0133":7.5,"CVE-2022-0508":5.3},"maintainers":[{"github":"immae","email":"ismael@bouya.org"},{"github":"izorkin","email":"Izorkin@gmail.com"},{"github":"matthiasbeyer","email":"mail@beyermatthias.de"},{"github":"mohe2015","email":"Moritz.Hedtke@t-online.de"},{"github":"stevenroose","email":"github@stevenroose.org"}],"description":{"CVE-2022-0133":"peertube is vulnerable to Improper Access Control","CVE-2022-0508":"Server-Side Request Forgery (SSRF) in GitHub repository chocobozzz/peertube prior to f33e515991a32885622b217bf2ed1d1b0d9d6832"}},{"name":"pjsip-2.12","pname":"pjsip","version":"2.12","affected_by":["CVE-2022-24754","CVE-2022-24764"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-24754":9.8,"CVE-2022-24764":7.5},"maintainers":[{"github":"olynch","email":"owen@olynch.me"}],"description":{"CVE-2022-24754":"PJSIP is a free and open source multimedia communication library written in C language. In versions prior to and including 2.12 PJSIP there is a stack-buffer overflow vulnerability which only impacts PJSIP users who accept hashed digest credentials (credentials with data_type `PJSIP_CRED_DATA_DIGEST`). This issue has been patched in the master branch of the PJSIP repository and will be included with the next release. Users unable to upgrade need to check that the hashed digest data length must be equal to `PJSIP_MD5STRLEN` before passing to PJSIP.","CVE-2022-24764":"PJSIP is a free and open source multimedia communication library written in C. Versions 2.12 and prior contain a stack buffer overflow vulnerability that affects PJSUA2 users or users that call the API `pjmedia_sdp_print(), pjmedia_sdp_media_print()`. Applications that do not use PJSUA2 and do not directly call `pjmedia_sdp_print()` or `pjmedia_sdp_media_print()` should not be affected. A patch is available on the `master` branch of the `pjsip/pjproject` GitHub repository. There are currently no known workarounds."}},{"name":"qemu-6.1.1","pname":"qemu","version":"6.1.1","affected_by":["CVE-2021-20257","CVE-2021-3748","CVE-2021-3930","CVE-2022-26354"],"whitelisted":[],"cvssv3_basescore":{"CVE-2021-3748":8.8,"CVE-2021-3930":6.5,"CVE-2021-20257":6.5,"CVE-2022-26354":3.2},"maintainers":[{"github":"edolstra","email":"edolstra+nixpkgs@gmail.com"},{"github":"alyssais","email":"hi@alyssa.is"},{"github":"edolstra","email":"edolstra+nixpkgs@gmail.com"},{"github":"alyssais","email":"hi@alyssa.is"}],"description":{"CVE-2021-3748":"A use-after-free vulnerability was found in the virtio-net device of QEMU. It could occur when the descriptor's address belongs to the non direct access region, due to num_buffers being set after the virtqueue elem has been unmapped. A malicious guest could use this flaw to crash QEMU, resulting in a denial of service condition, or potentially execute code on the host with the privileges of the QEMU process.","CVE-2021-3930":"An off-by-one error was found in the SCSI device emulation in QEMU. It could occur while processing MODE SELECT commands in mode_sense_page() if the 'page' argument was set to MODE_PAGE_ALLS (0x3f). A malicious guest could use this flaw to potentially crash QEMU, resulting in a denial of service condition.","CVE-2021-20257":"An infinite loop flaw was found in the e1000 NIC emulator of the QEMU. This issue occurs while processing transmits (tx) descriptors in process_tx_desc if various descriptor fields are initialized with invalid values. This flaw allows a guest to consume CPU cycles on the host, resulting in a denial of service. The highest threat from this vulnerability is to system availability.","CVE-2022-26354":"A flaw was found in the vhost-vsock device of QEMU. In case of error, an invalid element was not detached from the virtqueue before freeing its memory, leading to memory leakage and other unexpected results. Affected QEMU versions <= 6.2.0."}},{"name":"qt-4.8.7","pname":"qt","version":"4.8.7","affected_by":["CVE-2022-25634"],"whitelisted":["CVE-2017-10904","CVE-2017-10905","CVE-2018-19869","CVE-2018-19870","CVE-2018-19871","CVE-2018-19873","CVE-2018-21035","CVE-2020-0570","CVE-2020-17507"],"cvssv3_basescore":{"CVE-2017-10904":9.8,"CVE-2017-10905":5.3,"CVE-2018-19869":6.5,"CVE-2018-19870":8.8,"CVE-2018-19871":6.5,"CVE-2018-19873":9.8,"CVE-2018-21035":7.5,"CVE-2020-0570":7.3,"CVE-2020-17507":5.3,"CVE-2022-25634":7.5},"maintainers":[{"github":"orivej","email":"orivej@gmx.fr"},{"github":"lovek323","email":"jason@oconal.id.au"},{"github":"phreedom","email":"phreedom@yandex.ru"},{"github":"svanderburg","email":"s.vanderburg@tudelft.nl"}],"description":{"CVE-2017-10904":"Qt for Android prior to 5.9.0 allows remote attackers to execute arbitrary OS commands via unspecified vectors.","CVE-2017-10905":"A vulnerability in applications created using Qt for Android prior to 5.9.3 allows attackers to alter environment variables via unspecified vectors.","CVE-2018-19869":"An issue was discovered in Qt before 5.11.3. A malformed SVG image causes a segmentation fault in qsvghandler.cpp.","CVE-2018-19870":"An issue was discovered in Qt before 5.11.3. A malformed GIF image causes a NULL pointer dereference in QGifHandler resulting in a segmentation fault.","CVE-2018-19871":"An issue was discovered in Qt before 5.11.3. There is QTgaFile Uncontrolled Resource Consumption.","CVE-2018-19873":"An issue was discovered in Qt before 5.11.3. QBmpHandler has a buffer overflow via BMP data.","CVE-2018-21035":"In Qt through 5.14.1, the WebSocket implementation accepts up to 2GB for frames and 2GB for messages. Smaller limits cannot be configured. This makes it easier for attackers to cause a denial of service (memory consumption).","CVE-2020-0570":"Uncontrolled search path in the QT Library before 5.14.0, 5.12.7 and 5.9.10 may allow an authenticated user to potentially enable elevation of privilege via local access.","CVE-2020-17507":"An issue was discovered in Qt through 5.12.9, and 5.13.x through 5.15.x before 5.15.1. read_xbm_body in gui/image/qxbmhandler.cpp has a buffer over-read.","CVE-2022-25634":"Qt through 5.15.8 and 6.x through 6.2.3 can load system library files from an unintended working directory."}},{"name":"radare2-5.6.2","pname":"radare2","version":"5.6.2","affected_by":["CVE-2022-0476","CVE-2022-0676","CVE-2022-0695","CVE-2022-0712","CVE-2022-0713","CVE-2022-0849","CVE-2022-1031"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-0476":5.5,"CVE-2022-0676":7.8,"CVE-2022-0695":5.5,"CVE-2022-0712":5.5,"CVE-2022-0713":7.1,"CVE-2022-0849":5.5,"CVE-2022-1031":7.8},"maintainers":[{"github":"7c6f434c","email":"7c6f434c@mail.ru"},{"github":"makefu","email":"makefu@syntax-fehler.de"},{"github":"mic92","email":"joerg@thalheim.io"},{"github":"arkivm","email":"vikram186@gmail.com"}],"description":{"CVE-2022-0476":"Denial of Service in GitHub repository radareorg/radare2 prior to 5.6.4.","CVE-2022-0676":"Heap-based Buffer Overflow in GitHub repository radareorg/radare2 prior to 5.6.4.","CVE-2022-0695":"Denial of Service in GitHub repository radareorg/radare2 prior to 5.6.4.","CVE-2022-0712":"NULL Pointer Dereference in GitHub repository radareorg/radare2 prior to 5.6.4.","CVE-2022-0713":"Heap-based Buffer Overflow in GitHub repository radareorg/radare2 prior to 5.6.4.","CVE-2022-0849":"Use After Free in r_reg_get_name_idx in GitHub repository radareorg/radare2 prior to 5.6.6.","CVE-2022-1031":"Use After Free in op_is_set_bp in GitHub repository radareorg/radare2 prior to 5.6.6."}},{"name":"spark-2.4.8","pname":"spark","version":"2.4.8","affected_by":["CVE-2021-38296"],"whitelisted":["CVE-2016-9177","CVE-2018-11770","CVE-2018-11804","CVE-2018-9159","CVE-2019-20445","CVE-2020-27218"],"cvssv3_basescore":{"CVE-2016-9177":7.5,"CVE-2018-9159":5.3,"CVE-2018-11770":4.2,"CVE-2018-11804":7.5,"CVE-2019-20445":9.1,"CVE-2020-27218":4.8,"CVE-2021-38296":7.5},"maintainers":[{"github":"thoughtpolice","email":"aseipp@pobox.com"},{"github":"offlinehacker","email":"jaka@x-truder.net"},{"github":"kamilchm","email":"kamil.chm@gmail.com"},{"github":"illustris","email":"me@illustris.tech"}],"description":{"CVE-2016-9177":"Directory traversal vulnerability in Spark 2.5 allows remote attackers to read arbitrary files via a .. (dot dot) in the URI.","CVE-2018-9159":"In Spark before 2.7.2, a remote attacker can read unintended static files via various representations of absolute or relative pathnames, as demonstrated by file: URLs and directory traversal sequences. NOTE: this product is unrelated to Ignite Realtime Spark.","CVE-2018-11770":"From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'.","CVE-2018-11804":"Spark's Apache Maven-based build includes a convenience script, 'build/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code.","CVE-2019-20445":"HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header.","CVE-2020-27218":"In Eclipse Jetty version 9.4.0.RC0 to 9.4.34.v20201102, 10.0.0.alpha0 to 10.0.0.beta2, and 11.0.0.alpha0 to 11.0.0.beta2, if GZIP request body inflation is enabled and requests from different clients are multiplexed onto a single connection, and if an attacker can send a request with a body that is received entirely but not consumed by the application, then a subsequent request on the same connection will see that body prepended to its body. The attacker will not see any data but may inject data into the body of the subsequent request.","CVE-2021-38296":"Apache Spark supports end-to-end encryption of RPC connections via \"spark.authenticate\" and \"spark.network.crypto.enabled\". In versions 3.1.2 and earlier, it uses a bespoke mutual authentication protocol that allows for full encryption key recovery. After an initial interactive attack, this would allow someone to decrypt plaintext traffic offline. Note that this does not affect security mechanisms controlled by \"spark.authenticate.enableSaslEncryption\", \"spark.io.encryption.enabled\", \"spark.ssl\", \"spark.ui.strictTransportSecurity\". Update to Apache Spark 3.1.3 or later"}},{"name":"spark-3.1.2","pname":"spark","version":"3.1.2","affected_by":["CVE-2021-38296"],"whitelisted":["CVE-2018-11770","CVE-2018-11804"],"cvssv3_basescore":{"CVE-2018-11770":4.2,"CVE-2018-11804":7.5,"CVE-2021-38296":7.5},"maintainers":[{"github":"thoughtpolice","email":"aseipp@pobox.com"},{"github":"offlinehacker","email":"jaka@x-truder.net"},{"github":"kamilchm","email":"kamil.chm@gmail.com"},{"github":"illustris","email":"me@illustris.tech"}],"description":{"CVE-2018-11770":"From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'.","CVE-2018-11804":"Spark's Apache Maven-based build includes a convenience script, 'build/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code.","CVE-2021-38296":"Apache Spark supports end-to-end encryption of RPC connections via \"spark.authenticate\" and \"spark.network.crypto.enabled\". In versions 3.1.2 and earlier, it uses a bespoke mutual authentication protocol that allows for full encryption key recovery. After an initial interactive attack, this would allow someone to decrypt plaintext traffic offline. Note that this does not affect security mechanisms controlled by \"spark.authenticate.enableSaslEncryption\", \"spark.io.encryption.enabled\", \"spark.ssl\", \"spark.ui.strictTransportSecurity\". Update to Apache Spark 3.1.3 or later"}},{"name":"stripe-cli-1.7.4","pname":"stripe-cli","version":"1.7.4","affected_by":["CVE-2022-24753"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-24753":7},"maintainers":[{"github":"RaghavSood","email":"r@raghavsood.com"},{"github":"kalbasit","email":"wael.nasreddine@gmail.com"}],"description":{"CVE-2022-24753":"Stripe CLI is a command-line tool for the Stripe eCommerce platform. A vulnerability in Stripe CLI exists on Windows when certain commands are run in a directory where an attacker has planted files. The commands are `stripe login`, `stripe config -e`, `stripe community`, and `stripe open`. MacOS and Linux are unaffected. An attacker who successfully exploits the vulnerability can run arbitrary code in the context of the current user. The update addresses the vulnerability by throwing an error in these situations before the code can run.Users are advised to upgrade to version 1.7.13. There are no known workarounds for this issue."}},{"name":"traefik-2.5.3","pname":"traefik","version":"2.5.3","affected_by":["CVE-2022-23632"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-23632":9.8},"maintainers":[{"github":"vdemeester","email":"vincent@sbr.pm"},{"github":"kalbasit","email":"wael.nasreddine@gmail.com"}],"description":{"CVE-2022-23632":"Traefik is an HTTP reverse proxy and load balancer. Prior to version 2.6.1, Traefik skips the router transport layer security (TLS) configuration when the host header is a fully qualified domain name (FQDN). For a request, the TLS configuration choice can be different than the router choice, which implies the use of a wrong TLS configuration. When sending a request using FQDN handled by a router configured with a dedicated TLS configuration, the TLS configuration falls back to the default configuration that might not correspond to the configured one. If the CNAME flattening is enabled, the selected TLS configuration is the SNI one and the routing uses the CNAME value, so this can skip the expected TLS configuration. Version 2.6.1 contains a patch for this issue. As a workaround, one may add the FDQN to the host rule. However, there is no workaround if the CNAME flattening is enabled."}},{"name":"trytond-6.2.0","pname":"trytond","version":"6.2.0","affected_by":["CVE-2022-26661","CVE-2022-26662"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-26661":6.5,"CVE-2022-26662":7.5},"maintainers":[{"github":"udono","email":"udono@virtual-things.biz"},{"github":"johbo","email":"johannes@bornhold.name"},{"github":"udono","email":"udono@virtual-things.biz"},{"github":"johbo","email":"johannes@bornhold.name"},{"github":"udono","email":"udono@virtual-things.biz"},{"github":"johbo","email":"johannes@bornhold.name"}],"description":{"CVE-2022-26661":"An XXE issue was discovered in Tryton Application Platform (Server) 5.x through 5.0.45, 6.x through 6.0.15, and 6.1.x and 6.2.x through 6.2.5, and Tryton Application Platform (Command Line Client (proteus)) 5.x through 5.0.11, 6.x through 6.0.4, and 6.1.x and 6.2.x through 6.2.1. An authenticated user can make the server parse a crafted XML SEPA file to access arbitrary files on the system.","CVE-2022-26662":"An XML Entity Expansion (XEE) issue was discovered in Tryton Application Platform (Server) 5.x through 5.0.45, 6.x through 6.0.15, and 6.1.x and 6.2.x through 6.2.5, and Tryton Application Platform (Command Line Client (proteus)) 5.x through 5.0.11, 6.x through 6.0.4, and 6.1.x and 6.2.x through 6.2.1. An unauthenticated user can send a crafted XML-RPC message to consume all the resources of the server."}},{"name":"usbguard-1.0.0","pname":"usbguard","version":"1.0.0","affected_by":["CVE-2019-25058"],"whitelisted":[],"cvssv3_basescore":{"CVE-2019-25058":7.8},"maintainers":[{"github":"tnias","email":"phil@grmr.de"}],"description":{"CVE-2019-25058":"An issue was discovered in USBGuard before 1.1.0. On systems with the usbguard-dbus daemon running, an unprivileged user could make USBGuard allow all USB devices to be connected in the future."}},{"name":"vault-1.8.6","pname":"vault","version":"1.8.6","affected_by":["CVE-2022-25243","CVE-2022-25244"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-25243":6.5,"CVE-2022-25244":6.5},"maintainers":[{"github":"rushmorem","email":"rushmore@webenchanter.com"},{"github":"lnl7","email":"daiderd@gmail.com"},{"github":"offlinehacker","email":"jaka@x-truder.net"},{"github":"pradeepchhetri","email":"pradeep.chhetri89@gmail.com"},{"github":"Chili-Man","email":"dr.elhombrechile@gmail.com"},{"github":"kalbasit","email":"wael.nasreddine@gmail.com"}],"description":{"CVE-2022-25243":"\"Vault and Vault Enterprise 1.8.0 through 1.8.8, and 1.9.3 allowed the PKI secrets engine under certain configurations to issue wildcard certificates to authorized users for a specified domain, even if the PKI role policy attribute allow_subdomains is set to false. Fixed in Vault Enterprise 1.8.9 and 1.9.4.","CVE-2022-25244":"Vault Enterprise clusters using the tokenization transform feature can expose the tokenization key through the tokenization key configuration endpoint to authorized operators with `read` permissions on this endpoint. Fixed in Vault Enterprise 1.9.4, 1.8.9 and 1.7.10."}},{"name":"vim-8.2.4186","pname":"vim","version":"8.2.4186","affected_by":["CVE-2022-0554","CVE-2022-0572","CVE-2022-0629","CVE-2022-0685","CVE-2022-0696","CVE-2022-0714","CVE-2022-0729","CVE-2022-0943"],"whitelisted":["CVE-2022-0359","CVE-2022-0361","CVE-2022-0368","CVE-2022-0392","CVE-2022-0393","CVE-2022-0407","CVE-2022-0408","CVE-2022-0413","CVE-2022-0417","CVE-2022-0443"],"cvssv3_basescore":{"CVE-2022-0359":7.8,"CVE-2022-0361":7.8,"CVE-2022-0368":7.8,"CVE-2022-0392":7.8,"CVE-2022-0393":7.1,"CVE-2022-0407":7.8,"CVE-2022-0408":7.8,"CVE-2022-0413":7.8,"CVE-2022-0417":7.8,"CVE-2022-0443":7.8,"CVE-2022-0554":7.8,"CVE-2022-0572":7.8,"CVE-2022-0629":7.8,"CVE-2022-0685":7.8,"CVE-2022-0696":5.5,"CVE-2022-0714":5.5,"CVE-2022-0729":8.8,"CVE-2022-0943":7.8},"maintainers":[{"github":"lovek323","email":"jason@oconal.id.au"},{"github":"equirosa","email":"eduardo@eduardoquiros.com"}],"description":{"CVE-2022-0359":"Heap-based Buffer Overflow in GitHub repository vim/vim prior to 8.2.","CVE-2022-0361":"Heap-based Buffer Overflow in GitHub repository vim/vim prior to 8.2.","CVE-2022-0368":"Out-of-bounds Read in GitHub repository vim/vim prior to 8.2.","CVE-2022-0392":"Heap-based Buffer Overflow in GitHub repository vim prior to 8.2.","CVE-2022-0393":"Out-of-bounds Read in GitHub repository vim/vim prior to 8.2.","CVE-2022-0407":"Heap-based Buffer Overflow in GitHub repository vim/vim prior to 8.2.","CVE-2022-0408":"Stack-based Buffer Overflow in GitHub repository vim/vim prior to 8.2.","CVE-2022-0413":"Use After Free in GitHub repository vim/vim prior to 8.2.","CVE-2022-0417":"Heap-based Buffer Overflow GitHub repository vim/vim prior to 8.2.","CVE-2022-0443":"Use After Free in GitHub repository vim/vim prior to 8.2.","CVE-2022-0554":"Use of Out-of-range Pointer Offset in GitHub repository vim/vim prior to 8.2.","CVE-2022-0572":"Heap-based Buffer Overflow in GitHub repository vim/vim prior to 8.2.","CVE-2022-0629":"Stack-based Buffer Overflow in GitHub repository vim/vim prior to 8.2.","CVE-2022-0685":"Use of Out-of-range Pointer Offset in GitHub repository vim/vim prior to 8.2.4418.","CVE-2022-0696":"NULL Pointer Dereference in GitHub repository vim/vim prior to 8.2.4428.","CVE-2022-0714":"Heap-based Buffer Overflow in GitHub repository vim/vim prior to 8.2.4436.","CVE-2022-0729":"Use of Out-of-range Pointer Offset in GitHub repository vim/vim prior to 8.2.4440.","CVE-2022-0943":"Heap-based Buffer Overflow occurs in vim in GitHub repository vim/vim prior to 8.2.4563."}},{"name":"wasmtime-0.21.0","pname":"wasmtime","version":"0.21.0","affected_by":["CVE-2022-23636"],"whitelisted":["CVE-2021-39216","CVE-2021-39219"],"cvssv3_basescore":{"CVE-2021-39216":6.3,"CVE-2021-39219":6.3,"CVE-2022-23636":8.1},"maintainers":[{"github":"matthewbauer","email":"mjbauer95@gmail.com"}],"description":{"CVE-2021-39216":"Wasmtime is an open source runtime for WebAssembly & WASI. In Wasmtime from version 0.19.0 and before version 0.30.0 there was a use-after-free bug when passing `externref`s from the host to guest Wasm content. To trigger the bug, you have to explicitly pass multiple `externref`s from the host to a Wasm instance at the same time, either by passing multiple `externref`s as arguments from host code to a Wasm function, or returning multiple `externref`s to Wasm from a multi-value return function defined in the host. If you do not have host code that matches one of these shapes, then you are not impacted. If Wasmtime's `VMExternRefActivationsTable` became filled to capacity after passing the first `externref` in, then passing in the second `externref` could trigger a garbage collection. However the first `externref` is not rooted until we pass control to Wasm, and therefore could be reclaimed by the collector if nothing else was holding a reference to it or otherwise keeping it alive. Then, when control was passed to Wasm after the garbage collection, Wasm could use the first `externref`, which at this point has already been freed. We have reason to believe that the effective impact of this bug is relatively small because usage of `externref` is currently quite rare. The bug has been fixed, and users should upgrade to Wasmtime 0.30.0. If you cannot upgrade Wasmtime yet, you can avoid the bug by disabling reference types support in Wasmtime by passing `false` to `wasmtime::Config::wasm_reference_types`.","CVE-2021-39219":"Wasmtime is an open source runtime for WebAssembly & WASI. Wasmtime before version 0.30.0 is affected by a type confusion vulnerability. As a Rust library the `wasmtime` crate clearly marks which functions are safe and which are `unsafe`, guaranteeing that if consumers never use `unsafe` then it should not be possible to have memory unsafety issues in their embeddings of Wasmtime. An issue was discovered in the safe API of `Linker::func_*` APIs. These APIs were previously not sound when one `Engine` was used to create the `Linker` and then a different `Engine` was used to create a `Store` and then the `Linker` was used to instantiate a module into that `Store`. Cross-`Engine` usage of functions is not supported in Wasmtime and this can result in type confusion of function pointers, resulting in being able to safely call a function with the wrong type. Triggering this bug requires using at least two `Engine` values in an embedding and then additionally using two different values with a `Linker` (one at the creation time of the `Linker` and another when instantiating a module with the `Linker`). It's expected that usage of more-than-one `Engine` in an embedding is relatively rare since an `Engine` is intended to be a globally shared resource, so the expectation is that the impact of this issue is relatively small. The fix implemented is to change this behavior to `panic!()` in Rust instead of silently allowing it. Using different `Engine` instances with a `Linker` is a programmer bug that `wasmtime` catches at runtime. This bug has been patched and users should upgrade to Wasmtime version 0.30.0. If you cannot upgrade Wasmtime and are using more than one `Engine` in your embedding it's recommended to instead use only one `Engine` for the entire program if possible. An `Engine` is designed to be a globally shared resource that is suitable to have only one for the lifetime of an entire process. If using multiple `Engine`s is required then code should be audited to ensure that `Linker` is only used with one `Engine`.","CVE-2022-23636":"Wasmtime is an open source runtime for WebAssembly & WASI. Prior to versions 0.34.1 and 0.33.1, there exists a bug in the pooling instance allocator in Wasmtime's runtime where a failure to instantiate an instance for a module that defines an `externref` global will result in an invalid drop of a `VMExternRef` via an uninitialized pointer. A number of conditions listed in the GitHub Security Advisory must be true in order for an instance to be vulnerable to this issue. Maintainers believe that the effective impact of this bug is relatively small because the usage of `externref` is still uncommon and without a resource limiter configured on the `Store`, which is not the default configuration, it is only possible to trigger the bug from an error returned by `mprotect` or `VirtualAlloc`. Note that on Linux with the `uffd` feature enabled, it is only possible to trigger the bug from a resource limiter as the call to `mprotect` is skipped. The bug has been fixed in 0.34.1 and 0.33.1 and users are encouraged to upgrade as soon as possible. If it is not possible to upgrade to version 0.34.1 or 0.33.1 of the `wasmtime` crate, it is recommend that support for the reference types proposal be disabled by passing `false` to `Config::wasm_reference_types`. Doing so will prevent modules that use `externref` from being loaded entirely."}},{"name":"wavpack-5.4.0","pname":"wavpack","version":"5.4.0","affected_by":["CVE-2021-44269"],"whitelisted":[],"cvssv3_basescore":{"CVE-2021-44269":5.5},"maintainers":[{"github":"codyopel","email":"codyopel@gmail.com"}],"description":{"CVE-2021-44269":"An out of bounds read was found in Wavpack 5.4.0 in processing *.WAV files. This issue triggered in function WavpackPackSamples of file src/pack_utils.c, tainted variable cnt is too large, that makes pointer sptr read beyond heap bound."}},{"name":"wolfssl-5.0.0","pname":"wolfssl","version":"5.0.0","affected_by":["CVE-2022-25638","CVE-2022-25640"],"whitelisted":["CVE-2022-23408"],"cvssv3_basescore":{"CVE-2022-23408":9.1,"CVE-2022-25638":6.5,"CVE-2022-25640":7.5},"maintainers":[{"github":"fabaff","email":"mail@fabian-affolter.ch"}],"description":{"CVE-2022-23408":"wolfSSL 5.x before 5.1.1 uses non-random IV values in certain situations. This affects connections (without AEAD) using AES-CBC or DES3 with TLS 1.1 or 1.2 or DTLS 1.1 or 1.2. This occurs because of misplaced memory initialization in BuildMessage in internal.c.","CVE-2022-25638":"In wolfSSL before 5.2.0, certificate validation may be bypassed during attempted authentication by a TLS 1.3 client to a TLS 1.3 server. This occurs when the sig_algo field differs between the certificate_verify message and the certificate message.","CVE-2022-25640":"In wolfSSL before 5.2.0, a TLS 1.3 server cannot properly enforce a requirement for mutual authentication. A client can simply omit the certificate_verify message from the handshake, and never present a certificate."}},{"name":"zlib-1.2.11","pname":"zlib","version":"1.2.11","affected_by":["CVE-2018-25032"],"whitelisted":[],"cvssv3_basescore":{"CVE-2018-25032":7.5},"maintainers":[{"github":"qknight","email":"js@lastlog.de"}],"description":{"CVE-2018-25032":"zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches."}},{"name":"zsh-5.8","pname":"zsh","version":"5.8","affected_by":["CVE-2021-45444"],"whitelisted":[],"cvssv3_basescore":{"CVE-2021-45444":7.8},"maintainers":[{"github":"pSub","email":"mail@pascal-wittmann.de"}],"description":{"CVE-2021-45444":"In zsh before 5.8.1, an attacker can achieve code execution if they control a command output inside the prompt, as demonstrated by a %F argument. This occurs because of recursive PROMPT_SUBST expansion."}}]