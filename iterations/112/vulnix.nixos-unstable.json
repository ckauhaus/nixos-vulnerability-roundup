[{"name":"archisteamfarm-5.2.2.4","pname":"archisteamfarm","version":"5.2.2.4","affected_by":["CVE-2022-23627"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-23627":6.8},"maintainers":[{"github":"SuperSandro2000","email":"sandro.jaeckel@gmail.com"},{"github":"legendofmiracles","email":"legendofmiracles@protonmail.com"}],"description":{"CVE-2022-23627":"ArchiSteamFarm (ASF) is a C# application with primary purpose of idling Steam cards from multiple accounts simultaneously. Due to a bug in ASF code, introduced in version V5.2.2.2, the program didn't adequately verify effective access of the user sending proxy (i.e. `[Bots]`) commands. In particular, a proxy-like command sent to bot `A` targeting bot `B` has incorrectly verified user's access against bot `A` - instead of bot `B`, to which the command was originally designated. This in result allowed access to resources beyond those configured, being a security threat affecting confidentiality of other bot instances. A successful attack exploiting this bug requires a significant access granted explicitly by original owner of the ASF process prior to that, as attacker has to control at least a single bot in the process to make use of this inadequate access verification loophole. The issue is patched in ASF V5.2.2.5, V5.2.3.2 and future versions. Users are advised to update as soon as possible."}},{"name":"bento4-1.6.0-639","pname":"bento4","version":"1.6.0-639","affected_by":["CVE-2022-27607"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-27607":8.1},"maintainers":[{"github":"makefu","email":"makefu@syntax-fehler.de"}],"description":{"CVE-2022-27607":"Bento4 1.6.0-639 has a heap-based buffer over-read in the AP4_HvccAtom class, a different issue than CVE-2018-14531."}},{"name":"calibre-web-0.6.16","pname":"calibre-web","version":"0.6.16","affected_by":["CVE-2022-0766","CVE-2022-0767"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-0766":9.8,"CVE-2022-0767":9.9},"maintainers":[{"github":"pborzenkov","email":"pavel@borzenkov.net"}],"description":{"CVE-2022-0766":"Server-Side Request Forgery (SSRF) in GitHub repository janeczku/calibre-web prior to 0.6.17.","CVE-2022-0767":"Server-Side Request Forgery (SSRF) in GitHub repository janeczku/calibre-web prior to 0.6.17."}},{"name":"cyrus-sasl-2.1.27","pname":"cyrus-sasl","version":"2.1.27","affected_by":["CVE-2022-24407"],"whitelisted":["CVE-2019-19906","CVE-2020-8032"],"cvssv3_basescore":{"CVE-2019-19906":7.5,"CVE-2020-8032":7,"CVE-2022-24407":8.8},"maintainers":[],"description":{"CVE-2019-19906":"cyrus-sasl (aka Cyrus SASL) 2.1.27 has an out-of-bounds write leading to unauthenticated remote denial-of-service in OpenLDAP via a malformed LDAP packet. The OpenLDAP crash is ultimately caused by an off-by-one error in _sasl_add_string in common.c in cyrus-sasl.","CVE-2020-8032":"A Insecure Temporary File vulnerability in the packaging of cyrus-sasl of openSUSE Factory allows local attackers to escalate to root. This issue affects: openSUSE Factory cyrus-sasl version 2.1.27-4.2 and prior versions.","CVE-2022-24407":"In Cyrus SASL 2.1.17 through 2.1.27 before 2.1.28, plugins/sql.c does not escape the password for a SQL INSERT or UPDATE statement."}},{"name":"discourse-2.9.0.beta1","pname":"discourse","version":"2.9.0.beta1","affected_by":["CVE-2021-41082"],"whitelisted":[],"cvssv3_basescore":{"CVE-2021-41082":7.5},"maintainers":[{"github":"talyz","email":"kim.lindberger@gmail.com"},{"github":"talyz","email":"kim.lindberger@gmail.com"}],"description":{"CVE-2021-41082":"Discourse is a platform for community discussion. In affected versions any private message that includes a group had its title and participating user exposed to users that do not have access to the private messages. However, access control for the private messages was not compromised as users were not able to view the posts in the leaked private message despite seeing it in their inbox. The problematic commit was reverted around 32 minutes after it was made. Users are encouraged to upgrade to the latest commit if they are running Discourse against the `tests-passed` branch."}},{"name":"drill-0.7.2","pname":"drill","version":"0.7.2","affected_by":["CVE-2017-12630"],"whitelisted":[],"cvssv3_basescore":{"CVE-2017-12630":5.4},"maintainers":[{"github":"Br1ght0ne","email":"brightone@protonmail.com"}],"description":{"CVE-2017-12630":"In Apache Drill 1.11.0 and earlier when submitting form from Query page users are able to pass arbitrary script or HTML which will take effect on Profile page afterwards. Example: after submitting special script that returns cookie information from Query page, malicious user may obtain this information from Profile page afterwards."}},{"name":"edk2-202202","pname":"edk2","version":"202202","affected_by":["CVE-2021-38578"],"whitelisted":[],"cvssv3_basescore":{"CVE-2021-38578":9.8},"maintainers":[],"description":{"CVE-2021-38578":"Existing CommBuffer checks in SmmEntryPoint will not catch underflow when computing BufferSize."}},{"name":"git-2.35.1","pname":"git","version":"2.35.1","affected_by":["CVE-2018-1000110","CVE-2018-1000182","CVE-2019-1003010","CVE-2020-2136","CVE-2021-21684","CVE-2022-24975"],"whitelisted":[],"cvssv3_basescore":{"CVE-2018-1000110":5.3,"CVE-2018-1000182":6.4,"CVE-2019-1003010":4.3,"CVE-2020-2136":5.4,"CVE-2021-21684":6.1,"CVE-2022-24975":7.5},"maintainers":[{"github":"primeos","email":"dev.primeos@gmail.com"},{"github":"wmertens","email":"Wout.Mertens@gmail.com"},{"github":"globin","email":"mail@glob.in"},{"github":"primeos","email":"dev.primeos@gmail.com"},{"github":"wmertens","email":"Wout.Mertens@gmail.com"},{"github":"globin","email":"mail@glob.in"},{"github":"primeos","email":"dev.primeos@gmail.com"},{"github":"wmertens","email":"Wout.Mertens@gmail.com"},{"github":"globin","email":"mail@glob.in"}],"description":{"CVE-2018-1000110":"An improper authorization vulnerability exists in Jenkins Git Plugin version 3.7.0 and earlier in GitStatus.java that allows an attacker with network access to obtain a list of nodes and users.","CVE-2018-1000182":"A server-side request forgery vulnerability exists in Jenkins Git Plugin 3.9.0 and older in AssemblaWeb.java, GitBlitRepositoryBrowser.java, Gitiles.java, TFS2013GitRepositoryBrowser.java, ViewGitWeb.java that allows attackers with Overall/Read access to cause Jenkins to send a GET request to a specified URL.","CVE-2019-1003010":"A cross-site request forgery vulnerability exists in Jenkins Git Plugin 3.9.1 and earlier in src/main/java/hudson/plugins/git/GitTagAction.java that allows attackers to create a Git tag in a workspace and attach corresponding metadata to a build record.","CVE-2020-2136":"Jenkins Git Plugin 4.2.0 and earlier does not escape the error message for the repository URL for Microsoft TFS field form validation, resulting in a stored cross-site scripting vulnerability.","CVE-2021-21684":"Jenkins Git Plugin 4.8.2 and earlier does not escape the Git SHA-1 checksum parameters provided to commit notifications when displaying them in a build cause, resulting in a stored cross-site scripting (XSS) vulnerability.","CVE-2022-24975":"The --mirror documentation for Git through 2.35.1 does not mention the availability of deleted content, aka the \"GitBleed\" issue. This could present a security risk if information-disclosure auditing processes rely on a clone operation without the --mirror option."}},{"name":"glibc-2.33-117","pname":"glibc","version":"2.33-117","affected_by":["CVE-2021-38604","CVE-2022-23218","CVE-2022-23219"],"whitelisted":[],"cvssv3_basescore":{"CVE-2021-38604":7.5,"CVE-2022-23218":9.8,"CVE-2022-23219":9.8},"maintainers":[{"github":"edolstra","email":"edolstra+nixpkgs@gmail.com"},{"github":"ma27","email":"maximilian@mbosch.me"},{"github":"edolstra","email":"edolstra+nixpkgs@gmail.com"},{"github":"ma27","email":"maximilian@mbosch.me"}],"description":{"CVE-2021-38604":"In librt in the GNU C Library (aka glibc) through 2.34, sysdeps/unix/sysv/linux/mq_notify.c mishandles certain NOTIFY_REMOVED data, leading to a NULL pointer dereference. NOTE: this vulnerability was introduced as a side effect of the CVE-2021-33574 fix.","CVE-2022-23218":"The deprecated compatibility function svcunix_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its path argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution.","CVE-2022-23219":"The deprecated compatibility function clnt_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its hostname argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution."}},{"name":"go-1.17.7","pname":"go","version":"1.17.7","affected_by":["CVE-2022-24921","CVE-2022-27191"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-24921":7.5,"CVE-2022-27191":7.5},"maintainers":[{"github":"c00w","email":"nix@daedrum.net"},{"github":"cstrahan","email":"charles@cstrahan.com"},{"github":"Frostman","email":"me@slukjanov.name"},{"github":"kalbasit","email":"wael.nasreddine@gmail.com"},{"github":"mic92","email":"joerg@thalheim.io"},{"github":"orivej","email":"orivej@gmx.fr"},{"github":"rvolosatovs","email":"rvolosatovs@riseup.net"},{"github":"zowoq","email":"59103226+zowoq@users.noreply.github.com"}],"description":{"CVE-2022-24921":"regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.","CVE-2022-27191":"golang.org/x/crypto/ssh before 0.0.0-20220314234659-1baeb1ce4c0b in Go through 1.16.15 and 1.17.x through 1.17.8 allows an attacker to crash a server in certain circumstances involving AddHostKey."}},{"name":"gogs-0.12.5","pname":"gogs","version":"0.12.5","affected_by":["CVE-2019-10348","CVE-2022-0415"],"whitelisted":[],"cvssv3_basescore":{"CVE-2019-10348":8.8,"CVE-2022-0415":8.8},"maintainers":[{"github":"schneefux","email":"schneefux+nixos_pkg@schneefux.xyz"},{"github":"kalbasit","email":"wael.nasreddine@gmail.com"}],"description":{"CVE-2019-10348":"Jenkins Gogs Plugin stored credentials unencrypted in job config.xml files on the Jenkins master where they can be viewed by users with Extended Read permission, or access to the master file system.","CVE-2022-0415":"Remote Command Execution in uploading repository file in GitHub repository gogs/gogs prior to 0.12.6."}},{"name":"gradle-5.6.4","pname":"gradle","version":"5.6.4","affected_by":["CVE-2022-25364"],"whitelisted":["CVE-2019-16370","CVE-2020-11979","CVE-2021-29427","CVE-2021-29428","CVE-2021-29429","CVE-2021-32751"],"cvssv3_basescore":{"CVE-2019-16370":5.9,"CVE-2020-11979":7.5,"CVE-2021-29427":7.2,"CVE-2021-29428":7.8,"CVE-2021-29429":5.5,"CVE-2021-32751":7.5,"CVE-2022-25364":8.1},"maintainers":[{"github":"lorenzleutgeb","email":"lorenz@leutgeb.xyz"},{"github":"liff","email":"liff@iki.fi"}],"description":{"CVE-2019-16370":"The PGP signing plugin in Gradle before 6.0 relies on the SHA-1 algorithm, which might allow an attacker to replace an artifact with a different one that has the same SHA-1 message digest, a related issue to CVE-2005-4900.","CVE-2020-11979":"As mitigation for CVE-2020-1945 Apache Ant 1.10.8 changed the permissions of temporary files it created so that only the current user was allowed to access them. Unfortunately the fixcrlf task deleted the temporary file and created a new one without said protection, effectively nullifying the effort. This would still allow an attacker to inject modified source files into the build process.","CVE-2021-29427":"In Gradle from version 5.1 and before version 7.0 there is a vulnerability which can lead to information disclosure and/or dependency poisoning. Repository content filtering is a security control Gradle introduced to help users specify what repositories are used to resolve specific dependencies. This feature was introduced in the wake of the \"A Confusing Dependency\" blog post. In some cases, Gradle may ignore content filters and search all repositories for dependencies. This only occurs when repository content filtering is used from within a `pluginManagement` block in a settings file. This may change how dependencies are resolved for Gradle plugins and build scripts. For builds that are vulnerable, there are two risks: 1) Information disclosure: Gradle could make dependency requests to repositories outside your organization and leak internal package identifiers. 2) Dependency poisoning/Dependency confusion: Gradle could download a malicious binary from a repository outside your organization due to name squatting. For a full example and more details refer to the referenced GitHub Security Advisory. The problem has been patched and released with Gradle 7.0. Users relying on this feature should upgrade their build as soon as possible. As a workaround, users may use a company repository which has the right rules for fetching packages from public repositories, or use project level repository content filtering, inside `buildscript.repositories`. This option is available since Gradle 5.1 when the feature was introduced.","CVE-2021-29428":"In Gradle before version 7.0, on Unix-like systems, the system temporary directory can be created with open permissions that allow multiple users to create and delete files within it. Gradle builds could be vulnerable to a local privilege escalation from an attacker quickly deleting and recreating files in the system temporary directory. This vulnerability impacted builds using precompiled script plugins written in Kotlin DSL and tests for Gradle plugins written using ProjectBuilder or TestKit. If you are on Windows or modern versions of macOS, you are not vulnerable. If you are on a Unix-like operating system with the \"sticky\" bit set on your system temporary directory, you are not vulnerable. The problem has been patched and released with Gradle 7.0. As a workaround, on Unix-like operating systems, ensure that the \"sticky\" bit is set. This only allows the original user (or root) to delete a file. If you are unable to change the permissions of the system temporary directory, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only. For additional details refer to the referenced GitHub Security Advisory.","CVE-2021-29429":"In Gradle before version 7.0, files created with open permissions in the system temporary directory can allow an attacker to access information downloaded by Gradle. Some builds could be vulnerable to a local information disclosure. Remote files accessed through TextResourceFactory are downloaded into the system temporary directory first. Sensitive information contained in these files can be exposed to other local users on the same system. If you do not use the `TextResourceFactory` API, you are not vulnerable. As of Gradle 7.0, uses of the system temporary directory have been moved to the Gradle User Home directory. By default, this directory is restricted to the user running the build. As a workaround, set a more restrictive umask that removes read access to other users. When files are created in the system temporary directory, they will not be accessible to other users. If you are unable to change your system's umask, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only.","CVE-2021-32751":"Gradle is a build tool with a focus on build automation. In versions prior to 7.2, start scripts generated by the `application` plugin and the `gradlew` script are both vulnerable to arbitrary code execution when an attacker is able to change environment variables for the user running the script. This may impact those who use `gradlew` on Unix-like systems or use the scripts generated by Gradle in thieir application on Unix-like systems. For this vulnerability to be exploitable, an attacker needs to be able to set the value of particular environment variables and have those environment variables be seen by the vulnerable scripts. This issue has been patched in Gradle 7.2 by removing the use of `eval` and requiring the use of the `bash` shell. There are a few workarounds available. For CI/CD systems using the Gradle build tool, one may ensure that untrusted users are unable to change environment variables for the user that executes `gradlew`. If one is unable to upgrade to Gradle 7.2, one may generate a new `gradlew` script with Gradle 7.2 and use it for older versions of Gradle. Fpplications using start scripts generated by Gradle, one may ensure that untrusted users are unable to change environment variables for the user that executes the start script. A vulnerable start script could be manually patched to remove the use of `eval` or the use of environment variables that affect the application's command-line. If the application is simple enough, one may be able to avoid the use of the start scripts by running the application directly with Java command.","CVE-2022-25364":"In Gradle Enterprise before 2021.4.2, the default built-in build cache configuration allowed anonymous write access. If this was not manually changed, a malicious actor with network access to the build cache could potentially populate it with manipulated entries that execute malicious code as part of a build. As of 2021.4.2, the built-in build cache is inaccessible-by-default, requiring explicit configuration of its access-control settings before it can be used. (Remote build cache nodes are unaffected as they are inaccessible-by-default.)"}},{"name":"guake-3.6.3","pname":"guake","version":"3.6.3","affected_by":["CVE-2021-23556"],"whitelisted":[],"cvssv3_basescore":{"CVE-2021-23556":8},"maintainers":[{"github":"msteen","email":"emailmatthijs@gmail.com"}],"description":{"CVE-2021-23556":"The package guake before 3.8.5 are vulnerable to Exposed Dangerous Method or Function due to the exposure of execute_command and execute_command_by_uuid methods via the d-bus interface, which makes it possible for a malicious user to run an arbitrary command via the d-bus method. **Note:** Exploitation requires the user to have installed another malicious program that will be able to send dbus signals or run terminal commands."}},{"name":"htmldoc-1.9.15","pname":"htmldoc","version":"1.9.15","affected_by":["CVE-2022-0534"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-0534":5.5},"maintainers":[{"github":"shanemikel","email":"shanepearlman@pm.me"}],"description":{"CVE-2022-0534":"A vulnerability was found in htmldoc version 1.9.15 where the stack out-of-bounds read takes place in gif_get_code() and occurs when opening a malicious GIF file, which can result in a crash (segmentation fault)."}},{"name":"imagemagick-6.9.12-26","pname":"imagemagick","version":"6.9.12-26","affected_by":["CVE-2021-3596","CVE-2021-3610"],"whitelisted":["CVE-2016-5841","CVE-2017-11447","CVE-2018-16328","CVE-2018-16329","CVE-2019-13136","CVE-2019-17547","CVE-2020-25663","CVE-2020-27768","CVE-2020-27769","CVE-2020-27829","CVE-2021-20243","CVE-2021-20244","CVE-2021-20310","CVE-2021-20311","CVE-2021-20312","CVE-2021-20313"],"cvssv3_basescore":{"CVE-2016-5841":9.8,"CVE-2017-11447":6.5,"CVE-2018-16328":9.8,"CVE-2018-16329":9.8,"CVE-2019-13136":7.8,"CVE-2019-17547":8.8,"CVE-2020-25663":5.5,"CVE-2020-27768":3.3,"CVE-2020-27769":3.3,"CVE-2020-27829":5.5,"CVE-2021-3596":6.5,"CVE-2021-3610":7.5,"CVE-2021-20243":5.5,"CVE-2021-20244":5.5,"CVE-2021-20310":7.5,"CVE-2021-20311":7.5,"CVE-2021-20312":7.5,"CVE-2021-20313":7.5},"maintainers":[{"github":"erictapen","email":"kerstin@erictapen.name"},{"github":"erictapen","email":"kerstin@erictapen.name"},{"github":"erictapen","email":"kerstin@erictapen.name"}],"description":{"CVE-2016-5841":"Integer overflow in MagickCore/profile.c in ImageMagick before 7.0.2-1 allows remote attackers to cause a denial of service (segmentation fault) or possibly execute arbitrary code via vectors involving the offset variable.","CVE-2017-11447":"The ReadSCREENSHOTImage function in coders/screenshot.c in ImageMagick before 7.0.6-1 has memory leaks, causing denial of service.","CVE-2018-16328":"In ImageMagick before 7.0.8-8, a NULL pointer dereference exists in the CheckEventLogging function in MagickCore/log.c.","CVE-2018-16329":"In ImageMagick before 7.0.8-8, a NULL pointer dereference exists in the GetMagickProperty function in MagickCore/property.c.","CVE-2019-13136":"ImageMagick before 7.0.8-50 has an integer overflow vulnerability in the function TIFFSeekCustomStream in coders/tiff.c.","CVE-2019-17547":"In ImageMagick before 7.0.8-62, TraceBezier in MagickCore/draw.c has a use-after-free.","CVE-2020-25663":"A call to ConformPixelInfo() in the SetImageAlphaChannel() routine of /MagickCore/channel.c caused a subsequent heap-use-after-free or heap-buffer-overflow READ when GetPixelRed() or GetPixelBlue() was called. This could occur if an attacker is able to submit a malicious image file to be processed by ImageMagick and could lead to denial of service. It likely would not lead to anything further because the memory is used as pixel data and not e.g. a function pointer. This flaw affects ImageMagick versions prior to 7.0.9-0.","CVE-2020-27768":"In ImageMagick, there is an outside the range of representable values of type 'unsigned int' at MagickCore/quantum-private.h. This flaw affects ImageMagick versions prior to 7.0.9-0.","CVE-2020-27769":"In ImageMagick versions before 7.0.9-0, there are outside the range of representable values of type 'float' at MagickCore/quantize.c.","CVE-2020-27829":"A heap based buffer overflow in coders/tiff.c may result in program crash and denial of service in ImageMagick before 7.0.10-45.","CVE-2021-3596":"A NULL pointer dereference flaw was found in ImageMagick in versions prior to 7.0.10-31 in ReadSVGImage() in coders/svg.c. This issue is due to not checking the return value from libxml2's xmlCreatePushParserCtxt() and uses the value directly, which leads to a crash and segmentation fault.","CVE-2021-3610":"A heap-based buffer overflow vulnerability was found in ImageMagick in versions prior to 7.0.11-14 in ReadTIFFImage() in coders/tiff.c. This issue is due to an incorrect setting of the pixel array size, which can lead to a crash and segmentation fault.","CVE-2021-20243":"A flaw was found in ImageMagick in MagickCore/resize.c. An attacker who submits a crafted file that is processed by ImageMagick could trigger undefined behavior in the form of math division by zero. The highest threat from this vulnerability is to system availability.","CVE-2021-20244":"A flaw was found in ImageMagick in MagickCore/visual-effects.c. An attacker who submits a crafted file that is processed by ImageMagick could trigger undefined behavior in the form of math division by zero. The highest threat from this vulnerability is to system availability.","CVE-2021-20310":"A flaw was found in ImageMagick in versions before 7.0.11, where a division by zero ConvertXYZToJzazbz() of MagickCore/colorspace.c may trigger undefined behavior via a crafted image file that is submitted by an attacker and processed by an application using ImageMagick. The highest threat from this vulnerability is to system availability.","CVE-2021-20311":"A flaw was found in ImageMagick in versions before 7.0.11, where a division by zero in sRGBTransformImage() in the MagickCore/colorspace.c may trigger undefined behavior via a crafted image file that is submitted by an attacker processed by an application using ImageMagick. The highest threat from this vulnerability is to system availability.","CVE-2021-20312":"A flaw was found in ImageMagick in versions 7.0.11, where an integer overflow in WriteTHUMBNAILImage of coders/thumbnail.c may trigger undefined behavior via a crafted image file that is submitted by an attacker and processed by an application using ImageMagick. The highest threat from this vulnerability is to system availability.","CVE-2021-20313":"A flaw was found in ImageMagick in versions before 7.0.11. A potential cipher leak when the calculate signatures in TransformSignature is possible. The highest threat from this vulnerability is to data confidentiality."}},{"name":"invoiceplane-1.5.11","pname":"invoiceplane","version":"1.5.11","affected_by":["CVE-2021-29022","CVE-2021-29023","CVE-2021-29024"],"whitelisted":[],"cvssv3_basescore":{"CVE-2021-29022":5.3,"CVE-2021-29023":5.3,"CVE-2021-29024":7.5},"maintainers":[{"github":"onny","email":"onny@project-insanity.org"}],"description":{"CVE-2021-29022":"In InvoicePlane 1.5.11, the upload feature discloses the full path of the file upload directory.","CVE-2021-29023":"InvoicePlane 1.5.11 doesn't have any rate-limiting for password reset and the reset token is generated using a weak mechanism that is predictable.","CVE-2021-29024":"In InvoicePlane 1.5.11 a misconfigured web server allows unauthenticated directory listing and file download. Allowing an attacker to directory traversal and download files suppose to be private without authentication."}},{"name":"jenkins-2.332.1","pname":"jenkins","version":"2.332.1","affected_by":["CVE-2022-0538"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-0538":7.5},"maintainers":[{"github":"coreyoconnor","email":"coreyoconnor@gmail.com"},{"github":"fpletz","email":"fpletz@fnordicwalking.de"},{"github":"earldouglas","email":"james@earldouglas.com"},{"github":"nequissimus","email":"tim@nequissimus.com"}],"description":{"CVE-2022-0538":"Jenkins 2.333 and earlier, LTS 2.319.2 and earlier defines custom XStream converters that have not been updated to apply the protections for the vulnerability CVE-2021-43859 and allow unconstrained resource usage."}},{"name":"keycloak-16.1.0","pname":"keycloak","version":"16.1.0","affected_by":["CVE-2021-20323"],"whitelisted":[],"cvssv3_basescore":{"CVE-2021-20323":6.1},"maintainers":[{"github":"ngerstle","email":"ngerstle@gmail.com"},{"github":"talyz","email":"kim.lindberger@gmail.com"}],"description":{"CVE-2021-20323":"A POST based reflected Cross Site Scripting vulnerability on has been identified in Keycloak."}},{"name":"liblouis-3.21.0","pname":"liblouis","version":"3.21.0","affected_by":["CVE-2022-26981"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-26981":7.8},"maintainers":[{"github":"jtojnar","email":"jtojnar@gmail.com"}],"description":{"CVE-2022-26981":"Liblouis through 3.21.0 has a buffer overflow in compilePassOpcode in compileTranslationTable.c (called, indirectly, by tools/lou_checktable.c)."}},{"name":"libpano13-2.9.20","pname":"libpano13","version":"2.9.20","affected_by":["CVE-2021-33293"],"whitelisted":[],"cvssv3_basescore":{"CVE-2021-33293":9.1},"maintainers":[],"description":{"CVE-2021-33293":"Panorama Tools libpano13 v2.9.20 was discovered to contain an out-of-bounds read in the function panoParserFindOLine() in parser.c."}},{"name":"libtiff-4.3.0","pname":"libtiff","version":"4.3.0","affected_by":["CVE-2022-0865","CVE-2022-0891","CVE-2022-0907","CVE-2022-0908","CVE-2022-0909","CVE-2022-0924"],"whitelisted":["CVE-2022-0561","CVE-2022-0562","CVE-2022-22844"],"cvssv3_basescore":{"CVE-2022-0561":5.5,"CVE-2022-0562":5.5,"CVE-2022-0865":6.5,"CVE-2022-0891":7.1,"CVE-2022-0907":5.5,"CVE-2022-0908":5.5,"CVE-2022-0909":5.5,"CVE-2022-0924":5.5,"CVE-2022-22844":5.5},"maintainers":[{"github":"alyssais","email":"hi@alyssa.is"}],"description":{"CVE-2022-0561":"Null source pointer passed as an argument to memcpy() function within TIFFFetchStripThing() in tif_dirread.c in libtiff versions from 3.9.0 to 4.3.0 could lead to Denial of Service via crafted TIFF file. For users that compile libtiff from sources, the fix is available with commit eecb0712.","CVE-2022-0562":"Null source pointer passed as an argument to memcpy() function within TIFFReadDirectory() in tif_dirread.c in libtiff versions from 4.0 to 4.3.0 could lead to Denial of Service via crafted TIFF file. For users that compile libtiff from sources, a fix is available with commit 561599c.","CVE-2022-0865":"Reachable Assertion in tiffcp in libtiff 4.3.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit 5e180045.","CVE-2022-0891":"A heap buffer overflow in ExtractImageSection function in tiffcrop.c in libtiff library Version 4.3.0 allows attacker to trigger unsafe or out of bounds memory access via crafted TIFF image file which could result into application crash, potential information disclosure or any other context-dependent impact","CVE-2022-0907":"Unchecked Return Value to NULL Pointer Dereference in tiffcrop in libtiff 4.3.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit f2b656e2.","CVE-2022-0908":"Null source pointer passed as an argument to memcpy() function within TIFFFetchNormalTag () in tif_dirread.c in libtiff versions up to 4.3.0 could lead to Denial of Service via crafted TIFF file.","CVE-2022-0909":"Divide By Zero error in tiffcrop in libtiff 4.3.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit f8d0f9aa.","CVE-2022-0924":"Out-of-bounds Read error in tiffcp in libtiff 4.3.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit 408976c4.","CVE-2022-22844":"LibTIFF 4.3.0 has an out-of-bounds read in _TIFFmemcpy in tif_unix.c in certain situations involving a custom tag and 0x0200 as the second word of the DE field."}},{"name":"lua-5.4.3","pname":"lua","version":"5.4.3","affected_by":["CVE-2021-44964"],"whitelisted":["CVE-2021-43519"],"cvssv3_basescore":{"CVE-2021-43519":5.5,"CVE-2021-44964":6.3},"maintainers":[],"description":{"CVE-2021-43519":"Stack overflow in lua_resume of ldo.c in Lua Interpreter 5.1.0~5.4.4 allows attackers to perform a Denial of Service via a crafted script file.","CVE-2021-44964":"Use after free in garbage collector and finalizer of lgc.c in Lua interpreter 5.4.0~5.4.3 allows attackers to perform Sandbox Escape via a crafted script file."}},{"name":"mastodon-3.4.6","pname":"mastodon","version":"3.4.6","affected_by":["CVE-2022-0432"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-0432":6.1},"maintainers":[{"github":"petabyteboy","email":"milan@petabyte.dev"},{"github":"happy-river","email":"happyriver93@runbox.com"},{"github":"erictapen","email":"kerstin@erictapen.name"},{"github":"izorkin","email":"Izorkin@gmail.com"}],"description":{"CVE-2022-0432":"Prototype Pollution in GitHub repository mastodon/mastodon prior to 3.5.0."}},{"name":"moodle-3.11.5","pname":"moodle","version":"3.11.5","affected_by":["CVE-2022-0983"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-0983":8.8},"maintainers":[{"github":"freezeboy","email":"freezeboy@users.noreply.github.com"}],"description":{"CVE-2022-0983":"An SQL injection risk was identified in Badges code relating to configuring criteria. Access to the relevant capability was limited to teachers and managers by default."}},{"name":"mruby-3.0.0","pname":"mruby","version":"3.0.0","affected_by":["CVE-2022-0570","CVE-2022-0614","CVE-2022-0623","CVE-2022-0630","CVE-2022-0631","CVE-2022-0632","CVE-2022-0717","CVE-2022-0890","CVE-2022-1071"],"whitelisted":["CVE-2021-4110","CVE-2021-4188","CVE-2021-46020","CVE-2022-0080","CVE-2022-0240","CVE-2022-0326","CVE-2022-0481","CVE-2022-0525"],"cvssv3_basescore":{"CVE-2021-4110":7.5,"CVE-2021-4188":7.5,"CVE-2021-46020":7.5,"CVE-2022-0080":9.8,"CVE-2022-0240":7.5,"CVE-2022-0326":5.5,"CVE-2022-0481":7.5,"CVE-2022-0525":9.1,"CVE-2022-0570":9.8,"CVE-2022-0614":5.5,"CVE-2022-0623":9.1,"CVE-2022-0630":7.1,"CVE-2022-0631":9.8,"CVE-2022-0632":5.5,"CVE-2022-0717":9.1,"CVE-2022-0890":5.5,"CVE-2022-1071":8.2},"maintainers":[{"github":"nicknovitski","email":"nixpkgs@nicknovitski.com"}],"description":{"CVE-2021-4110":"mruby is vulnerable to NULL Pointer Dereference","CVE-2021-4188":"mruby is vulnerable to NULL Pointer Dereference","CVE-2021-46020":"An untrusted pointer dereference in mrb_vm_exec() of mruby v3.0.0 can lead to a segmentation fault or application crash.","CVE-2022-0080":"mruby is vulnerable to Heap-based Buffer Overflow","CVE-2022-0240":"mruby is vulnerable to NULL Pointer Dereference","CVE-2022-0326":"NULL Pointer Dereference in Homebrew mruby prior to 3.2.","CVE-2022-0481":"NULL Pointer Dereference in Homebrew mruby prior to 3.2.","CVE-2022-0525":"Out-of-bounds Read in Homebrew mruby prior to 3.2.","CVE-2022-0570":"Heap-based Buffer Overflow in Homebrew mruby prior to 3.2.","CVE-2022-0614":"Use of Out-of-range Pointer Offset in Homebrew mruby prior to 3.2.","CVE-2022-0623":"Out-of-bounds Read in Homebrew mruby prior to 3.2.","CVE-2022-0630":"Out-of-bounds Read in Homebrew mruby prior to 3.2.","CVE-2022-0631":"Heap-based Buffer Overflow in Homebrew mruby prior to 3.2.","CVE-2022-0632":"NULL Pointer Dereference in Homebrew mruby prior to 3.2.","CVE-2022-0717":"Out-of-bounds Read in GitHub repository mruby/mruby prior to 3.2.","CVE-2022-0890":"NULL Pointer Dereference in GitHub repository mruby/mruby prior to 3.2.","CVE-2022-1071":"User after free in mrb_vm_exec in GitHub repository mruby/mruby prior to 3.2."}},{"name":"nomad-1.1.8","pname":"nomad","version":"1.1.8","affected_by":["CVE-2022-24683","CVE-2022-24684","CVE-2022-24685","CVE-2022-24686"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-24683":7.5,"CVE-2022-24684":6.5,"CVE-2022-24685":7.5,"CVE-2022-24686":5.9},"maintainers":[{"github":"rushmorem","email":"rushmore@webenchanter.com"},{"github":"pradeepchhetri","email":"pradeep.chhetri89@gmail.com"},{"github":"endocrimes","email":"dani@builds.terrible.systems"},{"github":"maxeaubrey","email":"maxeaubrey@gmail.com"},{"github":"techknowlogick","email":"techknowlogick@gitea.io"},{"github":"kalbasit","email":"wael.nasreddine@gmail.com"}],"description":{"CVE-2022-24683":"HashiCorp Nomad and Nomad Enterprise 0.9.2 through 1.0.17, 1.1.11, and 1.2.5 allow operators with read-fs and alloc-exec (or job-submit) capabilities to read arbitrary files on the host filesystem as root.","CVE-2022-24684":"HashiCorp Nomad and Nomad Enterprise before 1.0.17, 1.1.x before 1.1.12, and 1.2.x before 1.2.6 has Uncontrolled Resource Consumption.","CVE-2022-24685":"HashiCorp Nomad and Nomad Enterprise 1.x before 1.0.17, 1.1.x before 1.1.12, and 1.2.x before 1.2.6 has Uncontrolled Resource Consumption.","CVE-2022-24686":"HashiCorp Nomad and Nomad Enterprise 0.3.0 through 1.0.17, 1.1.11, and 1.2.5 artifact download functionality has a race condition such that the Nomad client agent could download the wrong artifact into the wrong destination. Fixed in 1.0.18, 1.1.12, and 1.2.6"}},{"name":"ocrfeeder-0.8.3","pname":"ocrfeeder","version":"0.8.3","affected_by":["CVE-2022-27811"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-27811":9.8},"maintainers":[{"github":"doronbehar","email":"me@doronbehar.com"}],"description":{"CVE-2022-27811":"GNOME OCRFeeder before 0.8.4 allows OS command injection via shell metacharacters in a PDF or image filename."}},{"name":"openjpeg-2.4.0","pname":"openjpeg","version":"2.4.0","affected_by":["CVE-2021-3575"],"whitelisted":["CVE-2021-29338"],"cvssv3_basescore":{"CVE-2021-3575":7.8,"CVE-2021-29338":5.5},"maintainers":[{"github":"codyopel","email":"codyopel@gmail.com"}],"description":{"CVE-2021-3575":"A heap-based buffer overflow was found in openjpeg in color.c:379:42 in sycc420_to_rgb when decompressing a crafted .j2k file. An attacker could use this to execute arbitrary code with the permissions of the application compiled against openjpeg.","CVE-2021-29338":"Integer Overflow in OpenJPEG v2.4.0 allows remote attackers to crash the application, causing a Denial of Service (DoS). This occurs when the attacker uses the command line option \"-ImgDir\" on a directory that contains 1048576 files."}},{"name":"openssh-8.8p1","pname":"openssh","version":"8.8p1","affected_by":["CVE-2021-36368"],"whitelisted":[],"cvssv3_basescore":{"CVE-2021-36368":3.7},"maintainers":[{"github":"dasJ","email":"janne@hess.ooo"}],"description":{"CVE-2021-36368":"** DISPUTED ** An issue was discovered in OpenSSH before 8.9. If a client is using public-key authentication with agent forwarding but without -oLogLevel=verbose, and an attacker has silently modified the server to support the None authentication option, then the user cannot determine whether FIDO authentication is going to confirm that the user wishes to connect to that server, or that the user wishes to allow that server to connect to a different server on the user's behalf. NOTE: the vendor's position is \"this is not an authentication bypass, since nothing is being bypassed.\""}},{"name":"peertube-4.1.1","pname":"peertube","version":"4.1.1","affected_by":["CVE-2022-0133","CVE-2022-0508"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-0133":7.5,"CVE-2022-0508":5.3},"maintainers":[{"github":"immae","email":"ismael@bouya.org"},{"github":"izorkin","email":"Izorkin@gmail.com"},{"github":"matthiasbeyer","email":"mail@beyermatthias.de"},{"github":"mohe2015","email":"Moritz.Hedtke@t-online.de"},{"github":"stevenroose","email":"github@stevenroose.org"}],"description":{"CVE-2022-0133":"peertube is vulnerable to Improper Access Control","CVE-2022-0508":"Server-Side Request Forgery (SSRF) in GitHub repository chocobozzz/peertube prior to f33e515991a32885622b217bf2ed1d1b0d9d6832"}},{"name":"pjsip-2.12","pname":"pjsip","version":"2.12","affected_by":["CVE-2022-24754","CVE-2022-24764"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-24754":9.8,"CVE-2022-24764":7.5},"maintainers":[{"github":"olynch","email":"owen@olynch.me"}],"description":{"CVE-2022-24754":"PJSIP is a free and open source multimedia communication library written in C language. In versions prior to and including 2.12 PJSIP there is a stack-buffer overflow vulnerability which only impacts PJSIP users who accept hashed digest credentials (credentials with data_type `PJSIP_CRED_DATA_DIGEST`). This issue has been patched in the master branch of the PJSIP repository and will be included with the next release. Users unable to upgrade need to check that the hashed digest data length must be equal to `PJSIP_MD5STRLEN` before passing to PJSIP.","CVE-2022-24764":"PJSIP is a free and open source multimedia communication library written in C. Versions 2.12 and prior contain a stack buffer overflow vulnerability that affects PJSUA2 users or users that call the API `pjmedia_sdp_print(), pjmedia_sdp_media_print()`. Applications that do not use PJSUA2 and do not directly call `pjmedia_sdp_print()` or `pjmedia_sdp_media_print()` should not be affected. A patch is available on the `master` branch of the `pjsip/pjproject` GitHub repository. There are currently no known workarounds."}},{"name":"postgresql-10.20","pname":"postgresql","version":"10.20","affected_by":["CVE-2019-9193","CVE-2021-3393"],"whitelisted":[],"cvssv3_basescore":{"CVE-2019-9193":7.2,"CVE-2021-3393":4.3},"maintainers":[{"github":"thoughtpolice","email":"aseipp@pobox.com"},{"github":"danbst","email":"abcz2.uprola@gmail.com"},{"github":"globin","email":"mail@glob.in"},{"github":"marsam","email":"marsam@users.noreply.github.com"},{"github":"ivan","email":"ivan@ludios.org"}],"description":{"CVE-2019-9193":"** DISPUTED ** In PostgreSQL 9.3 through 11.2, the \"COPY TO/FROM PROGRAM\" function allows superusers and users in the 'pg_execute_server_program' group to execute arbitrary code in the context of the database's operating system user. This functionality is enabled by default and can be abused to run arbitrary operating system commands on Windows, Linux, and macOS. NOTE: Third parties claim/state this is not an issue because PostgreSQL functionality for ‘COPY TO/FROM PROGRAM’ is acting as intended. References state that in PostgreSQL, a superuser can execute commands as the server user without using the ‘COPY FROM PROGRAM’.","CVE-2021-3393":"An information leak was discovered in postgresql in versions before 13.2, before 12.6 and before 11.11. A user having UPDATE permission but not SELECT permission to a particular column could craft queries which, under some circumstances, might disclose values from that column in error messages. An attacker could use this flaw to obtain information stored in a column they are allowed to write but not read."}},{"name":"qemu-6.2.0","pname":"qemu","version":"6.2.0","affected_by":["CVE-2022-26353","CVE-2022-26354"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-26353":7.5,"CVE-2022-26354":3.2},"maintainers":[{"github":"edolstra","email":"edolstra+nixpkgs@gmail.com"},{"github":"alyssais","email":"hi@alyssa.is"},{"github":"edolstra","email":"edolstra+nixpkgs@gmail.com"},{"github":"alyssais","email":"hi@alyssa.is"}],"description":{"CVE-2022-26353":"A flaw was found in the virtio-net device of QEMU. This flaw was inadvertently introduced with the fix for CVE-2021-3748, which forgot to unmap the cached virtqueue elements on error, leading to memory leakage and other unexpected results. Affected QEMU version: 6.2.0.","CVE-2022-26354":"A flaw was found in the vhost-vsock device of QEMU. In case of error, an invalid element was not detached from the virtqueue before freeing its memory, leading to memory leakage and other unexpected results. Affected QEMU versions <= 6.2.0."}},{"name":"qt-4.8.7","pname":"qt","version":"4.8.7","affected_by":["CVE-2022-25634"],"whitelisted":["CVE-2017-10904","CVE-2017-10905","CVE-2018-19869","CVE-2018-19870","CVE-2018-19871","CVE-2018-19873","CVE-2018-21035","CVE-2020-0570","CVE-2020-17507"],"cvssv3_basescore":{"CVE-2017-10904":9.8,"CVE-2017-10905":5.3,"CVE-2018-19869":6.5,"CVE-2018-19870":8.8,"CVE-2018-19871":6.5,"CVE-2018-19873":9.8,"CVE-2018-21035":7.5,"CVE-2020-0570":7.3,"CVE-2020-17507":5.3,"CVE-2022-25634":7.5},"maintainers":[{"github":"orivej","email":"orivej@gmx.fr"},{"github":"lovek323","email":"jason@oconal.id.au"},{"github":"svanderburg","email":"s.vanderburg@tudelft.nl"}],"description":{"CVE-2017-10904":"Qt for Android prior to 5.9.0 allows remote attackers to execute arbitrary OS commands via unspecified vectors.","CVE-2017-10905":"A vulnerability in applications created using Qt for Android prior to 5.9.3 allows attackers to alter environment variables via unspecified vectors.","CVE-2018-19869":"An issue was discovered in Qt before 5.11.3. A malformed SVG image causes a segmentation fault in qsvghandler.cpp.","CVE-2018-19870":"An issue was discovered in Qt before 5.11.3. A malformed GIF image causes a NULL pointer dereference in QGifHandler resulting in a segmentation fault.","CVE-2018-19871":"An issue was discovered in Qt before 5.11.3. There is QTgaFile Uncontrolled Resource Consumption.","CVE-2018-19873":"An issue was discovered in Qt before 5.11.3. QBmpHandler has a buffer overflow via BMP data.","CVE-2018-21035":"In Qt through 5.14.1, the WebSocket implementation accepts up to 2GB for frames and 2GB for messages. Smaller limits cannot be configured. This makes it easier for attackers to cause a denial of service (memory consumption).","CVE-2020-0570":"Uncontrolled search path in the QT Library before 5.14.0, 5.12.7 and 5.9.10 may allow an authenticated user to potentially enable elevation of privilege via local access.","CVE-2020-17507":"An issue was discovered in Qt through 5.12.9, and 5.13.x through 5.15.x before 5.15.1. read_xbm_body in gui/image/qxbmhandler.cpp has a buffer over-read.","CVE-2022-25634":"Qt through 5.15.8 and 6.x through 6.2.3 can load system library files from an unintended working directory."}},{"name":"radare2-5.6.4","pname":"radare2","version":"5.6.4","affected_by":["CVE-2022-0849","CVE-2022-1031"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-0849":5.5,"CVE-2022-1031":7.8},"maintainers":[{"github":"7c6f434c","email":"7c6f434c@mail.ru"},{"github":"makefu","email":"makefu@syntax-fehler.de"},{"github":"mic92","email":"joerg@thalheim.io"},{"github":"arkivm","email":"vikram186@gmail.com"}],"description":{"CVE-2022-0849":"Use After Free in r_reg_get_name_idx in GitHub repository radareorg/radare2 prior to 5.6.6.","CVE-2022-1031":"Use After Free in op_is_set_bp in GitHub repository radareorg/radare2 prior to 5.6.6."}},{"name":"rtl_433-21.12","pname":"rtl_433","version":"21.12","affected_by":["CVE-2022-25051"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-25051":5.5},"maintainers":[{"github":"earldouglas","email":"james@earldouglas.com"}],"description":{"CVE-2022-25051":"An Off-by-one Error occurs in cmr113_decode of rtl_433 21.12 when decoding a crafted file."}},{"name":"spark-2.4.8","pname":"spark","version":"2.4.8","affected_by":["CVE-2021-38296"],"whitelisted":["CVE-2016-9177","CVE-2018-11770","CVE-2018-11804","CVE-2018-9159","CVE-2019-20445","CVE-2020-27218"],"cvssv3_basescore":{"CVE-2016-9177":7.5,"CVE-2018-9159":5.3,"CVE-2018-11770":4.2,"CVE-2018-11804":7.5,"CVE-2019-20445":9.1,"CVE-2020-27218":4.8,"CVE-2021-38296":7.5},"maintainers":[{"github":"thoughtpolice","email":"aseipp@pobox.com"},{"github":"offlinehacker","email":"jaka@x-truder.net"},{"github":"kamilchm","email":"kamil.chm@gmail.com"},{"github":"illustris","email":"me@illustris.tech"}],"description":{"CVE-2016-9177":"Directory traversal vulnerability in Spark 2.5 allows remote attackers to read arbitrary files via a .. (dot dot) in the URI.","CVE-2018-9159":"In Spark before 2.7.2, a remote attacker can read unintended static files via various representations of absolute or relative pathnames, as demonstrated by file: URLs and directory traversal sequences. NOTE: this product is unrelated to Ignite Realtime Spark.","CVE-2018-11770":"From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'.","CVE-2018-11804":"Spark's Apache Maven-based build includes a convenience script, 'build/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code.","CVE-2019-20445":"HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header.","CVE-2020-27218":"In Eclipse Jetty version 9.4.0.RC0 to 9.4.34.v20201102, 10.0.0.alpha0 to 10.0.0.beta2, and 11.0.0.alpha0 to 11.0.0.beta2, if GZIP request body inflation is enabled and requests from different clients are multiplexed onto a single connection, and if an attacker can send a request with a body that is received entirely but not consumed by the application, then a subsequent request on the same connection will see that body prepended to its body. The attacker will not see any data but may inject data into the body of the subsequent request.","CVE-2021-38296":"Apache Spark supports end-to-end encryption of RPC connections via \"spark.authenticate\" and \"spark.network.crypto.enabled\". In versions 3.1.2 and earlier, it uses a bespoke mutual authentication protocol that allows for full encryption key recovery. After an initial interactive attack, this would allow someone to decrypt plaintext traffic offline. Note that this does not affect security mechanisms controlled by \"spark.authenticate.enableSaslEncryption\", \"spark.io.encryption.enabled\", \"spark.ssl\", \"spark.ui.strictTransportSecurity\". Update to Apache Spark 3.1.3 or later"}},{"name":"spark-3.1.2","pname":"spark","version":"3.1.2","affected_by":["CVE-2021-38296"],"whitelisted":["CVE-2018-11770","CVE-2018-11804"],"cvssv3_basescore":{"CVE-2018-11770":4.2,"CVE-2018-11804":7.5,"CVE-2021-38296":7.5},"maintainers":[{"github":"thoughtpolice","email":"aseipp@pobox.com"},{"github":"offlinehacker","email":"jaka@x-truder.net"},{"github":"kamilchm","email":"kamil.chm@gmail.com"},{"github":"illustris","email":"me@illustris.tech"}],"description":{"CVE-2018-11770":"From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'.","CVE-2018-11804":"Spark's Apache Maven-based build includes a convenience script, 'build/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code.","CVE-2021-38296":"Apache Spark supports end-to-end encryption of RPC connections via \"spark.authenticate\" and \"spark.network.crypto.enabled\". In versions 3.1.2 and earlier, it uses a bespoke mutual authentication protocol that allows for full encryption key recovery. After an initial interactive attack, this would allow someone to decrypt plaintext traffic offline. Note that this does not affect security mechanisms controlled by \"spark.authenticate.enableSaslEncryption\", \"spark.io.encryption.enabled\", \"spark.ssl\", \"spark.ui.strictTransportSecurity\". Update to Apache Spark 3.1.3 or later"}},{"name":"tcpreplay-4.4.1","pname":"tcpreplay","version":"4.4.1","affected_by":["CVE-2022-25484","CVE-2022-27939","CVE-2022-27940","CVE-2022-27941","CVE-2022-27942"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-25484":5.5,"CVE-2022-27939":5.5,"CVE-2022-27940":7.8,"CVE-2022-27941":7.8,"CVE-2022-27942":7.8},"maintainers":[{"github":"proteansec","email":"dejan@proteansec.com"}],"description":{"CVE-2022-25484":"tcpprep v4.4.1 has a reachable assertion (assert(l2len > 0)) in packet2tree() at tree.c in tcpprep v4.4.1.","CVE-2022-27939":"tcprewrite in Tcpreplay 4.4.1 has a reachable assertion in get_layer4_v6 in common/get.c.","CVE-2022-27940":"tcprewrite in Tcpreplay 4.4.1 has a heap-based buffer over-read in get_ipv6_next in common/get.c.","CVE-2022-27941":"tcprewrite in Tcpreplay 4.4.1 has a heap-based buffer over-read in get_l2len_protocol in common/get.c.","CVE-2022-27942":"tcpprep in Tcpreplay 4.4.1 has a heap-based buffer over-read in parse_mpls in common/get.c."}},{"name":"tensorflow-2.7.1","pname":"tensorflow","version":"2.7.1","affected_by":["CVE-2022-23592","CVE-2022-23593"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-23592":8.1,"CVE-2022-23593":7.5},"maintainers":[{"github":"jyp","email":"jeanphilippe.bernardy@gmail.com"},{"github":"abbradar","email":"ab@fmap.me"}],"description":{"CVE-2022-23592":"Tensorflow is an Open Source Machine Learning Framework. TensorFlow's type inference can cause a heap out of bounds read as the bounds checking is done in a `DCHECK` (which is a no-op during production). An attacker can control the `input_idx` variable such that `ix` would be larger than the number of values in `node_t.args`. The fix will be included in TensorFlow 2.8.0. This is the only affected version.","CVE-2022-23593":"Tensorflow is an Open Source Machine Learning Framework. The `simplifyBroadcast` function in the MLIR-TFRT infrastructure in TensorFlow is vulnerable to a segfault (hence, denial of service), if called with scalar shapes. If all shapes are scalar, then `maxRank` is 0, so we build an empty `SmallVector`. The fix will be included in TensorFlow 2.8.0. This is the only affected version."}},{"name":"trytond-6.2.3","pname":"trytond","version":"6.2.3","affected_by":["CVE-2022-26661","CVE-2022-26662"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-26661":6.5,"CVE-2022-26662":7.5},"maintainers":[{"github":"udono","email":"udono@virtual-things.biz"},{"github":"johbo","email":"johannes@bornhold.name"},{"github":"udono","email":"udono@virtual-things.biz"},{"github":"johbo","email":"johannes@bornhold.name"},{"github":"udono","email":"udono@virtual-things.biz"},{"github":"johbo","email":"johannes@bornhold.name"}],"description":{"CVE-2022-26661":"An XXE issue was discovered in Tryton Application Platform (Server) 5.x through 5.0.45, 6.x through 6.0.15, and 6.1.x and 6.2.x through 6.2.5, and Tryton Application Platform (Command Line Client (proteus)) 5.x through 5.0.11, 6.x through 6.0.4, and 6.1.x and 6.2.x through 6.2.1. An authenticated user can make the server parse a crafted XML SEPA file to access arbitrary files on the system.","CVE-2022-26662":"An XML Entity Expansion (XEE) issue was discovered in Tryton Application Platform (Server) 5.x through 5.0.45, 6.x through 6.0.15, and 6.1.x and 6.2.x through 6.2.5, and Tryton Application Platform (Command Line Client (proteus)) 5.x through 5.0.11, 6.x through 6.0.4, and 6.1.x and 6.2.x through 6.2.1. An unauthenticated user can send a crafted XML-RPC message to consume all the resources of the server."}},{"name":"vim-8.2.4350","pname":"vim","version":"8.2.4350","affected_by":["CVE-2022-0572","CVE-2022-0629","CVE-2022-0685","CVE-2022-0696","CVE-2022-0714","CVE-2022-0729","CVE-2022-0943"],"whitelisted":[],"cvssv3_basescore":{"CVE-2022-0572":7.8,"CVE-2022-0629":7.8,"CVE-2022-0685":7.8,"CVE-2022-0696":5.5,"CVE-2022-0714":5.5,"CVE-2022-0729":8.8,"CVE-2022-0943":7.8},"maintainers":[{"github":"lovek323","email":"jason@oconal.id.au"},{"github":"equirosa","email":"eduardo@eduardoquiros.com"}],"description":{"CVE-2022-0572":"Heap-based Buffer Overflow in GitHub repository vim/vim prior to 8.2.","CVE-2022-0629":"Stack-based Buffer Overflow in GitHub repository vim/vim prior to 8.2.","CVE-2022-0685":"Use of Out-of-range Pointer Offset in GitHub repository vim/vim prior to 8.2.4418.","CVE-2022-0696":"NULL Pointer Dereference in GitHub repository vim/vim prior to 8.2.4428.","CVE-2022-0714":"Heap-based Buffer Overflow in GitHub repository vim/vim prior to 8.2.4436.","CVE-2022-0729":"Use of Out-of-range Pointer Offset in GitHub repository vim/vim prior to 8.2.4440.","CVE-2022-0943":"Heap-based Buffer Overflow occurs in vim in GitHub repository vim/vim prior to 8.2.4563."}},{"name":"wasmtime-0.21.0","pname":"wasmtime","version":"0.21.0","affected_by":["CVE-2022-23636"],"whitelisted":["CVE-2021-39216","CVE-2021-39219"],"cvssv3_basescore":{"CVE-2021-39216":6.3,"CVE-2021-39219":6.3,"CVE-2022-23636":8.1},"maintainers":[{"github":"matthewbauer","email":"mjbauer95@gmail.com"}],"description":{"CVE-2021-39216":"Wasmtime is an open source runtime for WebAssembly & WASI. In Wasmtime from version 0.19.0 and before version 0.30.0 there was a use-after-free bug when passing `externref`s from the host to guest Wasm content. To trigger the bug, you have to explicitly pass multiple `externref`s from the host to a Wasm instance at the same time, either by passing multiple `externref`s as arguments from host code to a Wasm function, or returning multiple `externref`s to Wasm from a multi-value return function defined in the host. If you do not have host code that matches one of these shapes, then you are not impacted. If Wasmtime's `VMExternRefActivationsTable` became filled to capacity after passing the first `externref` in, then passing in the second `externref` could trigger a garbage collection. However the first `externref` is not rooted until we pass control to Wasm, and therefore could be reclaimed by the collector if nothing else was holding a reference to it or otherwise keeping it alive. Then, when control was passed to Wasm after the garbage collection, Wasm could use the first `externref`, which at this point has already been freed. We have reason to believe that the effective impact of this bug is relatively small because usage of `externref` is currently quite rare. The bug has been fixed, and users should upgrade to Wasmtime 0.30.0. If you cannot upgrade Wasmtime yet, you can avoid the bug by disabling reference types support in Wasmtime by passing `false` to `wasmtime::Config::wasm_reference_types`.","CVE-2021-39219":"Wasmtime is an open source runtime for WebAssembly & WASI. Wasmtime before version 0.30.0 is affected by a type confusion vulnerability. As a Rust library the `wasmtime` crate clearly marks which functions are safe and which are `unsafe`, guaranteeing that if consumers never use `unsafe` then it should not be possible to have memory unsafety issues in their embeddings of Wasmtime. An issue was discovered in the safe API of `Linker::func_*` APIs. These APIs were previously not sound when one `Engine` was used to create the `Linker` and then a different `Engine` was used to create a `Store` and then the `Linker` was used to instantiate a module into that `Store`. Cross-`Engine` usage of functions is not supported in Wasmtime and this can result in type confusion of function pointers, resulting in being able to safely call a function with the wrong type. Triggering this bug requires using at least two `Engine` values in an embedding and then additionally using two different values with a `Linker` (one at the creation time of the `Linker` and another when instantiating a module with the `Linker`). It's expected that usage of more-than-one `Engine` in an embedding is relatively rare since an `Engine` is intended to be a globally shared resource, so the expectation is that the impact of this issue is relatively small. The fix implemented is to change this behavior to `panic!()` in Rust instead of silently allowing it. Using different `Engine` instances with a `Linker` is a programmer bug that `wasmtime` catches at runtime. This bug has been patched and users should upgrade to Wasmtime version 0.30.0. If you cannot upgrade Wasmtime and are using more than one `Engine` in your embedding it's recommended to instead use only one `Engine` for the entire program if possible. An `Engine` is designed to be a globally shared resource that is suitable to have only one for the lifetime of an entire process. If using multiple `Engine`s is required then code should be audited to ensure that `Linker` is only used with one `Engine`.","CVE-2022-23636":"Wasmtime is an open source runtime for WebAssembly & WASI. Prior to versions 0.34.1 and 0.33.1, there exists a bug in the pooling instance allocator in Wasmtime's runtime where a failure to instantiate an instance for a module that defines an `externref` global will result in an invalid drop of a `VMExternRef` via an uninitialized pointer. A number of conditions listed in the GitHub Security Advisory must be true in order for an instance to be vulnerable to this issue. Maintainers believe that the effective impact of this bug is relatively small because the usage of `externref` is still uncommon and without a resource limiter configured on the `Store`, which is not the default configuration, it is only possible to trigger the bug from an error returned by `mprotect` or `VirtualAlloc`. Note that on Linux with the `uffd` feature enabled, it is only possible to trigger the bug from a resource limiter as the call to `mprotect` is skipped. The bug has been fixed in 0.34.1 and 0.33.1 and users are encouraged to upgrade as soon as possible. If it is not possible to upgrade to version 0.34.1 or 0.33.1 of the `wasmtime` crate, it is recommend that support for the reference types proposal be disabled by passing `false` to `Config::wasm_reference_types`. Doing so will prevent modules that use `externref` from being loaded entirely."}},{"name":"wavpack-5.4.0","pname":"wavpack","version":"5.4.0","affected_by":["CVE-2021-44269"],"whitelisted":[],"cvssv3_basescore":{"CVE-2021-44269":5.5},"maintainers":[{"github":"codyopel","email":"codyopel@gmail.com"}],"description":{"CVE-2021-44269":"An out of bounds read was found in Wavpack 5.4.0 in processing *.WAV files. This issue triggered in function WavpackPackSamples of file src/pack_utils.c, tainted variable cnt is too large, that makes pointer sptr read beyond heap bound."}},{"name":"zlib-1.2.11","pname":"zlib","version":"1.2.11","affected_by":["CVE-2018-25032"],"whitelisted":[],"cvssv3_basescore":{"CVE-2018-25032":7.5},"maintainers":[],"description":{"CVE-2018-25032":"zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches."}}]