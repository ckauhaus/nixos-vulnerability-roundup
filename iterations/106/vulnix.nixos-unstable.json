[
  {
    "name": "ArchiSteamFarm-4.3.1.0",
    "pname": "ArchiSteamFarm",
    "version": "4.3.1.0",
    "affected_by": [
      "CVE-2021-32794"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-32794": 7.5
    },
    "maintainers": [],
    "description": {
      "CVE-2021-32794": "ArchiSteamFarm is a C# application with primary purpose of idling Steam cards from multiple accounts simultaneously. Due to a bug in ASF code `POST /Api/ASF` ASF API endpoint responsible for updating global ASF config incorrectly removed `IPCPassword` from the resulting config when the caller did not specify it explicitly. Due to the above, it was possible for the user to accidentally remove `IPCPassword` security measure from his IPC interface when updating global ASF config, which exists as part of global config update functionality in ASF-ui. Removal of `IPCPassword` possesses a security risk, as unauthorized users may in result access the IPC interface after such modification. The issue is patched in ASF V5.1.2.4 and future versions. We recommend to manually verify that `IPCPassword` is specified after update, and if not, set it accordingly. In default settings, ASF is configured to allow IPC access from `localhost` only and should not affect majority of users."
    }
  },
  {
    "name": "HedgeDoc-1.8.2",
    "pname": "HedgeDoc",
    "version": "1.8.2",
    "affected_by": [
      "CVE-2021-39175"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-39175": 6.1
    },
    "maintainers": [
      {
        "github": "willibutz",
        "email": "willibutz@posteo.de"
      },
      {
        "github": "ma27",
        "email": "maximilian@mbosch.me"
      },
      {
        "github": "globin",
        "email": "mail@glob.in"
      }
    ],
    "description": {
      "CVE-2021-39175": "HedgeDoc is a platform to write and share markdown. In versions prior to 1.9.0, an unauthenticated attacker can inject arbitrary JavaScript into the speaker-notes of the slide-mode feature by embedding an iframe hosting the malicious code into the slides or by embedding the HedgeDoc instance into another page. The problem is patched in version 1.9.0. There are no known workarounds aside from upgrading."
    }
  },
  {
    "name": "alpine-2.24",
    "pname": "alpine",
    "version": "2.24",
    "affected_by": [
      "CVE-2021-38370"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-38370": 5.9
    },
    "maintainers": [
      {
        "github": "7c6f434c",
        "email": "7c6f434c@mail.ru"
      }
    ],
    "description": {
      "CVE-2021-38370": "In Alpine through 2.24, untagged responses from an IMAP server are accepted before STARTTLS."
    }
  },
  {
    "name": "belle-sip-4.5.14",
    "pname": "belle-sip",
    "version": "4.5.14",
    "affected_by": [
      "CVE-2021-33056"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-33056": 7.5
    },
    "maintainers": [
      {
        "github": "jluttine",
        "email": "jaakko.luttinen@iki.fi"
      }
    ],
    "description": {
      "CVE-2021-33056": "Belledonne Belle-sip before 4.5.20, as used in Linphone and other products, can crash via an invalid From header in a SIP message."
    }
  },
  {
    "name": "botan-2.18.1",
    "pname": "botan",
    "version": "2.18.1",
    "affected_by": [
      "CVE-2021-40529"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-40529": 5.9
    },
    "maintainers": [
      {
        "github": "7c6f434c",
        "email": "7c6f434c@mail.ru"
      }
    ],
    "description": {
      "CVE-2021-40529": "The ElGamal implementation in Botan through 2.18.1, as used in Thunderbird and other products, allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP."
    }
  },
  {
    "name": "btrbk-0.29.1",
    "pname": "btrbk",
    "version": "0.29.1",
    "affected_by": [
      "CVE-2021-38173"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-38173": 9.8
    },
    "maintainers": [
      {
        "github": "asymmetric",
        "email": "lorenzo@mailbox.org"
      }
    ],
    "description": {
      "CVE-2021-38173": "Btrbk before 0.31.2 allows command execution because of the mishandling of remote hosts filtering SSH commands using ssh_filter_btrbk.sh in authorized_keys."
    }
  },
  {
    "name": "cpio-2.13",
    "pname": "cpio",
    "version": "2.13",
    "affected_by": [
      "CVE-2021-38185"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-38185": 7.8
    },
    "maintainers": [],
    "description": {
      "CVE-2021-38185": "GNU cpio through 2.13 allows attackers to execute arbitrary code via a crafted pattern file, because of a dstring.c ds_fgetstr integer overflow that triggers an out-of-bounds heap write. NOTE: it is unclear whether there are common cases where the pattern file, associated with the -E option, is untrusted data."
    }
  },
  {
    "name": "curl-7.76.1",
    "pname": "curl",
    "version": "7.76.1",
    "affected_by": [
      "CVE-2021-22922",
      "CVE-2021-22923",
      "CVE-2021-22925",
      "CVE-2021-22926"
    ],
    "whitelisted": [
      "CVE-2021-22897",
      "CVE-2021-22898",
      "CVE-2021-22901"
    ],
    "cvssv3_basescore": {
      "CVE-2021-22897": 5.3,
      "CVE-2021-22898": 3.1,
      "CVE-2021-22901": 8.1,
      "CVE-2021-22922": 6.5,
      "CVE-2021-22923": 5.3,
      "CVE-2021-22925": 5.3,
      "CVE-2021-22926": 7.5
    },
    "maintainers": [
      {
        "github": "lovek323",
        "email": "jason@oconal.id.au"
      },
      {
        "github": "lovek323",
        "email": "jason@oconal.id.au"
      },
      {
        "github": "lovek323",
        "email": "jason@oconal.id.au"
      }
    ],
    "description": {
      "CVE-2021-22897": "curl 7.61.0 through 7.76.1 suffers from exposure of data element to wrong session due to a mistake in the code for CURLOPT_SSL_CIPHER_LIST when libcurl is built to use the Schannel TLS library. The selected cipher set was stored in a single \"static\" variable in the library, which has the surprising side-effect that if an application sets up multiple concurrent transfers, the last one that sets the ciphers will accidentally control the set used by all transfers. In a worst-case scenario, this weakens transport security significantly.",
      "CVE-2021-22898": "curl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol.",
      "CVE-2021-22901": "curl 7.75.0 through 7.76.1 suffers from a use-after-free vulnerability resulting in already freed memory being used when a TLS 1.3 session ticket arrives over a connection. A malicious server can use this in rare unfortunate circumstances to potentially reach remote code execution in the client. When libcurl at run-time sets up support for TLS 1.3 session tickets on a connection using OpenSSL, it stores pointers to the transfer in-memory object for later retrieval when a session ticket arrives. If the connection is used by multiple transfers (like with a reused HTTP/1.1 connection or multiplexed HTTP/2 connection) that first transfer object might be freed before the new session is established on that connection and then the function will access a memory buffer that might be freed. When using that memory, libcurl might even call a function pointer in the object, making it possible for a remote code execution if the server could somehow manage to get crafted memory content into the correct place in memory.",
      "CVE-2021-22922": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
      "CVE-2021-22923": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
      "CVE-2021-22925": "curl supports the `-t` command line option, known as `CURLOPT_TELNETOPTIONS`in libcurl. This rarely used option is used to send variable=content pairs toTELNET servers.Due to flaw in the option parser for sending `NEW_ENV` variables, libcurlcould be made to pass on uninitialized data from a stack based buffer to theserver. Therefore potentially revealing sensitive internal information to theserver using a clear-text network protocol.This could happen because curl did not call and use sscanf() correctly whenparsing the string provided by the application.",
      "CVE-2021-22926": "libcurl-using applications can ask for a specific client certificate to be used in a transfer. This is done with the `CURLOPT_SSLCERT` option (`--cert` with the command line tool).When libcurl is built to use the macOS native TLS library Secure Transport, an application can ask for the client certificate by name or with a file name - using the same option. If the name exists as a file, it will be used instead of by name.If the appliction runs with a current working directory that is writable by other users (like `/tmp`), a malicious user can create a file name with the same name as the app wants to use by name, and thereby trick the application to use the file based cert instead of the one referred to by name making libcurl send the wrong client certificate in the TLS connection handshake."
    }
  },
  {
    "name": "discourse-2.7.7",
    "pname": "discourse",
    "version": "2.7.7",
    "affected_by": [
      "CVE-2021-37633",
      "CVE-2021-37693",
      "CVE-2021-37703",
      "CVE-2021-39161"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-37633": 6.1,
      "CVE-2021-37693": 7.5,
      "CVE-2021-37703": 4.3,
      "CVE-2021-39161": 5.4
    },
    "maintainers": [
      {
        "github": "talyz",
        "email": "kim.lindberger@gmail.com"
      },
      {
        "github": "talyz",
        "email": "kim.lindberger@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-37633": "Discourse is an open source discussion platform. In versions prior to 2.7.8 rendering of d-popover tooltips can be susceptible to XSS attacks. This vulnerability only affects sites which have modified or disabled Discourse's default Content Security Policy. This issue is patched in the latest `stable` 2.7.8 version of Discourse. As a workaround users may ensure that the Content Security Policy is enabled, and has not been modified in a way which would make it more vulnerable to XSS attacks.",
      "CVE-2021-37693": "Discourse is an open-source platform for community discussion. In Discourse before versions 2.7.8 and 2.8.0.beta4, when adding additional email addresses to an existing account on a Discourse site an email token is generated as part of the email verification process. Deleting the additional email address does not invalidate an unused token which can then be used in other contexts, including reseting a password.",
      "CVE-2021-37703": "Discourse is an open-source platform for community discussion. In Discourse before versions 2.7.8 and 2.8.0.beta5, a user's read state for a topic such as the last read post number and the notification level is exposed.",
      "CVE-2021-39161": "Discourse is an open source platform for community discussion. In affected versions category names can be used for Cross-site scripting(XSS) attacks. This is mitigated by Discourse's default Content Security Policy and this vulnerability only affects sites which have modified or disabled or changed Discourse's default Content Security Policy have allowed for moderators to modify categories. This issue is patched in the latest stable, beta and tests-passed versions of Discourse. Users are advised to ensure that the Content Security Policy is enabled, and has not been modified in a way which would make it more vulnerable to XSS attacks."
    }
  },
  {
    "name": "dxflib-3.17.0",
    "pname": "dxflib",
    "version": "3.17.0",
    "affected_by": [
      "CVE-2021-21897"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-21897": 8.8
    },
    "maintainers": [
      {
        "github": "7c6f434c",
        "email": "7c6f434c@mail.ru"
      },
      {
        "github": "7c6f434c",
        "email": "7c6f434c@mail.ru"
      },
      {
        "github": "7c6f434c",
        "email": "7c6f434c@mail.ru"
      }
    ],
    "description": {
      "CVE-2021-21897": "A code execution vulnerability exists in the DL_Dxf::handleLWPolylineData functionality of Ribbonsoft dxflib 3.17.0. A specially-crafted .dxf file can lead to a heap buffer overflow. An attacker can provide a malicious file to trigger this vulnerability."
    }
  },
  {
    "name": "envoy-1.17.3",
    "pname": "envoy",
    "version": "1.17.3",
    "affected_by": [
      "CVE-2021-32777",
      "CVE-2021-32778",
      "CVE-2021-32779",
      "CVE-2021-32781"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-32777": 8.3,
      "CVE-2021-32778": 7.5,
      "CVE-2021-32779": 8.3,
      "CVE-2021-32781": 7.5
    },
    "maintainers": [
      {
        "github": "lukegb",
        "email": "nix@lukegb.com"
      }
    ],
    "description": {
      "CVE-2021-32777": "Envoy is an open source L7 proxy and communication bus designed for large modern service oriented architectures. In affected versions when ext-authz extension is sending request headers to the external authorization service it must merge multiple value headers according to the HTTP spec. However, only the last header value is sent. This may allow specifically crafted requests to bypass authorization. Attackers may be able to escalate privileges when using ext-authz extension or back end service that uses multiple value headers for authorization. A specifically constructed request may be delivered by an untrusted downstream peer in the presence of ext-authz extension. Envoy versions 1.19.1, 1.18.4, 1.17.4, 1.16.5 contain fixes to the ext-authz extension to correctly merge multiple request header values, when sending request for authorization.",
      "CVE-2021-32778": "Envoy is an open source L7 proxy and communication bus designed for large modern service oriented architectures. In affected versions envoy’s procedure for resetting a HTTP/2 stream has O(N^2) complexity, leading to high CPU utilization when a large number of streams are reset. Deployments are susceptible to Denial of Service when Envoy is configured with high limit on H/2 concurrent streams. An attacker wishing to exploit this vulnerability would require a client opening and closing a large number of H/2 streams. Envoy versions 1.19.1, 1.18.4, 1.17.4, 1.16.5 contain fixes to reduce time complexity of resetting HTTP/2 streams. As a workaround users may limit the number of simultaneous HTTP/2 dreams for upstream and downstream peers to a low number, i.e. 100.",
      "CVE-2021-32779": "Envoy is an open source L7 proxy and communication bus designed for large modern service oriented architectures. In affected versions envoy incorrectly handled a URI '#fragment' element as part of the path element. Envoy is configured with an RBAC filter for authorization or similar mechanism with an explicit case of a final \"/admin\" path element, or is using a negative assertion with final path element of \"/admin\". The client sends request to \"/app1/admin#foo\". In Envoy prior to 1.18.0, or 1.18.0+ configured with path_normalization=false. Envoy treats fragment as a suffix of the query string when present, or as a suffix of the path when query string is absent, so it evaluates the final path element as \"/admin#foo\" and mismatches with the configured \"/admin\" path element. In Envoy 1.18.0+ configured with path_normalization=true. Envoy transforms this to /app1/admin%23foo and mismatches with the configured /admin prefix. The resulting URI is sent to the next server-agent with the offending \"#foo\" fragment which violates RFC3986 or with the nonsensical \"%23foo\" text appended. A specifically constructed request with URI containing '#fragment' element delivered by an untrusted client in the presence of path based request authorization resulting in escalation of Privileges when path based request authorization extensions. Envoy versions 1.19.1, 1.18.4, 1.17.4, 1.16.5 contain fixes that removes fragment from URI path in incoming requests.",
      "CVE-2021-32781": "Envoy is an open source L7 proxy and communication bus designed for large modern service oriented architectures. In affected versions after Envoy sends a locally generated response it must stop further processing of request or response data. However when local response is generated due the internal buffer overflow while request or response is processed by the filter chain the operation may not be stopped completely and result in accessing a freed memory block. A specifically constructed request delivered by an untrusted downstream or upstream peer in the presence of extensions that modify and increase the size of request or response bodies resulting in a Denial of Service when using extensions that modify and increase the size of request or response bodies, such as decompressor filter. Envoy versions 1.19.1, 1.18.4, 1.17.4, 1.16.5 contain fixes to address incomplete termination of request processing after locally generated response. As a workaround disable Envoy's decompressor, json-transcoder or grpc-web extensions or proprietary extensions that modify and increase the size of request or response bodies, if feasible."
    }
  },
  {
    "name": "exim-4.94.2",
    "pname": "exim",
    "version": "4.94.2",
    "affected_by": [
      "CVE-2021-38371"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-38371": 7.5
    },
    "maintainers": [
      {
        "github": "4z3",
        "email": "tv@krebsco.de"
      },
      {
        "github": "ajs124",
        "email": "nix@ajs124.de"
      },
      {
        "github": "dasJ",
        "email": "janne@hess.ooo"
      }
    ],
    "description": {
      "CVE-2021-38371": "The STARTTLS feature in Exim through 4.94.2 allows response injection (buffering) during MTA SMTP sending."
    }
  },
  {
    "name": "exiv2-0.27.4",
    "pname": "exiv2",
    "version": "0.27.4",
    "affected_by": [
      "CVE-2021-32815",
      "CVE-2021-34334",
      "CVE-2021-34335",
      "CVE-2021-37615",
      "CVE-2021-37616",
      "CVE-2021-37618",
      "CVE-2021-37619",
      "CVE-2021-37620",
      "CVE-2021-37621",
      "CVE-2021-37622",
      "CVE-2021-37623"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-32815": 5.5,
      "CVE-2021-34334": 5.5,
      "CVE-2021-34335": 5.5,
      "CVE-2021-37615": 5.5,
      "CVE-2021-37616": 5.5,
      "CVE-2021-37618": 5.5,
      "CVE-2021-37619": 5.5,
      "CVE-2021-37620": 5.5,
      "CVE-2021-37621": 5.5,
      "CVE-2021-37622": 5.5,
      "CVE-2021-37623": 5.5
    },
    "maintainers": [],
    "description": {
      "CVE-2021-32815": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. The assertion failure is triggered when Exiv2 is used to modify the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when modifying the metadata, which is a less frequently used Exiv2 operation than reading the metadata. For example, to trigger the bug in the Exiv2 command-line application, you need to add an extra command-line argument such as `fi`. ### Patches The bug is fixed in version v0.27.5. ### References Regression test and bug fix: #1739 ### For more information Please see our [security policy](https://github.com/Exiv2/exiv2/security/policy) for information about Exiv2 security.",
      "CVE-2021-34334": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An infinite loop is triggered when Exiv2 is used to read the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. The bug is fixed in version v0.27.5.",
      "CVE-2021-34335": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. A floating point exception (FPE) due to an integer divide by zero was found in Exiv2 versions v0.27.4 and earlier. The FPE is triggered when Exiv2 is used to print the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when printing the interpreted (translated) data, which is a less frequently used Exiv2 operation that requires an extra command line option (`-p t` or `-P t`). The bug is fixed in version v0.27.5.",
      "CVE-2021-37615": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. A null pointer dereference was found in Exiv2 versions v0.27.4 and earlier. The null pointer dereference is triggered when Exiv2 is used to print the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when printing the interpreted (translated) data, which is a less frequently used Exiv2 operation that requires an extra command line option (`-p t` or `-P t`). The bug is fixed in version v0.27.5.",
      "CVE-2021-37616": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. A null pointer dereference was found in Exiv2 versions v0.27.4 and earlier. The null pointer dereference is triggered when Exiv2 is used to print the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when printing the interpreted (translated) data, which is a less frequently used Exiv2 operation that requires an extra command line option (`-p t` or `-P t`). The bug is fixed in version v0.27.5.",
      "CVE-2021-37618": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An out-of-bounds read was found in Exiv2 versions v0.27.4 and earlier. The out-of-bounds read is triggered when Exiv2 is used to print the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when printing the image ICC profile, which is a less frequently used Exiv2 operation that requires an extra command line option (`-p C`). The bug is fixed in version v0.27.5.",
      "CVE-2021-37619": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An out-of-bounds read was found in Exiv2 versions v0.27.4 and earlier. The out-of-bounds read is triggered when Exiv2 is used to write metadata into a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service by crashing Exiv2, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when writing the metadata, which is a less frequently used Exiv2 operation than reading the metadata. For example, to trigger the bug in the Exiv2 command-line application, you need to add an extra command-line argument such as insert. The bug is fixed in version v0.27.5.",
      "CVE-2021-37620": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An out-of-bounds read was found in Exiv2 versions v0.27.4 and earlier. The out-of-bounds read is triggered when Exiv2 is used to read the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. The bug is fixed in version v0.27.5.",
      "CVE-2021-37621": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An infinite loop was found in Exiv2 versions v0.27.4 and earlier. The infinite loop is triggered when Exiv2 is used to print the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when printing the image ICC profile, which is a less frequently used Exiv2 operation that requires an extra command line option (`-p C`). The bug is fixed in version v0.27.5.",
      "CVE-2021-37622": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An infinite loop was found in Exiv2 versions v0.27.4 and earlier. The infinite loop is triggered when Exiv2 is used to modify the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when deleting the IPTC data, which is a less frequently used Exiv2 operation that requires an extra command line option (`-d I rm`). The bug is fixed in version v0.27.5.",
      "CVE-2021-37623": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An infinite loop was found in Exiv2 versions v0.27.4 and earlier. The infinite loop is triggered when Exiv2 is used to modify the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when deleting the IPTC data, which is a less frequently used Exiv2 operation that requires an extra command line option (`-d I rm`). The bug is fixed in version v0.27.5."
    }
  },
  {
    "name": "fetchmail-6.4.21",
    "pname": "fetchmail",
    "version": "6.4.21",
    "affected_by": [
      "CVE-2021-39272"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-39272": 5.9
    },
    "maintainers": [
      {
        "github": "peti",
        "email": "simons@cryp.to"
      }
    ],
    "description": {
      "CVE-2021-39272": "Fetchmail before 6.4.22 fails to enforce STARTTLS session encryption in some circumstances, such as a certain situation with IMAP and PREAUTH."
    }
  },
  {
    "name": "ffmpeg-4.4",
    "pname": "ffmpeg",
    "version": "4.4",
    "affected_by": [
      "CVE-2021-38171",
      "CVE-2021-38291"
    ],
    "whitelisted": [
      "CVE-2021-33815",
      "CVE-2021-38114"
    ],
    "cvssv3_basescore": {
      "CVE-2021-33815": 8.8,
      "CVE-2021-38114": 5.5,
      "CVE-2021-38171": 9.8,
      "CVE-2021-38291": 7.5
    },
    "maintainers": [
      {
        "github": "codyopel",
        "email": "codyopel@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-33815": "dwa_uncompress in libavcodec/exr.c in FFmpeg 4.4 allows an out-of-bounds array access because dc_count is not strictly checked.",
      "CVE-2021-38114": "libavcodec/dnxhddec.c in FFmpeg 4.4 does not check the return value of the init_vlc function, a similar issue to CVE-2013-0868.",
      "CVE-2021-38171": "adts_decode_extradata in libavformat/adtsenc.c in FFmpeg 4.4 does not check the init_get_bits return value, which is a necessary step because the second argument to init_get_bits can be crafted.",
      "CVE-2021-38291": "FFmpeg version (git commit de8e6e67e7523e48bb27ac224a0b446df05e1640) suffers from a an assertion failure at src/libavutil/mathematics.c."
    }
  },
  {
    "name": "gitlab-14.2.3",
    "pname": "gitlab",
    "version": "14.2.3",
    "affected_by": [
      "CVE-2021-22196",
      "CVE-2021-22197",
      "CVE-2021-22198",
      "CVE-2021-22200",
      "CVE-2021-22201",
      "CVE-2021-32823"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-22196": 5.4,
      "CVE-2021-22197": 4.3,
      "CVE-2021-22198": 4.3,
      "CVE-2021-22200": 7.5,
      "CVE-2021-22201": 6.5,
      "CVE-2021-32823": 3.7
    },
    "maintainers": [
      {
        "github": "fpletz",
        "email": "fpletz@fnordicwalking.de"
      },
      {
        "github": "globin",
        "email": "mail@glob.in"
      },
      {
        "github": "krav",
        "email": "kristoffer@microdisko.no"
      },
      {
        "github": "talyz",
        "email": "kim.lindberger@gmail.com"
      },
      {
        "github": "yu-re-ka",
        "email": "yuka@yuka.dev"
      }
    ],
    "description": {
      "CVE-2021-22196": "An issue has been discovered in GitLab CE/EE affecting all versions starting from 13.4. It was possible to exploit a stored cross-site-scripting in merge request via a specifically crafted branch name.",
      "CVE-2021-22197": "An issue has been discovered in GitLab CE/EE affecting all versions starting from 10.6 where an infinite loop exist when an authenticated user with specific rights access a MR having source and target branch pointing to each other",
      "CVE-2021-22198": "An issue has been discovered in GitLab CE/EE affecting all versions from 13.8 and above allowing an authenticated user to delete incident metric images of public projects.",
      "CVE-2021-22200": "An issue has been discovered in GitLab CE/EE affecting all versions starting with 12.6. Under a special condition it was possible to access data of an internal repository through a public project fork as an anonymous user.",
      "CVE-2021-22201": "An issue has been discovered in GitLab CE/EE affecting all versions starting from 13.9. A specially crafted import file could read files on the server.",
      "CVE-2021-32823": "In the bindata RubyGem before version 2.4.10 there is a potential denial-of-service vulnerability. In affected versions it is very slow for certain classes in BinData to be created. For example BinData::Bit100000, BinData::Bit100001, BinData::Bit100002, BinData::Bit<N>. In combination with <user_input>.constantize there is a potential for a CPU-based DoS. In version 2.4.10 bindata improved the creation time of Bits and Integers."
    }
  },
  {
    "name": "glibc-2.33-49",
    "pname": "glibc",
    "version": "2.33-49",
    "affected_by": [
      "CVE-2021-38604"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-38604": 7.5
    },
    "maintainers": [
      {
        "github": "edolstra",
        "email": "edolstra+nixpkgs@gmail.com"
      },
      {
        "github": "ma27",
        "email": "maximilian@mbosch.me"
      },
      {
        "github": "edolstra",
        "email": "edolstra+nixpkgs@gmail.com"
      },
      {
        "github": "ma27",
        "email": "maximilian@mbosch.me"
      }
    ],
    "description": {
      "CVE-2021-38604": "In librt in the GNU C Library (aka glibc) through 2.34, sysdeps/unix/sysv/linux/mq_notify.c mishandles certain NOTIFY_REMOVED data, leading to a NULL pointer dereference. NOTE: this vulnerability was introduced as a side effect of the CVE-2021-33574 fix."
    }
  },
  {
    "name": "gnome-shell-40.4",
    "pname": "gnome-shell",
    "version": "40.4",
    "affected_by": [
      "CVE-2019-3820"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2019-3820": 4.3
    },
    "maintainers": [
      {
        "github": "hedning",
        "email": "torhedinbronner@gmail.com"
      },
      {
        "github": "jtojnar",
        "email": "jtojnar@gmail.com"
      },
      {
        "github": "dasj19",
        "email": "daniel@serbanescu.dk"
      },
      {
        "github": "maxeaubrey",
        "email": "maxeaubrey@gmail.com"
      }
    ],
    "description": {
      "CVE-2019-3820": "It was discovered that the gnome-shell lock screen since version 3.15.91 did not properly restrict all contextual actions. An attacker with physical access to a locked workstation could invoke certain keyboard shortcuts, and potentially other actions."
    }
  },
  {
    "name": "go-1.15.15",
    "pname": "go",
    "version": "1.15.15",
    "affected_by": [
      "CVE-2021-29923"
    ],
    "whitelisted": [
      "CVE-2021-34558"
    ],
    "cvssv3_basescore": {
      "CVE-2021-29923": 7.5,
      "CVE-2021-34558": 6.5
    },
    "maintainers": [
      {
        "github": "c00w",
        "email": "nix@daedrum.net"
      },
      {
        "github": "cstrahan",
        "email": "charles@cstrahan.com"
      },
      {
        "github": "Frostman",
        "email": "me@slukjanov.name"
      },
      {
        "github": "kalbasit",
        "email": "wael.nasreddine@gmail.com"
      },
      {
        "github": "mdlayher",
        "email": "mdlayher@gmail.com"
      },
      {
        "github": "mic92",
        "email": "joerg@thalheim.io"
      },
      {
        "github": "orivej",
        "email": "orivej@gmx.fr"
      },
      {
        "github": "rvolosatovs",
        "email": "rvolosatovs@riseup.net"
      },
      {
        "github": "zowoq",
        "email": "59103226+zowoq@users.noreply.github.com"
      }
    ],
    "description": {
      "CVE-2021-29923": "Go before 1.17 does not properly consider extraneous zero characters at the beginning of an IP address octet, which (in some situations) allows attackers to bypass access control that is based on IP addresses, because of unexpected octal interpretation. This affects net.ParseIP and net.ParseCIDR.",
      "CVE-2021-34558": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic."
    }
  },
  {
    "name": "go-1.16.8",
    "pname": "go",
    "version": "1.16.8",
    "affected_by": [
      "CVE-2021-29923"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-29923": 7.5
    },
    "maintainers": [
      {
        "github": "c00w",
        "email": "nix@daedrum.net"
      },
      {
        "github": "cstrahan",
        "email": "charles@cstrahan.com"
      },
      {
        "github": "Frostman",
        "email": "me@slukjanov.name"
      },
      {
        "github": "kalbasit",
        "email": "wael.nasreddine@gmail.com"
      },
      {
        "github": "mdlayher",
        "email": "mdlayher@gmail.com"
      },
      {
        "github": "mic92",
        "email": "joerg@thalheim.io"
      },
      {
        "github": "orivej",
        "email": "orivej@gmx.fr"
      },
      {
        "github": "rvolosatovs",
        "email": "rvolosatovs@riseup.net"
      },
      {
        "github": "zowoq",
        "email": "59103226+zowoq@users.noreply.github.com"
      }
    ],
    "description": {
      "CVE-2021-29923": "Go before 1.17 does not properly consider extraneous zero characters at the beginning of an IP address octet, which (in some situations) allows attackers to bypass access control that is based on IP addresses, because of unexpected octal interpretation. This affects net.ParseIP and net.ParseCIDR."
    }
  },
  {
    "name": "gpac-1.0.1",
    "pname": "gpac",
    "version": "1.0.1",
    "affected_by": [
      "CVE-2021-21834",
      "CVE-2021-21835",
      "CVE-2021-21836",
      "CVE-2021-21837",
      "CVE-2021-21838",
      "CVE-2021-21839",
      "CVE-2021-21840",
      "CVE-2021-21841",
      "CVE-2021-21842",
      "CVE-2021-21843",
      "CVE-2021-21844",
      "CVE-2021-21845",
      "CVE-2021-21846",
      "CVE-2021-21847",
      "CVE-2021-21848",
      "CVE-2021-21849",
      "CVE-2021-21850",
      "CVE-2021-21851",
      "CVE-2021-21852",
      "CVE-2021-21853",
      "CVE-2021-21854",
      "CVE-2021-21855",
      "CVE-2021-21856",
      "CVE-2021-21857",
      "CVE-2021-21858",
      "CVE-2021-21859",
      "CVE-2021-21860",
      "CVE-2021-21861",
      "CVE-2021-21862",
      "CVE-2021-32437",
      "CVE-2021-32438",
      "CVE-2021-32439",
      "CVE-2021-32440"
    ],
    "whitelisted": [
      "CVE-2020-23930",
      "CVE-2020-35979",
      "CVE-2020-35980",
      "CVE-2020-35981",
      "CVE-2020-35982",
      "CVE-2021-29279",
      "CVE-2021-30014",
      "CVE-2021-30015",
      "CVE-2021-30019",
      "CVE-2021-30020",
      "CVE-2021-30022",
      "CVE-2021-30199",
      "CVE-2021-31254",
      "CVE-2021-31255",
      "CVE-2021-31256",
      "CVE-2021-31257",
      "CVE-2021-31258",
      "CVE-2021-31259",
      "CVE-2021-31260",
      "CVE-2021-31261",
      "CVE-2021-31262",
      "CVE-2021-36584"
    ],
    "cvssv3_basescore": {
      "CVE-2020-23930": 5.5,
      "CVE-2020-35979": 7.8,
      "CVE-2020-35980": 7.8,
      "CVE-2020-35981": 7.8,
      "CVE-2020-35982": 7.8,
      "CVE-2021-21834": 8.8,
      "CVE-2021-21835": 8.8,
      "CVE-2021-21836": 8.8,
      "CVE-2021-21837": 8.8,
      "CVE-2021-21838": 8.8,
      "CVE-2021-21839": 8.8,
      "CVE-2021-21840": 8.8,
      "CVE-2021-21841": 8.8,
      "CVE-2021-21842": 8.8,
      "CVE-2021-21843": 8.8,
      "CVE-2021-21844": 8.8,
      "CVE-2021-21845": 8.8,
      "CVE-2021-21846": 8.8,
      "CVE-2021-21847": 8.8,
      "CVE-2021-21848": 8.8,
      "CVE-2021-21849": 8.8,
      "CVE-2021-21850": 8.8,
      "CVE-2021-21851": 8.8,
      "CVE-2021-21852": 8.8,
      "CVE-2021-21853": 8.8,
      "CVE-2021-21854": 8.8,
      "CVE-2021-21855": 8.8,
      "CVE-2021-21856": 8.8,
      "CVE-2021-21857": 8.8,
      "CVE-2021-21858": 8.8,
      "CVE-2021-21859": 8.8,
      "CVE-2021-21860": 8.8,
      "CVE-2021-21861": 8.8,
      "CVE-2021-21862": 7.8,
      "CVE-2021-29279": 7.8,
      "CVE-2021-30014": 5.5,
      "CVE-2021-30015": 5.5,
      "CVE-2021-30019": 5.5,
      "CVE-2021-30020": 5.5,
      "CVE-2021-30022": 5.5,
      "CVE-2021-30199": 5.5,
      "CVE-2021-31254": 7.8,
      "CVE-2021-31255": 7.8,
      "CVE-2021-31256": 5.5,
      "CVE-2021-31257": 5.5,
      "CVE-2021-31258": 5.5,
      "CVE-2021-31259": 5.5,
      "CVE-2021-31260": 5.5,
      "CVE-2021-31261": 5.5,
      "CVE-2021-31262": 5.5,
      "CVE-2021-32437": 5.5,
      "CVE-2021-32438": 5.5,
      "CVE-2021-32439": 7.8,
      "CVE-2021-32440": 5.5,
      "CVE-2021-36584": 5.5
    },
    "maintainers": [
      {
        "github": "bluescreen303",
        "email": "mathijs@bluescreen303.nl"
      },
      {
        "github": "mgdelacroix",
        "email": "mgdelacroix@gmail.com"
      }
    ],
    "description": {
      "CVE-2020-23930": "An issue was discovered in gpac through 20200801. A NULL pointer dereference exists in the function nhmldump_send_header located in write_nhml.c. It allows an attacker to cause Denial of Service.",
      "CVE-2020-35979": "An issue was discovered in GPAC version 0.8.0 and 1.0.1. There is heap-based buffer overflow in the function gp_rtp_builder_do_avc() in ietf/rtp_pck_mpeg4.c.",
      "CVE-2020-35980": "An issue was discovered in GPAC version 0.8.0 and 1.0.1. There is a use-after-free in the function gf_isom_box_del() in isomedia/box_funcs.c.",
      "CVE-2020-35981": "An issue was discovered in GPAC version 0.8.0 and 1.0.1. There is an invalid pointer dereference in the function SetupWriters() in isomedia/isom_store.c.",
      "CVE-2020-35982": "An issue was discovered in GPAC version 0.8.0 and 1.0.1. There is an invalid pointer dereference in the function gf_hinter_track_finalize() in media_tools/isom_hinter.c.",
      "CVE-2021-21834": "An exploitable integer overflow vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input when decoding the atom for the “co64” FOURCC can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21835": "An exploitable integer overflow vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input when decoding the atom associated with the “csgp” FOURCC can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21836": "An exploitable integer overflow vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input using the “ctts” FOURCC code can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21837": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21838": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21839": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21840": "An exploitable integer overflow vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input used to process an atom using the “saio” FOURCC code cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21841": "An exploitable integer overflow vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input when reading an atom using the 'sbgp' FOURCC code can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21842": "An exploitable integer overflow vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow when processing an atom using the 'ssix' FOURCC code, due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21843": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. After validating the number of ranges, at [41] the library will multiply the count by the size of the GF_SubsegmentRangeInfo structure. On a 32-bit platform, this multiplication can result in an integer overflow causing the space of the array being allocated to be less than expected. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21844": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input when encountering an atom using the “stco” FOURCC code, can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21845": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input in “stsc” decoder can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21846": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input in “stsz” decoder can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21847": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input in “stts” decoder can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21848": "An exploitable integer overflow vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. The library will actually reuse the parser for atoms with the “stsz” FOURCC code when parsing atoms that use the “stz2” FOURCC code and can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21849": "An exploitable integer overflow vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow when the library encounters an atom using the “tfra” FOURCC code due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21850": "An exploitable integer overflow vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow when the library encounters an atom using the “trun” FOURCC code due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21851": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input at “csgp” decoder sample group description indices can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21852": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input at “stss” decoder can cause an integer overflow due to unchecked arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21853": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked addition arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21854": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked addition arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21855": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked addition arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21856": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked addition arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21857": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked addition arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21858": "Multiple exploitable integer overflow vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an integer overflow due to unchecked addition arithmetic resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21859": "An exploitable integer truncation vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. The stri_box_read function is used when processing atoms using the 'stri' FOURCC code. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21860": "An exploitable integer truncation vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an improper memory allocation resulting in a heap-based buffer overflow that causes memory corruption. The FOURCC code, 'trik', is parsed by the function within the library. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21861": "An exploitable integer truncation vulnerability exists within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. When processing the 'hdlr' FOURCC code, a specially crafted MPEG-4 input can cause an improper memory allocation resulting in a heap-based buffer overflow that causes memory corruption. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-21862": "Multiple exploitable integer truncation vulnerabilities exist within the MPEG-4 decoding functionality of the GPAC Project on Advanced Content library v1.0.1. A specially crafted MPEG-4 input can cause an improper memory allocation resulting in a heap-based buffer overflow that causes memory corruption The implementation of the parser used for the “Xtra” FOURCC code is handled. An attacker can convince a user to open a video to trigger this vulnerability.",
      "CVE-2021-29279": "There is a integer overflow in function filter_core/filter_props.c:gf_props_assign_value in GPAC 1.0.1. In which, the arg const GF_PropertyValue *value,maybe value->value.data.size is a negative number. In result, memcpy in gf_props_assign_value failed.",
      "CVE-2021-30014": "There is a integer overflow in media_tools/av_parsers.c in the hevc_parse_slice_segment function in GPAC 1.0.1 which results in a crash.",
      "CVE-2021-30015": "There is a Null Pointer Dereference in function filter_core/filter_pck.c:gf_filter_pck_new_alloc_internal in GPAC 1.0.1. The pid comes from function av1dmx_parse_flush_sample, the ctx.opid maybe NULL. The result is a crash in gf_filter_pck_new_alloc_internal.",
      "CVE-2021-30019": "In the adts_dmx_process function in filters/reframe_adts.c in GPAC 1.0.1, a crafted file may cause ctx->hdr.frame_size to be smaller than ctx->hdr.hdr_size, resulting in size to be a negative number and a heap overflow in the memcpy.",
      "CVE-2021-30020": "In the function gf_hevc_read_pps_bs_internal function in media_tools/av_parsers.c in GPAC 1.0.1 there is a loop, which with crafted file, pps->num_tile_columns may be larger than sizeof(pps->column_width), which results in a heap overflow in the loop.",
      "CVE-2021-30022": "There is a integer overflow in media_tools/av_parsers.c in the gf_avc_read_pps_bs_internal in GPAC 1.0.1. pps_id may be a negative number, so it will not return. However, avc->pps only has 255 unit, so there is an overflow, which results a crash.",
      "CVE-2021-30199": "In filters/reframe_latm.c in GPAC 1.0.1 there is a Null Pointer Dereference, when gf_filter_pck_get_data is called. The first arg pck may be null with a crafted mp4 file,which results in a crash.",
      "CVE-2021-31254": "Buffer overflow in the tenc_box_read function in MP4Box in GPAC 1.0.1 allows attackers to cause a denial of service or execute arbitrary code via a crafted file, related invalid IV sizes.",
      "CVE-2021-31255": "Buffer overflow in the abst_box_read function in MP4Box in GPAC 1.0.1 allows attackers to cause a denial of service or execute arbitrary code via a crafted file.",
      "CVE-2021-31256": "Memory leak in the stbl_GetSampleInfos function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.",
      "CVE-2021-31257": "The HintFile function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-31258": "The gf_isom_set_extraction_slc function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-31259": "The gf_isom_cenc_get_default_info_internal function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-31260": "The MergeTrack function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-31261": "The gf_hinter_track_new function in GPAC 1.0.1 allows attackers to read memory via a crafted file in the MP4Box command.",
      "CVE-2021-31262": "The AV1_DuplicateConfig function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-32437": "The gf_hinter_finalize function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-32438": "The gf_media_export_filters function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-32439": "Buffer overflow in the stbl_AppendSize function in MP4Box in GPAC 1.0.1 allows attackers to cause a denial of service or execute arbitrary code via a crafted file.",
      "CVE-2021-32440": "The Media_RewriteODFrame function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
      "CVE-2021-36584": "An issue was discovered in GPAC 1.0.1. There is a heap-based buffer overflow in the function gp_rtp_builder_do_tx3g function in ietf/rtp_pck_3gpp.c, as demonstrated by MP4Box. This can cause a denial of service (DOS)."
    }
  },
  {
    "name": "grilo-0.3.13",
    "pname": "grilo",
    "version": "0.3.13",
    "affected_by": [
      "CVE-2021-39365"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-39365": 5.9
    },
    "maintainers": [
      {
        "github": "hedning",
        "email": "torhedinbronner@gmail.com"
      },
      {
        "github": "jtojnar",
        "email": "jtojnar@gmail.com"
      },
      {
        "github": "dasj19",
        "email": "daniel@serbanescu.dk"
      },
      {
        "github": "maxeaubrey",
        "email": "maxeaubrey@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-39365": "In GNOME grilo though 0.3.13, grl-net-wc.c does not enable TLS certificate verification on the SoupSessionAsync objects it creates, leaving users vulnerable to network MITM attacks. NOTE: this is similar to CVE-2016-20011."
    }
  },
  {
    "name": "haproxy-2.3.13",
    "pname": "haproxy",
    "version": "2.3.13",
    "affected_by": [
      "CVE-2021-40346"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-40346": 7.5
    },
    "maintainers": [
      {
        "github": null,
        "email": "hacking+nixos@babibo.de"
      }
    ],
    "description": {
      "CVE-2021-40346": "An integer overflow exists in HAProxy 2.0 through 2.5 in htx_add_header that can be exploited to perform an HTTP request smuggling attack, allowing an attacker to bypass all configured http-request HAProxy ACLs and possibly other ACLs."
    }
  },
  {
    "name": "jitsi-meet-1.0.5307",
    "pname": "jitsi-meet",
    "version": "1.0.5307",
    "affected_by": [
      "CVE-2021-33506"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-33506": 7.5
    },
    "maintainers": [
      {
        "github": "petabyteboy",
        "email": "milan@petabyte.dev"
      },
      {
        "github": "ryantm",
        "email": "ryan@ryantm.com"
      },
      {
        "github": "yu-re-ka",
        "email": "yuka@yuka.dev"
      }
    ],
    "description": {
      "CVE-2021-33506": "jitsi-meet-prosody in Jitsi Meet before 2.0.5963-1 does not ensure that restrict_room_creation is set by default. This can allow an attacker to circumvent conference moderation."
    }
  },
  {
    "name": "kitty-0.23.1",
    "pname": "kitty",
    "version": "0.23.1",
    "affected_by": [
      "CVE-2016-2563"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2016-2563": 9.8
    },
    "maintainers": [
      {
        "github": "tex",
        "email": "milan.svoboda@centrum.cz"
      },
      {
        "github": "rvolosatovs",
        "email": "rvolosatovs@riseup.net"
      },
      {
        "github": "Luflosi",
        "email": "luflosi@luflosi.de"
      }
    ],
    "description": {
      "CVE-2016-2563": "Stack-based buffer overflow in the SCP command-line utility in PuTTY before 0.67 and KiTTY 0.66.6.3 and earlier allows remote servers to cause a denial of service (stack memory corruption) or execute arbitrary code via a crafted SCP-SINK file-size response to an SCP download request."
    }
  },
  {
    "name": "kubernetes-1.22.1",
    "pname": "kubernetes",
    "version": "1.22.1",
    "affected_by": [
      "CVE-2020-2307",
      "CVE-2020-2308",
      "CVE-2020-2309"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2020-2307": 4.3,
      "CVE-2020-2308": 4.3,
      "CVE-2020-2309": 4.3
    },
    "maintainers": [
      {
        "github": "johanot",
        "email": "write@ownrisk.dk"
      },
      {
        "github": "offlinehacker",
        "email": "jaka@x-truder.net"
      },
      {
        "github": "saschagrunert",
        "email": "mail@saschagrunert.de"
      }
    ],
    "description": {
      "CVE-2020-2307": "Jenkins Kubernetes Plugin 1.27.3 and earlier allows low-privilege users to access possibly sensitive Jenkins controller environment variables.",
      "CVE-2020-2308": "A missing permission check in Jenkins Kubernetes Plugin 1.27.3 and earlier allows attackers with Overall/Read permission to list global pod template names.",
      "CVE-2020-2309": "A missing/An incorrect permission check in Jenkins Kubernetes Plugin 1.27.3 and earlier allows attackers with Overall/Read permission to enumerate credentials IDs of credentials stored in Jenkins."
    }
  },
  {
    "name": "libgcrypt-1.9.3",
    "pname": "libgcrypt",
    "version": "1.9.3",
    "affected_by": [
      "CVE-2021-40528"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-40528": 5.9
    },
    "maintainers": [
      {
        "github": "vrthra",
        "email": "rahul@gopinath.org"
      }
    ],
    "description": {
      "CVE-2021-40528": "The ElGamal implementation in Libgcrypt before 1.9.4 allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP."
    }
  },
  {
    "name": "libgda-5.2.10",
    "pname": "libgda",
    "version": "5.2.10",
    "affected_by": [
      "CVE-2021-39359"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-39359": 5.9
    },
    "maintainers": [
      {
        "github": "hedning",
        "email": "torhedinbronner@gmail.com"
      },
      {
        "github": "jtojnar",
        "email": "jtojnar@gmail.com"
      },
      {
        "github": "dasj19",
        "email": "daniel@serbanescu.dk"
      },
      {
        "github": "maxeaubrey",
        "email": "maxeaubrey@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-39359": "In GNOME libgda through 6.0.0, gda-web-provider.c does not enable TLS certificate verification on the SoupSessionSync objects it creates, leaving users vulnerable to network MITM attacks. NOTE: this is similar to CVE-2016-20011."
    }
  },
  {
    "name": "libgda-6.0.0",
    "pname": "libgda",
    "version": "6.0.0",
    "affected_by": [
      "CVE-2021-39359"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-39359": 5.9
    },
    "maintainers": [
      {
        "github": "hedning",
        "email": "torhedinbronner@gmail.com"
      },
      {
        "github": "jtojnar",
        "email": "jtojnar@gmail.com"
      },
      {
        "github": "dasj19",
        "email": "daniel@serbanescu.dk"
      },
      {
        "github": "maxeaubrey",
        "email": "maxeaubrey@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-39359": "In GNOME libgda through 6.0.0, gda-web-provider.c does not enable TLS certificate verification on the SoupSessionSync objects it creates, leaving users vulnerable to network MITM attacks. NOTE: this is similar to CVE-2016-20011."
    }
  },
  {
    "name": "libspf2-1.2.10",
    "pname": "libspf2",
    "version": "1.2.10",
    "affected_by": [
      "CVE-2021-20314"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-20314": 9.8
    },
    "maintainers": [
      {
        "github": "pacien",
        "email": "b4gx3q.nixpkgs@pacien.net"
      }
    ],
    "description": {
      "CVE-2021-20314": "Stack buffer overflow in libspf2 versions below 1.2.11 when processing certain SPF macros can lead to Denial of service and potentially code execution via malicious crafted SPF explanation messages."
    }
  },
  {
    "name": "libssh-0.8.9",
    "pname": "libssh",
    "version": "0.8.9",
    "affected_by": [
      "CVE-2021-3634"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-3634": 6.5
    },
    "maintainers": [
      {
        "github": "svanderburg",
        "email": "s.vanderburg@tudelft.nl"
      }
    ],
    "description": {
      "CVE-2021-3634": "A flaw has been found in libssh in versions prior to 0.9.6. The SSH protocol keeps track of two shared secrets during the lifetime of the session. One of them is called secret_hash and the other session_id. Initially, both of them are the same, but after key re-exchange, previous session_id is kept and used as an input to new secret_hash. Historically, both of these buffers had shared length variable, which worked as long as these buffers were same. But the key re-exchange operation can also change the key exchange method, which can be based on hash of different size, eventually creating \"secret_hash\" of different size than the session_id has. This becomes an issue when the session_id memory is zeroed or when it is used again during second key re-exchange."
    }
  },
  {
    "name": "libzapojit-0.0.3",
    "pname": "libzapojit",
    "version": "0.0.3",
    "affected_by": [
      "CVE-2021-39360"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-39360": 5.9
    },
    "maintainers": [
      {
        "github": "hedning",
        "email": "torhedinbronner@gmail.com"
      },
      {
        "github": "jtojnar",
        "email": "jtojnar@gmail.com"
      },
      {
        "github": "dasj19",
        "email": "daniel@serbanescu.dk"
      },
      {
        "github": "maxeaubrey",
        "email": "maxeaubrey@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-39360": "In GNOME libzapojit through 0.0.3, zpj-skydrive.c does not enable TLS certificate verification on the SoupSessionSync objects it creates, leaving users vulnerable to network MITM attacks. NOTE: this is similar to CVE-2016-20011."
    }
  },
  {
    "name": "live555-2019.11.22",
    "pname": "live555",
    "version": "2019.11.22",
    "affected_by": [
      "CVE-2021-38380",
      "CVE-2021-38381",
      "CVE-2021-38382"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-38380": 7.5,
      "CVE-2021-38381": 6.5,
      "CVE-2021-38382": 6.5
    },
    "maintainers": [],
    "description": {
      "CVE-2021-38380": "Live555 through 1.08 mishandles huge requests for the same MP3 stream, leading to recursion and s stack-based buffer over-read. An attacker can leverage this to launch a DoS attack.",
      "CVE-2021-38381": "Live555 through 1.08 does not handle MPEG-1 or 2 files properly. Sending two successive RTSP SETUP commands for the same track causes a Use-After-Free and daemon crash.",
      "CVE-2021-38382": "Live555 through 1.08 does not handle Matroska and Ogg files properly. Sending two successive RTSP SETUP commands for the same track causes a Use-After-Free and daemon crash."
    }
  },
  {
    "name": "nomad-1.0.10",
    "pname": "nomad",
    "version": "1.0.10",
    "affected_by": [
      "CVE-2021-37218"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-37218": 8.8
    },
    "maintainers": [
      {
        "github": "rushmorem",
        "email": "rushmore@webenchanter.com"
      },
      {
        "github": "pradeepchhetri",
        "email": "pradeep.chhetri89@gmail.com"
      },
      {
        "github": "endocrimes",
        "email": "dani@builds.terrible.systems"
      },
      {
        "github": "maxeaubrey",
        "email": "maxeaubrey@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-37218": "HashiCorp Nomad and Nomad Enterprise Raft RPC layer allows non-server agents with a valid certificate signed by the same CA to access server-only functionality, enabling privilege escalation. Fixed in 1.0.10 and 1.1.4."
    }
  },
  {
    "name": "openexr-2.5.7",
    "pname": "openexr",
    "version": "2.5.7",
    "affected_by": [
      "CVE-2021-3605"
    ],
    "whitelisted": [
      "CVE-2021-23169",
      "CVE-2021-23215",
      "CVE-2021-26260",
      "CVE-2021-26945",
      "CVE-2021-3598"
    ],
    "cvssv3_basescore": {
      "CVE-2021-3598": 5.5,
      "CVE-2021-3605": 5.5,
      "CVE-2021-23169": 8.8,
      "CVE-2021-23215": 5.5,
      "CVE-2021-26260": 5.5,
      "CVE-2021-26945": 5.5
    },
    "maintainers": [],
    "description": {
      "CVE-2021-3598": "There's a flaw in OpenEXR's ImfDeepScanLineInputFile functionality in versions prior to 3.0.5. An attacker who is able to submit a crafted file to an application linked with OpenEXR could cause an out-of-bounds read. The greatest risk from this flaw is to application availability.",
      "CVE-2021-3605": "There's a flaw in OpenEXR's rleUncompress functionality in versions prior to 3.0.5. An attacker who is able to submit a crafted file to an application linked with OpenEXR could cause an out-of-bounds read. The greatest risk from this flaw is to application availability.",
      "CVE-2021-23169": "A heap-buffer overflow was found in the copyIntoFrameBuffer function of OpenEXR in versions before 3.0.1. An attacker could use this flaw to execute arbitrary code with the permissions of the user running the application compiled against OpenEXR.",
      "CVE-2021-23215": "An integer overflow leading to a heap-buffer overflow was found in the DwaCompressor of OpenEXR in versions before 3.0.1. An attacker could use this flaw to crash an application compiled with OpenEXR.",
      "CVE-2021-26260": "An integer overflow leading to a heap-buffer overflow was found in the DwaCompressor of OpenEXR in versions before 3.0.1. An attacker could use this flaw to crash an application compiled with OpenEXR. This is a different flaw from CVE-2021-23215.",
      "CVE-2021-26945": "An integer overflow leading to a heap-buffer overflow was found in OpenEXR in versions before 3.0.1. An attacker could use this flaw to crash an application compiled with OpenEXR."
    }
  },
  {
    "name": "pjsip-2.10",
    "pname": "pjsip",
    "version": "2.10",
    "affected_by": [
      "CVE-2021-21375"
    ],
    "whitelisted": [
      "CVE-2020-15260",
      "CVE-2021-32686"
    ],
    "cvssv3_basescore": {
      "CVE-2020-15260": 6.8,
      "CVE-2021-21375": 6.5,
      "CVE-2021-32686": 5.9
    },
    "maintainers": [
      {
        "github": "olynch",
        "email": "owen@olynch.me"
      }
    ],
    "description": {
      "CVE-2020-15260": "PJSIP is a free and open source multimedia communication library written in C language implementing standard based protocols such as SIP, SDP, RTP, STUN, TURN, and ICE. In version 2.10 and earlier, PJSIP transport can be reused if they have the same IP address + port + protocol. However, this is insufficient for secure transport since it lacks remote hostname authentication. Suppose we have created a TLS connection to `sip.foo.com`, which has an IP address `100.1.1.1`. If we want to create a TLS connection to another hostname, say `sip.bar.com`, which has the same IP address, then it will reuse that existing connection, even though `100.1.1.1` does not have certificate to authenticate as `sip.bar.com`. The vulnerability allows for an insecure interaction without user awareness. It affects users who need access to connections to different destinations that translate to the same address, and allows man-in-the-middle attack if attacker can route a connection to another destination such as in the case of DNS spoofing.",
      "CVE-2021-21375": "PJSIP is a free and open source multimedia communication library written in C language implementing standard based protocols such as SIP, SDP, RTP, STUN, TURN, and ICE. In PJSIP version 2.10 and earlier, after an initial INVITE has been sent, when two 183 responses are received, with the first one causing negotiation failure, a crash will occur. This results in a denial of service.",
      "CVE-2021-32686": "PJSIP is a free and open source multimedia communication library written in C language implementing standard based protocols such as SIP, SDP, RTP, STUN, TURN, and ICE. In PJSIP before version 2.11.1, there are a couple of issues found in the SSL socket. First, a race condition between callback and destroy, due to the accepted socket having no group lock. Second, the SSL socket parent/listener may get destroyed during handshake. Both issues were reported to happen intermittently in heavy load TLS connections. They cause a crash, resulting in a denial of service. These are fixed in version 2.11.1."
    }
  },
  {
    "name": "plib-1.8.5",
    "pname": "plib",
    "version": "1.8.5",
    "affected_by": [
      "CVE-2021-38714"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-38714": 8.8
    },
    "maintainers": [],
    "description": {
      "CVE-2021-38714": "In Plib through 1.85, there is an integer overflow vulnerability that could result in arbitrary code execution. The vulnerability is found in ssgLoadTGA() function in src/ssg/ssgLoadTGA.cxx file."
    }
  },
  {
    "name": "pure-ftpd-1.0.49",
    "pname": "pure-ftpd",
    "version": "1.0.49",
    "affected_by": [
      "CVE-2021-40524"
    ],
    "whitelisted": [
      "CVE-2019-20176",
      "CVE-2020-9274",
      "CVE-2020-9365"
    ],
    "cvssv3_basescore": {
      "CVE-2019-20176": 7.5,
      "CVE-2020-9274": 7.5,
      "CVE-2020-9365": 7.5,
      "CVE-2021-40524": 7.5
    },
    "maintainers": [],
    "description": {
      "CVE-2019-20176": "In Pure-FTPd 1.0.49, a stack exhaustion issue was discovered in the listdir function in ls.c.",
      "CVE-2020-9274": "An issue was discovered in Pure-FTPd 1.0.49. An uninitialized pointer vulnerability has been detected in the diraliases linked list. When the *lookup_alias(const char alias) or print_aliases(void) function is called, they fail to correctly detect the end of the linked list and try to access a non-existent list member. This is related to init_aliases in diraliases.c.",
      "CVE-2020-9365": "An issue was discovered in Pure-FTPd 1.0.49. An out-of-bounds (OOB) read has been detected in the pure_strcmp function in utils.c.",
      "CVE-2021-40524": "In Pure-FTPd 1.0.49, an incorrect max_filesize quota mechanism in the server allows attackers to upload files of unbounded size, which may lead to denial of service or a server hang. This occurs because a certain greater-than-zero test does not anticipate an initial -1 value."
    }
  },
  {
    "name": "qemu-6.0.0",
    "pname": "qemu",
    "version": "6.0.0",
    "affected_by": [
      "CVE-2021-3682",
      "CVE-2021-3713"
    ],
    "whitelisted": [
      "CVE-2020-35503",
      "CVE-2021-3507",
      "CVE-2021-3527",
      "CVE-2021-3544",
      "CVE-2021-3545",
      "CVE-2021-3546"
    ],
    "cvssv3_basescore": {
      "CVE-2020-35503": 6.0,
      "CVE-2021-3507": 6.1,
      "CVE-2021-3527": 5.5,
      "CVE-2021-3544": 6.5,
      "CVE-2021-3545": 6.5,
      "CVE-2021-3546": 8.2,
      "CVE-2021-3682": 8.5,
      "CVE-2021-3713": 7.4
    },
    "maintainers": [
      {
        "github": "edolstra",
        "email": "edolstra+nixpkgs@gmail.com"
      },
      {
        "github": "alyssais",
        "email": "hi@alyssa.is"
      },
      {
        "github": "edolstra",
        "email": "edolstra+nixpkgs@gmail.com"
      },
      {
        "github": "alyssais",
        "email": "hi@alyssa.is"
      }
    ],
    "description": {
      "CVE-2020-35503": "A NULL pointer dereference flaw was found in the megasas-gen2 SCSI host bus adapter emulation of QEMU in versions before and including 6.0. This issue occurs in the megasas_command_cancelled() callback function while dropping a SCSI request. This flaw allows a privileged guest user to crash the QEMU process on the host, resulting in a denial of service. The highest threat from this vulnerability is to system availability.",
      "CVE-2021-3507": "A heap buffer overflow was found in the floppy disk emulator of QEMU up to 6.0.0 (including). It could occur in fdctrl_transfer_handler() in hw/block/fdc.c while processing DMA read data transfers from the floppy drive to the guest system. A privileged guest user could use this flaw to crash the QEMU process on the host resulting in DoS scenario, or potential information leakage from the host memory.",
      "CVE-2021-3527": "A flaw was found in the USB redirector device (usb-redir) of QEMU. Small USB packets are combined into a single, large transfer request, to reduce the overhead and improve performance. The combined size of the bulk transfer is used to dynamically allocate a variable length array (VLA) on the stack without proper validation. Since the total size is not bounded, a malicious guest could use this flaw to influence the array length and cause the QEMU process to perform an excessive allocation on the stack, resulting in a denial of service.",
      "CVE-2021-3544": "Several memory leaks were found in the virtio vhost-user GPU device (vhost-user-gpu) of QEMU in versions up to and including 6.0. They exist in contrib/vhost-user-gpu/vhost-user-gpu.c and contrib/vhost-user-gpu/virgl.c due to improper release of memory (i.e., free) after effective lifetime.",
      "CVE-2021-3545": "An information disclosure vulnerability was found in the virtio vhost-user GPU device (vhost-user-gpu) of QEMU in versions up to and including 6.0. The flaw exists in virgl_cmd_get_capset_info() in contrib/vhost-user-gpu/virgl.c and could occur due to the read of uninitialized memory. A malicious guest could exploit this issue to leak memory from the host.",
      "CVE-2021-3546": "A flaw was found in vhost-user-gpu of QEMU in versions up to and including 6.0. An out-of-bounds write vulnerability can allow a malicious guest to crash the QEMU process on the host resulting in a denial of service or potentially execute arbitrary code on the host with the privileges of the QEMU process. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.",
      "CVE-2021-3682": "A flaw was found in the USB redirector device emulation of QEMU in versions prior to 6.1.0-rc2. It occurs when dropping packets during a bulk transfer from a SPICE client due to the packet queue being full. A malicious SPICE client could use this flaw to make QEMU call free() with faked heap chunk metadata, resulting in a crash of QEMU or potential code execution with the privileges of the QEMU process on the host.",
      "CVE-2021-3713": "An out-of-bounds write flaw was found in the UAS (USB Attached SCSI) device emulation of QEMU in versions prior to 6.2.0-rc0. The device uses the guest supplied stream number unchecked, which can lead to out-of-bounds access to the UASDevice->data3 and UASDevice->status3 fields. A malicious guest user could use this flaw to crash QEMU or potentially achieve code execution with the privileges of the QEMU process on the host."
    }
  },
  {
    "name": "tensorflow-2.4.2",
    "pname": "tensorflow",
    "version": "2.4.2",
    "affected_by": [
      "CVE-2021-37635",
      "CVE-2021-37636",
      "CVE-2021-37637",
      "CVE-2021-37638",
      "CVE-2021-37639",
      "CVE-2021-37640",
      "CVE-2021-37641",
      "CVE-2021-37642",
      "CVE-2021-37643",
      "CVE-2021-37644",
      "CVE-2021-37645",
      "CVE-2021-37646",
      "CVE-2021-37647",
      "CVE-2021-37648",
      "CVE-2021-37649",
      "CVE-2021-37650",
      "CVE-2021-37651",
      "CVE-2021-37652",
      "CVE-2021-37653",
      "CVE-2021-37654",
      "CVE-2021-37655",
      "CVE-2021-37656",
      "CVE-2021-37657",
      "CVE-2021-37658",
      "CVE-2021-37659",
      "CVE-2021-37660",
      "CVE-2021-37661",
      "CVE-2021-37662",
      "CVE-2021-37663",
      "CVE-2021-37664",
      "CVE-2021-37665",
      "CVE-2021-37666",
      "CVE-2021-37667",
      "CVE-2021-37668",
      "CVE-2021-37669",
      "CVE-2021-37670",
      "CVE-2021-37671",
      "CVE-2021-37672",
      "CVE-2021-37673",
      "CVE-2021-37674",
      "CVE-2021-37675",
      "CVE-2021-37676",
      "CVE-2021-37677",
      "CVE-2021-37678",
      "CVE-2021-37679",
      "CVE-2021-37680",
      "CVE-2021-37681",
      "CVE-2021-37682",
      "CVE-2021-37683",
      "CVE-2021-37684",
      "CVE-2021-37685",
      "CVE-2021-37686",
      "CVE-2021-37687",
      "CVE-2021-37688",
      "CVE-2021-37689",
      "CVE-2021-37690",
      "CVE-2021-37691"
    ],
    "whitelisted": [
      "CVE-2021-35958"
    ],
    "cvssv3_basescore": {
      "CVE-2021-35958": 9.1,
      "CVE-2021-37635": 7.1,
      "CVE-2021-37636": 5.5,
      "CVE-2021-37637": 5.5,
      "CVE-2021-37638": 7.8,
      "CVE-2021-37639": 7.8,
      "CVE-2021-37640": 5.5,
      "CVE-2021-37641": 7.1,
      "CVE-2021-37642": 5.5,
      "CVE-2021-37643": 7.1,
      "CVE-2021-37644": 5.5,
      "CVE-2021-37645": 5.5,
      "CVE-2021-37646": 5.5,
      "CVE-2021-37647": 5.5,
      "CVE-2021-37648": 7.8,
      "CVE-2021-37649": 5.5,
      "CVE-2021-37650": 7.8,
      "CVE-2021-37651": 7.8,
      "CVE-2021-37652": 7.8,
      "CVE-2021-37653": 5.5,
      "CVE-2021-37654": 7.1,
      "CVE-2021-37655": 7.3,
      "CVE-2021-37656": 7.8,
      "CVE-2021-37657": 7.8,
      "CVE-2021-37658": 7.8,
      "CVE-2021-37659": 7.8,
      "CVE-2021-37660": 5.5,
      "CVE-2021-37661": 5.5,
      "CVE-2021-37662": 7.8,
      "CVE-2021-37663": 7.8,
      "CVE-2021-37664": 7.1,
      "CVE-2021-37665": 7.8,
      "CVE-2021-37666": 7.8,
      "CVE-2021-37667": 7.8,
      "CVE-2021-37668": 5.5,
      "CVE-2021-37669": 5.5,
      "CVE-2021-37670": 5.5,
      "CVE-2021-37671": 7.8,
      "CVE-2021-37672": 5.5,
      "CVE-2021-37673": 5.5,
      "CVE-2021-37674": 5.5,
      "CVE-2021-37675": 5.5,
      "CVE-2021-37676": 7.8,
      "CVE-2021-37677": 5.5,
      "CVE-2021-37678": 8.8,
      "CVE-2021-37679": 7.8,
      "CVE-2021-37680": 5.5,
      "CVE-2021-37681": 7.8,
      "CVE-2021-37682": 7.1,
      "CVE-2021-37683": 5.5,
      "CVE-2021-37684": 5.5,
      "CVE-2021-37685": 5.5,
      "CVE-2021-37686": 5.5,
      "CVE-2021-37687": 5.5,
      "CVE-2021-37688": 5.5,
      "CVE-2021-37689": 5.5,
      "CVE-2021-37690": 6.6,
      "CVE-2021-37691": 5.5
    },
    "maintainers": [
      {
        "github": "jyp",
        "email": "jeanphilippe.bernardy@gmail.com"
      },
      {
        "github": "abbradar",
        "email": "ab@fmap.me"
      }
    ],
    "description": {
      "CVE-2021-35958": "** DISPUTED ** TensorFlow through 2.5.0 allows attackers to overwrite arbitrary files via a crafted archive when tf.keras.utils.get_file is used with extract=True. NOTE: the vendor's position is that tf.keras.utils.get_file is not intended for untrusted archives.",
      "CVE-2021-37635": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of sparse reduction operations in TensorFlow can trigger accesses outside of bounds of heap allocated data. The [implementation](https://github.com/tensorflow/tensorflow/blob/a1bc56203f21a5a4995311825ffaba7a670d7747/tensorflow/core/kernels/sparse_reduce_op.cc#L217-L228) fails to validate that each reduction group does not overflow and that each corresponding index does not point to outside the bounds of the input tensor. We have patched the issue in GitHub commit 87158f43f05f2720a374f3e6d22a7aaa3a33f750. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37636": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of `tf.raw_ops.SparseDenseCwiseDiv` is vulnerable to a division by 0 error. The [implementation](https://github.com/tensorflow/tensorflow/blob/a1bc56203f21a5a4995311825ffaba7a670d7747/tensorflow/core/kernels/sparse_dense_binary_op_shared.cc#L56) uses a common class for all binary operations but fails to treat the division by 0 case separately. We have patched the issue in GitHub commit d9204be9f49520cdaaeb2541d1dc5187b23f31d9. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37637": "TensorFlow is an end-to-end open source platform for machine learning. It is possible to trigger a null pointer dereference in TensorFlow by passing an invalid input to `tf.raw_ops.CompressElement`. The [implementation](https://github.com/tensorflow/tensorflow/blob/47a06f40411a69c99f381495f490536972152ac0/tensorflow/core/data/compression_utils.cc#L34) was accessing the size of a buffer obtained from the return of a separate function call before validating that said buffer is valid. We have patched the issue in GitHub commit 5dc7f6981fdaf74c8c5be41f393df705841fb7c5. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37638": "TensorFlow is an end-to-end open source platform for machine learning. Sending invalid argument for `row_partition_types` of `tf.raw_ops.RaggedTensorToTensor` API results in a null pointer dereference and undefined behavior. The [implementation](https://github.com/tensorflow/tensorflow/blob/47a06f40411a69c99f381495f490536972152ac0/tensorflow/core/kernels/ragged_tensor_to_tensor_op.cc#L328) accesses the first element of a user supplied list of values without validating that the provided list is not empty. We have patched the issue in GitHub commit 301ae88b331d37a2a16159b65b255f4f9eb39314. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37639": "TensorFlow is an end-to-end open source platform for machine learning. When restoring tensors via raw APIs, if the tensor name is not provided, TensorFlow can be tricked into dereferencing a null pointer. Alternatively, attackers can read memory outside the bounds of heap allocated data by providing some tensor names but not enough for a successful restoration. The [implementation](https://github.com/tensorflow/tensorflow/blob/47a06f40411a69c99f381495f490536972152ac0/tensorflow/core/kernels/save_restore_tensor.cc#L158-L159) retrieves the tensor list corresponding to the `tensor_name` user controlled input and immediately retrieves the tensor at the restoration index (controlled via `preferred_shard` argument). This occurs without validating that the provided list has enough values. If the list is empty this results in dereferencing a null pointer (undefined behavior). If, however, the list has some elements, if the restoration index is outside the bounds this results in heap OOB read. We have patched the issue in GitHub commit 9e82dce6e6bd1f36a57e08fa85af213e2b2f2622. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37640": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of `tf.raw_ops.SparseReshape` can be made to trigger an integral division by 0 exception. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/reshape_util.cc#L176-L181) calls the reshaping functor whenever there is at least an index in the input but does not check that shape of the input or the target shape have both a non-zero number of elements. The [reshape functor](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/reshape_util.cc#L40-L78) blindly divides by the dimensions of the target shape. Hence, if this is not checked, code will result in a division by 0. We have patched the issue in GitHub commit 4923de56ec94fff7770df259ab7f2288a74feb41. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1 as this is the other affected version.",
      "CVE-2021-37641": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions if the arguments to `tf.raw_ops.RaggedGather` don't determine a valid ragged tensor code can trigger a read from outside of bounds of heap allocated buffers. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/ragged_gather_op.cc#L70) directly reads the first dimension of a tensor shape before checking that said tensor has rank of at least 1 (i.e., it is not a scalar). Furthermore, the implementation does not check that the list given by `params_nested_splits` is not an empty list of tensors. We have patched the issue in GitHub commit a2b743f6017d7b97af1fe49087ae15f0ac634373. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37642": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of `tf.raw_ops.ResourceScatterDiv` is vulnerable to a division by 0 error. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/resource_variable_ops.cc#L865) uses a common class for all binary operations but fails to treat the division by 0 case separately. We have patched the issue in GitHub commit 4aacb30888638da75023e6601149415b39763d76. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37643": "TensorFlow is an end-to-end open source platform for machine learning. If a user does not provide a valid padding value to `tf.raw_ops.MatrixDiagPartOp`, then the code triggers a null pointer dereference (if input is empty) or produces invalid behavior, ignoring all values after the first. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/linalg/matrix_diag_op.cc#L89) reads the first value from a tensor buffer without first checking that the tensor has values to read from. We have patched the issue in GitHub commit 482da92095c4d48f8784b1f00dda4f81c28d2988. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37644": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions providing a negative element to `num_elements` list argument of `tf.raw_ops.TensorListReserve` causes the runtime to abort the process due to reallocating a `std::vector` to have a negative number of elements. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/list_kernels.cc#L312) calls `std::vector.resize()` with the new size controlled by input given by the user, without checking that this input is valid. We have patched the issue in GitHub commit 8a6e874437670045e6c7dc6154c7412b4a2135e2. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37645": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of `tf.raw_ops.QuantizeAndDequantizeV4Grad` is vulnerable to an integer overflow issue caused by converting a signed integer value to an unsigned one and then allocating memory based on this value. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/quantize_and_dequantize_op.cc#L126) uses the `axis` value as the size argument to `absl::InlinedVector` constructor. But, the constructor uses an unsigned type for the argument, so the implicit conversion transforms the negative value to a large integer. We have patched the issue in GitHub commit 96f364a1ca3009f98980021c4b32be5fdcca33a1. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, and TensorFlow 2.4.3, as these are also affected and still in supported range.",
      "CVE-2021-37646": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of `tf.raw_ops.StringNGrams` is vulnerable to an integer overflow issue caused by converting a signed integer value to an unsigned one and then allocating memory based on this value. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/string_ngrams_op.cc#L184) calls `reserve` on a `tstring` with a value that sometimes can be negative if user supplies negative `ngram_widths`. The `reserve` method calls `TF_TString_Reserve` which has an `unsigned long` argument for the size of the buffer. Hence, the implicit conversion transforms the negative value to a large integer. We have patched the issue in GitHub commit c283e542a3f422420cfdb332414543b62fc4e4a5. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37647": "TensorFlow is an end-to-end open source platform for machine learning. When a user does not supply arguments that determine a valid sparse tensor, `tf.raw_ops.SparseTensorSliceDataset` implementation can be made to dereference a null pointer. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/data/sparse_tensor_slice_dataset_op.cc#L240-L251) has some argument validation but fails to consider the case when either `indices` or `values` are provided for an empty sparse tensor when the other is not. If `indices` is empty, then [code that performs validation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/data/sparse_tensor_slice_dataset_op.cc#L260-L261) (i.e., checking that the indices are monotonically increasing) results in a null pointer dereference. If `indices` as provided by the user is empty, then `indices` in the C++ code above is backed by an empty `std::vector`, hence calling `indices->dim_size(0)` results in null pointer dereferencing (same as calling `std::vector::at()` on an empty vector). We have patched the issue in GitHub commit 02cc160e29d20631de3859c6653184e3f876b9d7. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37648": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the code for `tf.raw_ops.SaveV2` does not properly validate the inputs and an attacker can trigger a null pointer dereference. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/save_restore_v2_ops.cc) uses `ValidateInputs` to check that the input arguments are valid. This validation would have caught the illegal state represented by the reproducer above. However, the validation uses `OP_REQUIRES` which translates to setting the `Status` object of the current `OpKernelContext` to an error status, followed by an empty `return` statement which just terminates the execution of the function it is present in. However, this does not mean that the kernel execution is finalized: instead, execution continues from the next line in `Compute` that follows the call to `ValidateInputs`. This is equivalent to lacking the validation. We have patched the issue in GitHub commit 9728c60e136912a12d99ca56e106b7cce7af5986. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37649": "TensorFlow is an end-to-end open source platform for machine learning. The code for `tf.raw_ops.UncompressElement` can be made to trigger a null pointer dereference. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/data/experimental/compression_ops.cc#L50-L53) obtains a pointer to a `CompressedElement` from a `Variant` tensor and then proceeds to dereference it for decompressing. There is no check that the `Variant` tensor contained a `CompressedElement`, so the pointer is actually `nullptr`. We have patched the issue in GitHub commit 7bdf50bb4f5c54a4997c379092888546c97c3ebd. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37650": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation for `tf.raw_ops.ExperimentalDatasetToTFRecord` and `tf.raw_ops.DatasetToTFRecord` can trigger heap buffer overflow and segmentation fault. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/data/experimental/to_tf_record_op.cc#L93-L102) assumes that all records in the dataset are of string type. However, there is no check for that, and the example given above uses numeric types. We have patched the issue in GitHub commit e0b6e58c328059829c3eb968136f17aa72b6c876. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37651": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation for `tf.raw_ops.FractionalAvgPoolGrad` can be tricked into accessing data outside of bounds of heap allocated buffers. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/fractional_avg_pool_op.cc#L205) does not validate that the input tensor is non-empty. Thus, code constructs an empty `EigenDoubleMatrixMap` and then accesses this buffer with indices that are outside of the empty area. We have patched the issue in GitHub commit 0f931751fb20f565c4e94aa6df58d54a003cdb30. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37652": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation for `tf.raw_ops.BoostedTreesCreateEnsemble` can result in a use after free error if an attacker supplies specially crafted arguments. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/boosted_trees/resource_ops.cc#L55) uses a reference counted resource and decrements the refcount if the initialization fails, as it should. However, when the code was written, the resource was represented as a naked pointer but later refactoring has changed it to be a smart pointer. Thus, when the pointer leaves the scope, a subsequent `free`-ing of the resource occurs, but this fails to take into account that the refcount has already reached 0, thus the resource has been already freed. During this double-free process, members of the resource object are accessed for cleanup but they are invalid as the entire resource has been freed. We have patched the issue in GitHub commit 5ecec9c6fbdbc6be03295685190a45e7eee726ab. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37653": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a crash via a floating point exception in `tf.raw_ops.ResourceGather`. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/resource_variable_ops.cc#L725-L731) computes the value of a value, `batch_size`, and then divides by it without checking that this value is not 0. We have patched the issue in GitHub commit ac117ee8a8ea57b73d34665cdf00ef3303bc0b11. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37654": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a crash via a `CHECK`-fail in debug builds of TensorFlow using `tf.raw_ops.ResourceGather` or a read from outside the bounds of heap allocated data in the same API in a release build. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/resource_variable_ops.cc#L660-L668) does not check that the `batch_dims` value that the user supplies is less than the rank of the input tensor. Since the implementation uses several for loops over the dimensions of `tensor`, this results in reading data from outside the bounds of heap allocated buffer backing the tensor. We have patched the issue in GitHub commit bc9c546ce7015c57c2f15c168b3d9201de679a1d. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37655": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a read from outside of bounds of heap allocated data by sending invalid arguments to `tf.raw_ops.ResourceScatterUpdate`. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/resource_variable_ops.cc#L919-L923) has an incomplete validation of the relationship between the shapes of `indices` and `updates`: instead of checking that the shape of `indices` is a prefix of the shape of `updates` (so that broadcasting can happen), code only checks that the number of elements in these two tensors are in a divisibility relationship. We have patched the issue in GitHub commit 01cff3f986259d661103412a20745928c727326f. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37656": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.RaggedTensorToSparse`. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc#L30) has an incomplete validation of the splits values: it does not check that they are in increasing order. We have patched the issue in GitHub commit 1071f554dbd09f7e101324d366eec5f4fe5a3ece. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37657": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in all operations of type `tf.raw_ops.MatrixDiagV*`. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/linalg/matrix_diag_op.cc) has incomplete validation that the value of `k` is a valid tensor. We have check that this value is either a scalar or a vector, but there is no check for the number of elements. If this is an empty tensor, then code that accesses the first element of the tensor is wrong. We have patched the issue in GitHub commit f2a673bd34f0d64b8e40a551ac78989d16daad09. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37658": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in all operations of type `tf.raw_ops.MatrixSetDiagV*`. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/linalg/matrix_diag_op.cc) has incomplete validation that the value of `k` is a valid tensor. We have check that this value is either a scalar or a vector, but there is no check for the number of elements. If this is an empty tensor, then code that accesses the first element of the tensor is wrong. We have patched the issue in GitHub commit ff8894044dfae5568ecbf2ed514c1a37dc394f1b. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37659": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in all binary cwise operations that don't require broadcasting (e.g., gradients of binary cwise operations). The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/cwise_ops_common.h#L264) assumes that the two inputs have exactly the same number of elements but does not check that. Hence, when the eigen functor executes it triggers heap OOB reads and undefined behavior due to binding to nullptr. We have patched the issue in GitHub commit 93f428fd1768df147171ed674fee1fc5ab8309ec. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37660": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause a floating point exception by calling inplace operations with crafted arguments that would result in a division by 0. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/inplace_ops.cc#L283) has a logic error: it should skip processing if `x` and `v` are empty but the code uses `||` instead of `&&`. We have patched the issue in GitHub commit e86605c0a336c088b638da02135ea6f9f6753618. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37661": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause a denial of service in `boosted_trees_create_quantile_stream_resource` by using negative arguments. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/boosted_trees/quantile_ops.cc#L96) does not validate that `num_streams` only contains non-negative numbers. In turn, [this results in using this value to allocate memory](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/boosted_trees/quantiles/quantile_stream_resource.h#L31-L40). However, `reserve` receives an unsigned integer so there is an implicit conversion from a negative value to a large positive unsigned. This results in a crash from the standard library. We have patched the issue in GitHub commit 8a84f7a2b5a2b27ecf88d25bad9ac777cd2f7992. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37662": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can generate undefined behavior via a reference binding to nullptr in `BoostedTreesCalculateBestGainsPerFeature` and similar attack can occur in `BoostedTreesCalculateBestFeatureSplitV2`. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/boosted_trees/stats_ops.cc) does not validate the input values. We have patched the issue in GitHub commit 9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad and in commit 429f009d2b2c09028647dd4bb7b3f6f414bbaad7. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37663": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions due to incomplete validation in `tf.raw_ops.QuantizeV2`, an attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/quantize_op.cc#L59) has some validation but does not check that `min_range` and `max_range` both have the same non-zero number of elements. If `axis` is provided (i.e., not `-1`), then validation should check that it is a value in range for the rank of `input` tensor and then the lengths of `min_range` and `max_range` inputs match the `axis` dimension of the `input` tensor. We have patched the issue in GitHub commit 6da6620efad397c85493b8f8667b821403516708. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37664": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can read from outside of bounds of heap allocated data by sending specially crafted illegal arguments to `BoostedTreesSparseCalculateBestFeatureSplit`. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/boosted_trees/stats_ops.cc) needs to validate that each value in `stats_summary_indices` is in range. We have patched the issue in GitHub commit e84c975313e8e8e38bb2ea118196369c45c51378. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37665": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions due to incomplete validation in MKL implementation of requantization, an attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc) does not validate the dimensions of the `input` tensor. A similar issue occurs in `MklRequantizePerChannelOp`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/mkl/mkl_requantize_per_channel_op.cc) does not perform full validation for all the input arguments. We have patched the issue in GitHub commit 9e62869465573cb2d9b5053f1fa02a81fce21d69 and in the Github commit 203214568f5bc237603dbab6e1fd389f1572f5c9. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37666": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.RaggedTensorToVariant`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/ragged_tensor_to_variant_op.cc#L129) has an incomplete validation of the splits values, missing the case when the argument would be empty. We have patched the issue in GitHub commit be7a4de6adfbd303ce08be4332554dff70362612. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37667": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.UnicodeEncode`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/unicode_ops.cc#L533-L539) reads the first dimension of the `input_splits` tensor before validating that this tensor is not empty. We have patched the issue in GitHub commit 2e0ee46f1a47675152d3d865797a18358881d7a6. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37668": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause denial of service in applications serving models using `tf.raw_ops.UnravelIndex` by triggering a division by 0. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/unravel_index_op.cc#L36) does not check that the tensor subsumed by `dims` is not empty. Hence, if one element of `dims` is 0, the implementation does a division by 0. We have patched the issue in GitHub commit a776040a5e7ebf76eeb7eb923bf1ae417dd4d233. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37669": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause denial of service in applications serving models using `tf.raw_ops.NonMaxSuppressionV5` by triggering a division by 0. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/image/non_max_suppression_op.cc#L170-L271) uses a user controlled argument to resize a `std::vector`. However, as `std::vector::resize` takes the size argument as a `size_t` and `output_size` is an `int`, there is an implicit conversion to unsigned. If the attacker supplies a negative value, this conversion results in a crash. A similar issue occurs in `CombinedNonMaxSuppression`. We have patched the issue in GitHub commit 3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d and commit [b5cdbf12ffcaaffecf98f22a6be5a64bb96e4f58. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37670": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can read from outside of bounds of heap allocated data by sending specially crafted illegal arguments to `tf.raw_ops.UpperBound`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/searchsorted_op.cc#L85-L104) does not validate the rank of `sorted_input` argument. A similar issue occurs in `tf.raw_ops.LowerBound`. We have patched the issue in GitHub commit 42459e4273c2e47a3232cc16c4f4fff3b3a35c38. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37671": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.Map*` and `tf.raw_ops.OrderedMap*` operations. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/map_stage_op.cc#L222-L248) has a check in place to ensure that `indices` is in ascending order, but does not check that `indices` is not empty. We have patched the issue in GitHub commit 532f5c5a547126c634fefd43bbad1dc6417678ac. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37672": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can read from outside of bounds of heap allocated data by sending specially crafted illegal arguments to `tf.raw_ops.SdcaOptimizerV2`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/sdca_internal.cc#L320-L353) does not check that the length of `example_labels` is the same as the number of examples. We have patched the issue in GitHub commit a4e138660270e7599793fa438cd7b2fc2ce215a6. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37673": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a denial of service via a `CHECK`-fail in `tf.raw_ops.MapStage`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/map_stage_op.cc#L513) does not check that the `key` input is a valid non-empty tensor. We have patched the issue in GitHub commit d7de67733925de196ec8863a33445b73f9562d1d. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37674": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a denial of service via a segmentation fault in `tf.raw_ops.MaxPoolGrad` caused by missing validation. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/maxpooling_op.cc) misses some validation for the `orig_input` and `orig_output` tensors. The fixes for CVE-2021-29579 were incomplete. We have patched the issue in GitHub commit 136b51f10903e044308cf77117c0ed9871350475. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37675": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions most implementations of convolution operators in TensorFlow are affected by a division by 0 vulnerability where an attacker can trigger a denial of service via a crash. The shape inference [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/framework/common_shape_fns.cc#L577) is missing several validations before doing divisions and modulo operations. We have patched the issue in GitHub commit 8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37676": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.SparseFillEmptyRows`. The shape inference [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/ops/sparse_ops.cc#L608-L634) does not validate that the input arguments are not empty tensors. We have patched the issue in GitHub commit 578e634b4f1c1c684d4b4294f9e5281b2133b3ed. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37677": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the shape inference code for `tf.raw_ops.Dequantize` has a vulnerability that could trigger a denial of service via a segfault if an attacker provides invalid arguments. The shape inference [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/ops/array_ops.cc#L2999-L3014) uses `axis` to select between two different values for `minmax_rank` which is then used to retrieve tensor dimensions. However, code assumes that `axis` can be either `-1` or a value greater than `-1`, with no validation for the other values. We have patched the issue in GitHub commit da857cfa0fde8f79ad0afdbc94e88b5d4bbec764. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37678": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions TensorFlow and Keras can be tricked to perform arbitrary code execution when deserializing a Keras model from YAML format. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/python/keras/saving/model_config.py#L66-L104) uses `yaml.unsafe_load` which can perform arbitrary code execution on the input. Given that YAML format support requires a significant amount of work, we have removed it for now. We have patched the issue in GitHub commit 23d6383eb6c14084a8fc3bdf164043b974818012. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37679": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions it is possible to nest a `tf.map_fn` within another `tf.map_fn` call. However, if the input tensor is a `RaggedTensor` and there is no function signature provided, code assumes the output is a fully specified tensor and fills output buffer with uninitialized contents from the heap. The `t` and `z` outputs should be identical, however this is not the case. The last row of `t` contains data from the heap which can be used to leak other memory information. The bug lies in the conversion from a `Variant` tensor to a `RaggedTensor`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/ragged_tensor_from_variant_op.cc#L177-L190) does not check that all inner shapes match and this results in the additional dimensions. The same implementation can result in data loss, if input tensor is tweaked. We have patched the issue in GitHub commit 4e2565483d0ffcadc719bd44893fb7f609bb5f12. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37680": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of fully connected layers in TFLite is [vulnerable to a division by zero error](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/fully_connected.cc#L226). We have patched the issue in GitHub commit 718721986aa137691ee23f03638867151f74935f. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37681": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of SVDF in TFLite is [vulnerable to a null pointer error](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/svdf.cc#L300-L313). The [`GetVariableInput` function](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/kernel_util.cc#L115-L119) can return a null pointer but `GetTensorData` assumes that the argument is always a valid tensor. Furthermore, because `GetVariableInput` calls [`GetMutableInput`](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/kernel_util.cc#L82-L90) which might return `nullptr`, the `tensor->is_variable` expression can also trigger a null pointer exception. We have patched the issue in GitHub commit 5b048e87e4e55990dae6b547add4dae59f4e1c76. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37682": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions all TFLite operations that use quantization can be made to use unitialized values. [For example](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/depthwise_conv.cc#L198-L200). The issue stems from the fact that `quantization.params` is only valid if `quantization.type` is different that `kTfLiteNoQuantization`. However, these checks are missing in large parts of the code. We have patched the issue in GitHub commits 537bc7c723439b9194a358f64d871dd326c18887, 4a91f2069f7145aab6ba2d8cfe41be8a110c18a5 and 8933b8a21280696ab119b63263babdb54c298538. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37683": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of division in TFLite is [vulnerable to a division by 0 error](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/div.cc). There is no check that the divisor tensor does not contain zero elements. We have patched the issue in GitHub commit 1e206baedf8bef0334cca3eb92bab134ef525a28. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37684": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementations of pooling in TFLite are vulnerable to division by 0 errors as there are no checks for divisors not being 0. We have patched the issue in GitHub commit [dfa22b348b70bb89d6d6ec0ff53973bacb4f4695](https://github.com/tensorflow/tensorflow/commit/dfa22b348b70bb89d6d6ec0ff53973bacb4f4695). The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37685": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions TFLite's [`expand_dims.cc`](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50) contains a vulnerability which allows reading one element outside of bounds of heap allocated data. If `axis` is a large negative value (e.g., `-100000`), then after the first `if` it would still be negative. The check following the `if` statement will pass and the `for` loop would read one element before the start of `input_dims.data` (when `i = 0`). We have patched the issue in GitHub commit d94ffe08a65400f898241c0374e9edc6fa8ed257. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37686": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the strided slice implementation in TFLite has a logic bug which can allow an attacker to trigger an infinite loop. This arises from newly introduced support for [ellipsis in axis definition](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/strided_slice.cc#L103-L122). An attacker can craft a model such that `ellipsis_end_idx` is smaller than `i` (e.g., always negative). In this case, the inner loop does not increase `i` and the `continue` statement causes execution to skip over the preincrement at the end of the outer loop. We have patched the issue in GitHub commit dfa22b348b70bb89d6d6ec0ff53973bacb4f4695. TensorFlow 2.6.0 is the only affected version.",
      "CVE-2021-37687": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions TFLite's [`GatherNd` implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124) does not support negative indices but there are no checks for this situation. Hence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in `indices`. Similar issue exists in [`Gather` implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc). We have patched the issue in GitHub commits bb6a0383ed553c286f87ca88c207f6774d5c4a8f and eb921122119a6b6e470ee98b89e65d721663179d. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37688": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service. The [implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285) unconditionally dereferences a pointer. We have patched the issue in GitHub commit 15691e456c7dc9bd6be203b09765b063bf4a380c. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37689": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service. This is caused by the MLIR optimization of `L2NormalizeReduceAxis` operator. The [implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70) unconditionally dereferences a pointer to an iterator to a vector without checking that the vector has elements. We have patched the issue in GitHub commit d6b57f461b39fd1aa8c1b870f1b974aac3554955. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37690": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions when running shape functions, some functions (such as `MutableHashTableShape`) produce extra output information in the form of a `ShapeAndType` struct. The shapes embedded in this struct are owned by an inference context that is cleaned up almost immediately; if the upstream code attempts to access this shape information, it can trigger a segfault. `ShapeRefiner` is mitigating this for normal output shapes by cloning them (and thus putting the newly created shape under ownership of an inference context that will not die), but we were not doing the same for shapes and types. This commit fixes that by doing similar logic on output shapes and types. We have patched the issue in GitHub commit ee119d4a498979525046fba1c3dd3f13a039fbb1. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "CVE-2021-37691": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can craft a TFLite model that would trigger a division by zero error in LSH [implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/lsh_projection.cc#L118). We have patched the issue in GitHub commit 0575b640091680cfb70f4dd93e70658de43b94f9. The fix will be included in TensorFlow 2.6.0. We will also cherrypick thiscommit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range."
    }
  },
  {
    "name": "thunderbird-78.14.0",
    "pname": "thunderbird",
    "version": "78.14.0",
    "affected_by": [
      "CVE-2021-29981",
      "CVE-2021-29982",
      "CVE-2021-29987"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-29981": 8.8,
      "CVE-2021-29982": 6.5,
      "CVE-2021-29987": 6.5
    },
    "maintainers": [
      {
        "github": "edolstra",
        "email": "edolstra+nixpkgs@gmail.com"
      },
      {
        "github": "lovesegfault",
        "email": "meurerbernardo@gmail.com"
      },
      {
        "github": "nbp",
        "email": "nixos@nbp.name"
      },
      {
        "github": "vcunat",
        "email": "v@cunat.cz"
      }
    ],
    "description": {
      "CVE-2021-29981": "An issue present in lowering/register allocation could have led to obscure but deterministic register confusion failures in JITted code that would lead to a potentially exploitable crash. This vulnerability affects Firefox < 91 and Thunderbird < 91.",
      "CVE-2021-29982": "Due to incorrect JIT optimization, we incorrectly interpreted data from the wrong type of object, resulting in the potential leak of a single bit of memory. This vulnerability affects Firefox < 91 and Thunderbird < 91.",
      "CVE-2021-29987": "After requesting multiple permissions, and closing the first permission panel, subsequent permission panels will be displayed in a different position but still record a click in the default location, making it possible to trick a user into accepting a permission they did not want to. *This bug only affects Firefox on Linux. Other operating systems are unaffected.*. This vulnerability affects Firefox < 91 and Thunderbird < 91."
    }
  },
  {
    "name": "vim-8.2.3337",
    "pname": "vim",
    "version": "8.2.3337",
    "affected_by": [
      "CVE-2021-3770"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-3770": 7.8
    },
    "maintainers": [
      {
        "github": "lovek323",
        "email": "jason@oconal.id.au"
      },
      {
        "github": "equirosa",
        "email": "eduardo@eduardoquiros.com"
      }
    ],
    "description": {
      "CVE-2021-3770": "vim is vulnerable to Heap-based Buffer Overflow"
    }
  },
  {
    "name": "wasm3-0.5.0",
    "pname": "wasm3",
    "version": "0.5.0",
    "affected_by": [
      "CVE-2021-38592"
    ],
    "whitelisted": [],
    "cvssv3_basescore": {
      "CVE-2021-38592": 7.5
    },
    "maintainers": [
      {
        "github": "malbarbo",
        "email": "malbarbo@gmail.com"
      }
    ],
    "description": {
      "CVE-2021-38592": "Wasm3 0.5.0 has a heap-based buffer overflow in op_Const64 (called from EvaluateExpression and m3_LoadModule)."
    }
  }
]
